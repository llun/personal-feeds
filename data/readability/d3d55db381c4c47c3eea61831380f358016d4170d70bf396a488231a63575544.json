{"title":"[Redis] แจ้งเตือน Key expired โดย Key space notifications ผ่าน Nodejs กัน","link":"https://thanapon.info/nodejs-keyevent-notification/","date":1602594783000,"content":"<div id=\"readability-page-1\" class=\"page\"><div id=\"post-98\"><div><p><span>October 13, 2020</span> <span><a href=\"https://thanapon.info/category/nodejs/\" rel=\"category tag\">NodeJs</a>, <a href=\"https://thanapon.info/category/redis/\" rel=\"category tag\">Redis</a></span></p></div><p><img width=\"800\" height=\"375\" src=\"https://thanapon.info/wp-content/uploads/2020/04/New-Project1.png\" alt=\"[Redis] แจ้งเตือน Key expired โดย Key space notifications ผ่าน Nodejs กัน\" loading=\"lazy\" srcset=\"https://thanapon.info/wp-content/uploads/2020/04/New-Project1.png 800w, https://thanapon.info/wp-content/uploads/2020/04/New-Project1-300x141.png 300w, https://thanapon.info/wp-content/uploads/2020/04/New-Project1-768x360.png 768w, https://thanapon.info/wp-content/uploads/2020/04/New-Project1-600x281.png 600w\" sizes=\"(max-width: 800px) 100vw, 800px\"></p><div><p data-selectable-paragraph=\"\">ก่อนอื่นขอเกริ่นก่อนนะครับ พอดีว่าที่ทำงานผมมีโปรเจคหนึ่งที่กำลังทำอยู่เกี่ยวกับการซื้อขายแต่ โจทย์มีอยู่ว่า หลังจากการซื้อขายนั้นเงินจะยังไม่ถูกโอนไปยังคนขายจะต้องรอการยืนยันบางอย่างก่อนแล้วของที่ผู้ขายจะถูกจองไว้เป็นเวลา 2 วัน ถ้าหากสองวันนั้นไม่มีการยืนยันตัว transaction นั้นก็จะถูกยกเลิกไป แล้วของที่อยู่ในสถานะการจองก็จะถูกยกเลิกเหมือนกัน</p><p data-selectable-paragraph=\"\">หลังจากที่ค้นหาข้อมูลวิธีการทำให้ง่ายที่สุดตามสไตล์คนขี้เกียจแล้วก็ได้ไปเจอ feature Key space notifications ที่เจ๋งสุดๆของ Redis เข้าให้โดยหลักการทำงานก็จะเป็น Publish/Subscribe โดยที่หลักจากที่ key ของเราหมดอายุมันก็จะส่ง event Expired มาที่ Application ของเราจาก Topic/Channel ที่เราไป subscribe นั้นเอง</p><h2 data-selectable-paragraph=\"\">เริ่มต้นสำหรับคนที่ไม่มี Redis อย่างผมก็ต้องลง Redis ผ่าน docker ก่อนนะครับ</h2><pre>$ docker run -d --name redis-notification -p 6379:6379 redis</pre><p data-selectable-paragraph=\"\">ซึ่งหลังจากที่รัน docker แล้วผมได้ทำการสร้าง project ขึ้นมาใหม่จาก express-generator ขอใช้ชื่อว่า nodejs-redis-keyspace-notifications ละกันครับ</p><p data-selectable-paragraph=\"\">จากนั้นติดตั้ง package ioRedis ซึ่งเป็น redis client สำหรับเชื่อมต่อกับ service Redis ของเรา</p><pre>$ npm install ioredis</pre><p data-selectable-paragraph=\"\">เพิ่ม configuration สำหรับ Redis เข้าไปที่ app.js</p><div><pre data-lang=\"JavaScript\"><code data-hcb-clip=\"1\"><span>// Redis configuration</span>\n<span>const</span> ioRedis <span>=</span> <span>require</span><span>(</span><span>'ioredis'</span><span>)</span>\n<span>const</span> host <span>=</span> <span>'localhost'</span>\n<span>const</span> port <span>=</span> <span>6379</span>\n<span>const</span> db <span>=</span> <span>0</span>\n<span>const</span> password <span>=</span> <span>''</span><span>/* Setup redis client and set key-space-notification event when key expired */</span>\n<span>const</span> redis <span>=</span> <span>new</span> <span>ioRedis</span><span>(</span><span>{</span>host<span>,</span> port<span>,</span> db<span>,</span> password<span>}</span><span>)</span>\nredis<span>.</span><span>on</span><span>(</span><span>'ready'</span><span>,</span> <span>(</span><span>)</span><span>=&gt;</span> <span>{</span>\n    redis<span>.</span><span>config</span><span>(</span><span>'SET'</span><span>,</span> <span>'notify-keyspace-events'</span><span>,</span> <span>'Ex'</span><span>)</span>\n<span>}</span><span>)</span></code></pre></div><blockquote><p>SET notify-keyspace-events EX เป็นการกำหนดให้ service redis enable feature notify-keyspace-events ซึ่ง parameter E หมายถึงการ กำหนด Keyevent event ให้ publish ข้อความออกมาโดยเราจะต้องไป subscribe topic = “__keyevent@&lt;db&gt;__ prefix” ส่วน parameter x คือ expired event จะถูกสร้างขึ้นหลังจากที่ key นั้นๆ ของเรา expired ไปแล้ว</p></blockquote><p>หลังจากเรา config ค่าสำหรับ client ที่จะไปเชื่อมต่อ Service Redis เสร็จแล้วให้เรา Client สำหรับ subscribe topic Expired ที่ถูก publish มาจาก Redis ของเรา</p><div><pre data-lang=\"JavaScript\"><code data-hcb-clip=\"2\"><span>const</span> subscriber <span>=</span> <span>new</span> <span>ioRedis</span><span>(</span><span>{</span> host<span>,</span> port<span>,</span> db<span>,</span> password <span>}</span><span>)</span>\nsubscriber<span>.</span><span>subscribe</span><span>(</span><span>\"__keyevent@0__:expired\"</span><span>)</span>\nsubscriber<span>.</span><span>on</span><span>(</span><span>'message'</span><span>,</span><span>async</span> <span>(</span><span>channel<span>,</span> message</span><span>)</span> <span>=&gt;</span> <span>{</span>\n    <span>// Do somethings</span>\n    console<span>.</span><span>log</span><span>(</span>message<span>)</span><span>;</span>\n<span>}</span><span>)</span></code></pre></div><p>เป็นอันเสร็จสิ้นสำหรับการ config จากนั้นทดสอบรัน application ของเราดูครับ</p><h2>ทดสอบรันก่อน~~</h2><div><figure><img src=\"https://miro.medium.com/max/1132/1*sY8jBIyCWydyKwoWz7XV6A.png\" alt=\"Image for post\"></figure></div><p>รันผ่านแล้วสามารถเชื่อมต่อกับ Service Redis ได้แล้ว จากนั้นลอง set คีย์พร้อมกับกำหนด expired time เข้าไปสัก 5 วินาทีครับ</p><div><figure><img src=\"https://miro.medium.com/max/539/1*fE_xmUjuq49SS5bUUfIQCg.png\" alt=\"Image for post\"></figure></div><p>หลังจากผ่านไป 5 วินาที Service Redis ก็ส่ง event มาด้วย เป็นอันว่า application ของเราทำงานโดยไม่พบ <em>BUG</em> ครับ 55555</p><div><figure><img src=\"https://miro.medium.com/max/1056/1*15K5WABDaKC4vZ_0munghg.png\" alt=\"Image for post\"></figure></div><p>เป็นอันว่าโปรเจคที่ทำงานของผมก็เดินหน้าต่อไปได้แล้วครับ 5555 ขอบคุณทุกท่านที่เข้ามาอ่านกันนะครับ สำหรับวันนี้ขอบคุณและสวัสดีครับ</p><p>ส่วนตรงนี้เป็น github ของตัว project นะครับพี่ๆน้องๆ สามารถ clone มาลองเล่นดูกันได้ครับ</p><blockquote><p><a href=\"https://github.com/toygame/nodejs-redis-keyspace-notifications\">nodejs-redis-keyspace-notifications</a></p><cite>https://github.com/toygame/nodejs-redis-keyspace-notifications</cite></blockquote><blockquote><p><a href=\"https://redis.io/topics/notifications\">redis.io/topics/notifications</a></p><cite>Keyspace notifications allow clients to subscribe to Pub/Sub channels in order to receive events affecting the Redis data set in some way.</cite></blockquote><blockquote><p><a href=\"https://github.com/luin/ioredis\">github.com/luin/ioredis</a></p><cite>ioredis is a robust, full-featured Redis client that is used in the world’s biggest online commerce company Alibaba and many other awesome companies.</cite></blockquote></div></div></div>","author":"thanapon.tap","siteTitle":"Thanapon","siteHash":"6a039c2f54d76e4c49227d80968f2a30de5427cc57525c047c383ea3563cde5f","entryHash":"d3d55db381c4c47c3eea61831380f358016d4170d70bf396a488231a63575544","category":"Thai"}