{"title":"ปัญหาการจ้างเลขาและค่า $1/e$","link":"https://neizod.github.io/2020/11/07/secretary-problem-and-one-over-e.html","date":1604715507000,"content":"<div id=\"readability-page-1\" class=\"page\"><div><p>ลองจินตนาการว่าเรากำลังจะเปิดบริษัท<a href=\"https://en.wikipedia.org/wiki/Secretary_problem\">แต่ยังขาดพนักงานเลขา</a> ซึ่งตำแหน่งดังกล่าวถือว่าเป็นตำแหน่งฮอตฮิตที่บริษัทไหนๆ ก็ต่างแย่งชิงตัว การเรียกผู้สมัครมาสัมภาษณ์งานจึงจำเป็นต้องตอบรับทันทีเดี๋ยวนั้น มิเช่นนั้นแล้วก็รับประกันได้เลยว่าผู้สมัครจะถูกบริษัทอื่นแย่งตัวไปในทันทีที่เขาก้าวเท้าออกจากออฟฟิศ</p><p>สมมติว่าเราสามารถเรียกผู้สมัครมาสัมภาษณ์ได้มากที่สุด <span>n</span> คน โดยถือว่าก่อนสัมภาษณ์เราไม่รู้อะไรเกี่ยวกับผู้สมัครเลย และเมื่อสัมภาษณ์เสร็จเราก็จะบอกได้แค่ว่าผู้สมัครคนนี้ดีกว่าหรือแย่กว่าผู้สมัครคนก่อนๆ ที่เคยสัมภาษณ์ เราจะมีเทคนิคอย่างไรในการเฟ้นหาผู้สมัครเพียงหนึ่งคนที่ดีที่สุด?</p><p>มองเผินๆ นี่อาจจะดูเหมือนปัญหาที่ไม่น่าเป็นไปได้ ในเมื่อเราไม่รู้ว่าใครดีกว่าใครจนกว่าจะได้สัมภาษณ์ แต่พอสัมภาษณ์เสร็จก็ต้องตอบรับว่าจะให้ร่วมทางกับบริษัทเราหรือไม่ซะแล้ว หากเราถอดใจไม่วางแผนใดๆ และเลือกตอบรับผู้สมัครแบบสุ่ม โอกาสที่จะได้ผู้สมัครที่ดีที่สุดก็จะมีเพียงแค่ <span>1/n</span> เท่านั้น</p><p>แต่เนื่องจากเราสามารถเปรียบเทียบผู้สมัครได้ หากเราลองสัมภาษณ์ผู้สมัครคนแรกดูก่อน (และต้องแข็งใจบอกปฏิเสธไป) เพื่อเป็นบรรทัดฐานว่าเราอยากได้ผู้สมัครประมาณไหน เมื่อสัมภาษณ์ต่อไปและพบว่าผู้สมัครคนที่สองดีกว่าคนแรก อย่างน้อยโอกาสที่เขาจะเป็นผู้สมัครที่ดีที่สุดก็มีมากกว่าการสุ่มแน่ๆ</p><blockquote><p><img src=\"https://neizod.dev/images/algorithm/misc/secretary.png\" alt=\"\"></p></blockquote><p>หากเราแบ่งการสัมภาษณ์ออกเป็น 2 ช่วง โดยช่วงแรกสัมภาษณ์ผู้สมัครเป็นสัดส่วน <span>0&lt;r\\le 1</span> ต่อผู้สมัครทั้งหมด เพื่อหาบรรทัดฐานของผู้สมัครที่เราต้องการ แล้วในช่วงหลังจึงสัมภาษณ์ผู้สมัครที่เหลือ เมื่อใดที่เจอผู้สมัครที่ดีกว่าทุกคนที่เคยเจอมา เราจะตอบรับให้ผู้สมัครคนนี้มาร่วมงานทันที โอกาสที่ผู้สมัครคนนี้จะเป็นผู้สมัครที่ดีที่สุดก็คือ</p><p><span>P(\\text{pick $1^{st}$}) = \\sum_{k=1}^n P(\\text{baseline is $k^{th}$}) \\cdot P(\\text{saw $k^{th}$ pick $1^{st}$}) \\\\</span></p><p>โดยที่</p><ul><li><span>1^{st}</span> คือผู้สมัครที่ดีที่สุด (อันดับหนึ่ง) <span>n^{th}</span> คือผู้สมัครที่แย่ที่สุด และไม่มีใครอยู่อันดับเดียวกัน</li><li><span>\\text{pick $1^{st}$}</span> แทนเหตุการณ์ที่ได้ผู้สมัครที่ดีที่สุดจากกระบวนการทั้งหมด</li><li><span>\\text{baseline is $k^{th}$}</span> แทนเหตุการณ์ที่ผู้สมัครอันดับที่ <span>k^{th}</span> เป็นบรรทัดฐานในการสัมภาษณ์ช่วงแรก</li><li><span>\\text{saw $k^{th}$ pick $1^{st}$}</span> แทนเหตุการณ์ที่ใช้ <span>k^{th}</span> เป็นฐานแล้วได้ผู้สมัครที่ดีที่สุดในการสัมภาษณ์ช่วงหลัง</li></ul><p>ซึ่งเราจะเห็นว่า</p><ul><li><span>\\text{saw $1^{th}$ pick $1^{st}$}</span> เป็นไปไม่ได้</li><li><span>\\text{baseline is $k^{th}$}</span> หมายความว่า ในการสัมภาษณ์ช่วงแรก นอกจากจะเห็นผู้สมัครอันดับที่ <span>k^{th}</span> แล้ว จะต้องไม่เห็นผู้สมัครตั้งแต่อันดับ <span>1^{st}</span> ถึง <span>(k-1)^{th}</span> ด้วย</li></ul><p>หาก <span>n</span> มีขนาดเล็กเราจะต้องคำนวณแตกกรณียิบย่อยมากมาย ดังนั้นจะพิจารณาเฉพาะเมื่อ <span>n</span> มีขนาดใหญ่ ที่เราจะเห็นว่าพจน์หลังๆ มีค่าลดลงอย่างรวดเร็ว ทำให้เราสามารถประมาณด้วยอนุกรมอนันต์ได้ ซึ่งก็คือ</p><p><span>\\begin{align} P(\\text{pick $1^{st}$}) &amp;= \\sum_{k=1}^n P(\\text{baseline is $k^{th}$}) \\cdot P(\\text{saw $k^{th}$ pick $1^{st}$}) \\\\ &amp;\\approx r \\cdot 0 + r \\left( 1 - r \\right) \\cdot 1 + r \\left( 1 - r \\right)^2 \\cdot \\frac12 + r \\left( 1 - r \\right)^3 \\cdot \\frac13 + \\dots \\\\ &amp;= r \\sum_{k=1}^\\infty \\frac{\\left( 1 - r \\right)^k}{k} \\end{align}</span></p><p>ให้ <span>x=(1-r)</span> ปัญหาย่อยของเราจะแปลงไปเป็นการหาผลลัพธ์ของ<a href=\"https://en.wikipedia.org/wiki/Harmonic_series_(mathematics)\">อนุกรมฮาร์โมนิค</a> ที่แต่ละพจน์มีผลคูณของเลขยกกำลังติดมาด้วย ดังนี้</p><p><span>\\sum_{k=1}^\\infty \\frac{x^k}k = x + \\frac{x^2}2 + \\frac{x^3}3 + \\frac{x^4}4 + \\dots</span></p><p>ซึ่งเราสามารถใช้<a href=\"https://en.wikipedia.org/wiki/Taylor_series\">อนุกรมเทย์เลอร์</a>มาช่วยแก้ได้ โดยเทคนิคคือเลือกใช้ฟังก์ชันที่อนุพันธ์อันดับ <span>k</span> มีพจน์ <span>(k-1)!</span> โผล่เข้ามา เพื่อที่เราจะได้เอาไปตัดกับ <span>1/k!</span> จากการกระจายเทย์เลอร์ จนได้ผลลัพธ์เป็นอนุกรมในรูปฮาร์โมนิคอย่างที่เราต้องการ ซึ่งฟังก์ชันที่มีสมบัติดังกล่าวก็คือฟังก์ชันตระกูล <span>\\log</span> นั่นเอง</p><p><span>\\begin{array}{c|c|c} f(x) &amp; \\log x &amp; \\log(1-x) \\\\ \\hline f'(x) &amp; \\frac1x &amp; -\\frac1{1-x} \\\\ f''(x) &amp; -\\frac1{x^2} &amp; -\\frac1{(1-x)^2} \\\\ f^{(3)}(x) &amp; \\frac{2!}{x^3} &amp; -\\frac{2!}{(1-x)^3} \\\\ f^{(4)}(x) &amp; -\\frac{3!}{x^4} &amp; -\\frac{3!}{(1-x)^4} \\\\ \\vdots \\\\ f^{(k)}(x) &amp; \\frac{(-1)^{k+1}(k-1)!}{x^k} &amp; -\\frac{(k-1)!}{(1-x)^k} \\end{array}</span></p><p>เลือกกระจาย <span>\\log (1-x)</span> รอบจุด 0 จะได้ว่า</p><p><span>\\begin{align} \\log(1-x) &amp;= \\sum_{k=1}^\\infty \\frac{f^{(k)}(0)}{k!}(x-0)^k \\\\ &amp;= \\sum_{k=1}^\\infty - \\frac{(k-1)!}{(1-0^k)k!}x^k \\\\ &amp;= - \\sum_{k=1}^\\infty \\frac{x^k}{k} \\end{align}</span></p><p>ดังนั้น</p><p><span>P(\\text{pick $1^{st}$}) \\approx - r \\log r</span></p><p>แล้วใช้เทคนิคอนุพันธ์จากแคลคูลัสเพื่อหาค่า <span>r</span> ที่เหมาะสม</p><p><span>\\begin{align} 0 &amp;= \\frac{d}{dr} (-r) \\log r \\\\ &amp;= (-r) \\frac{d}{dr}\\log r + \\log r \\frac{d}{dr}(-r) \\\\ &amp;= -1 - \\log r \\\\ r &amp;= \\frac1e \\end{align}</span></p><p>ก็จะได้คำตอบว่า สัดส่วนที่เหมาะสมที่สุดที่ควรใช้หาบรรทัดฐานในช่วงแรก คือ <span>1/e \\approx 36.8\\%</span> นั่นเอง นอกจากนี้เมื่อย้อนกลับไปคำนวณความน่าจะเป็น ก็จะเห็นว่า <span>P(\\text{pick $1^{st}$}) \\approx 1/e</span> อีกด้วย!</p><p>และแนวทางการวิเคราะห์ข้างต้นก็สามารถนำไปใช้หาความน่าจะเป็นที่จะได้ผู้สมัครในอันดับอื่นๆ ได้เช่นกัน ดังตัวอย่างอันดับแรกๆ ดังนี้</p><p><span>\\begin{align} P(\\text{pick $2^{nd}$}) &amp;\\approx P(\\text{pick $1^{st}$}) - \\frac1e \\left( 1 - \\frac1e \\right) &amp;\\approx 13.6\\% \\\\ P(\\text{pick $3^{rd}$}) &amp;\\approx P(\\text{pick $2^{nd}$}) - \\frac1{2e} \\left( 1 - \\frac1e \\right)^2 &amp;\\approx 6.2\\% \\\\ P(\\text{pick $4^{th}$}) &amp;\\approx P(\\text{pick $3^{rd}$}) - \\frac1{3e} \\left( 1 - \\frac1e \\right)^3 &amp;\\approx 3.1\\% \\\\ P(\\text{pick $5^{th}$}) &amp;\\approx P(\\text{pick $4^{th}$}) - \\frac1{4e} \\left( 1 - \\frac1e \\right)^4 &amp;\\approx 1.6\\% \\end{align}</span></p><p>จะเห็นว่าด้วยวิธีนี้โอกาสที่จะได้ผู้สมัครที่ดีที่สุดสองอันดับแรกก็กินไปแล้วถึงครึ่งนึง 🤯</p><div><p><img src=\"https://neizod.dev/images/people/neizod.png\" width=\"72\" height=\"72\"></p></div></div></div>","author":"","siteTitle":"neizod's speculation","siteHash":"939338c5557b1743f2c128736c6006e145dcabc81da9970f1c0dc8ae2feb0830","entryHash":"6845c8673154c2ef1e62b050f266f6ca6500d63240c5a2f88ab460a5a330ea88","category":"Thai"}