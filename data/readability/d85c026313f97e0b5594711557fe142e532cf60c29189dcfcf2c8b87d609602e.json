{"title":"FreeBSD kernel-mode WireGuard moves forward out-of-tree","link":"https://arstechnica.com/?p=1750499","date":1616018456000,"content":"<div id=\"readability-page-1\" class=\"page\"><div><h4>vpn in the box —</h4><h2 itemprop=\"description\">Development has been moved to Donenfeld's own zx2c4.com for the time being.</h2></div><div itemprop=\"articleBody\"><figure><img src=\"https://cdn.arstechnica.net/wp-content/uploads/2021/03/wireguard-in-the-box-800x450.jpg\" alt=\"♫ <em>Pop</em> goes the tunnel! ♫\"><figcaption><p><a href=\"https://cdn.arstechnica.net/wp-content/uploads/2021/03/wireguard-in-the-box.jpg\" data-height=\"563\" data-width=\"1000\">Enlarge</a> <span>/</span> ♫ <em>Pop</em> goes the tunnel! ♫</p><p>Aurich Lawson</p></figcaption></figure><p>Earlier this week, we covered <a href=\"https://arstechnica.com/gadgets/2021/03/in-kernel-wireguard-is-on-its-way-to-freebsd-and-the-pfsense-router/\">progress</a>&nbsp;integrating an implementation of the WireGuard VPN protocol into the FreeBSD kernel. Two days later, there's an update—kernel-mode WireGuard has been moved out of FreeBSD 13 development entirely for the time being.</p><p>The change only affects kernel-mode WireGuard. User-mode WireGuard has been available in FreeBSD since 2019 and remains, unaffected. If you <code>pkg install wireguard</code>, you get user-mode WireGuard, better known as <code>wireguard-go</code>. Wireguard-go is potentially less performant than kernel-mode, but it's stable and more than fast enough to keep up with most use cases.</p><p>The removal is actually good news for FreeBSD users and WireGuard users. Although the new kernel work done by WireGuard founder Jason Donenfeld, FreeBSD developer Kyle Evans, and OpenBSD developer Matt Dunwoodie represented a clear step forward, it was deemed too rushed to go out in a production kernel. This is a decision heartily endorsed by Donenfeld himself, who prefers a steadier development process with more code reviews and consensus.</p><p>Donenfeld <a href=\"https://lists.zx2c4.com/pipermail/wireguard/2021-March/006518.html\">announced</a> the migration of development from FreeBSD 13-CURRENT to his own <code>git</code> repository earlier today.&nbsp;The new snapshot no longer relies on&nbsp;<code>ifconfig</code>&nbsp;extensions to build tunnels; it uses <code>wg</code>&nbsp;and <code>wg-quick</code>&nbsp;commands similarly to Linux, Windows, and Android builds instead. Although the code works, Donenfeld warns&nbsp;that it shouldn't be considered production-ready yet:</p><blockquote><p>At this time this code is new, unvetted, possibly buggy, and should be considered \"experimental\". It might contain security issues. We gladly welcome your testing and bug reports, but do keep in mind that this code is new, so some caution should be exercised at the moment for using it in mission critical environments.</p><p>In my small testing so far, however, it seems to \"basically work\". And at the very least, those relying on the code that was prior in the FreeBSD tree now have some immediate continuity.</p><p>Over the next days and weeks, it can be expected that this repository will improve and grow.</p><p>Enjoy!</p></blockquote><p>Eventually, this kernel-mode FreeBSD WireGuard should be available from FreeBSD's ports tree. For the moment, those interested in testing it will need to <code>git clone</code>&nbsp;it from the WireGuard repos themselves, followed by the BSD-style <code>make load ; make install</code>&nbsp;commands to build from source.</p><p>This is an ongoing story, and we will continue to follow events as they develop.</p></div></div>","author":"Jim Salter","siteTitle":"Ars Technica","siteHash":"5b0ddf6e8923e49262a7894cfd77962733e43fbcc565a103b48373820b310636","entryHash":"d85c026313f97e0b5594711557fe142e532cf60c29189dcfcf2c8b87d609602e","category":"Tech"}