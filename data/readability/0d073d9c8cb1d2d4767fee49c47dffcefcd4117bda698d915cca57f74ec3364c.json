{"title":"แนวทางการพัฒนา REST API และ API Documentation","link":"https://www.somkiat.cc/rest-api-and-api-documentation/","date":1612796977000,"content":"<div id=\"readability-page-1\" class=\"page\"><div id=\"page\"><article><div id=\"content_box\"><header><div><p><time>February 8, 2021</time> <span><a href=\"https://www.somkiat.cc/category/programming/\" rel=\"category tag\">Programming</a>, <a href=\"https://www.somkiat.cc/category/tools/\" rel=\"category tag\">Tools</a></span></p></div></header><div><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/02/openapi-696x428-1.png\" alt=\"\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/02/openapi-696x428-1.png 696w, https://www.somkiat.cc/wp-content/uploads/2021/02/openapi-696x428-1-300x184.png 300w\" sizes=\"(max-width: 696px) 100vw, 696px\"></figure><p>จากบทความเรื่อง<br><strong><a href=\"https://medium.com/linedevth/%E0%B8%A3%E0%B8%A7%E0%B8%A1-tips-tricks%E0%B9%83%E0%B8%99%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B9%83%E0%B8%8A%E0%B9%89-swaggo-%E0%B8%AA%E0%B8%A3%E0%B9%89%E0%B8%B2%E0%B8%87-swagger-ui-%E0%B9%83%E0%B8%AB%E0%B9%89%E0%B8%81%E0%B8%B1%E0%B8%9A-gin-rest-api-76d08985e873\" target=\"_blank\" rel=\"noreferrer noopener\">รวม Tips &amp; Tricksในการสร้าง Swagger UI ให้กับ Gin REST API ด้วย Swaggo</a></strong><br>อธิบายถึงการสร้าง API Documentation<br>โดยทำการสร้างมาจาก Code Annotation ในส่วนของ comment<br>ด้วย command swag<br>ซึ่งเป็นแนวทางหนึ่งในการสร้างเอกสารขึ้นมา</p><p><strong><em>แต่ก็ยังไม่แนวทางอื่น ๆ ใช้งานเช่นกัน</em></strong></p><p><strong>ยกตัวอย่างเช่น</strong></p><p>การเขียน API Specification ในรูปแบบของ<br><strong><a rel=\"noreferrer noopener\" href=\"https://swagger.io/specification\" target=\"_blank\">Swagger 3 หรือ Open API specification</a></strong> ก่อน<br>ทั้งในรูปแบบ XML, JSON และ YAML เป็นต้น<br>จากนั้นทำการ generate source code ของ REST API หรือ Web Services ขึ้นมา<br>ให้แบบอัตโนมัติผ่านเครื่องมือที่สนับสนุน Swagger<br>แต่ต้องดูด้วยว่าสนับสนุน Swagger version ไหนบ้างด้วย (2 หรือ 3)</p><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/02/openapi-swagger-specification.png\" alt=\"\" width=\"490\" height=\"267\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/02/openapi-swagger-specification.png 642w, https://www.somkiat.cc/wp-content/uploads/2021/02/openapi-swagger-specification-300x164.png 300w\" sizes=\"(max-width: 490px) 100vw, 490px\"></figure><p><strong>ตัวอย่างของเครื่องมือ เช่น</strong></p><ul><li><strong><a href=\"https://github.com/swagger-api/swagger-codegen\" target=\"_blank\" rel=\"noreferrer noopener\">Swagger codegen</a></strong> สำหรับการ generate code ในภาษาหลัก ๆ ทั้ง C#, Java, Go, JavaScript และ Python เป็นต้น</li><li><strong><a href=\"https://github.com/go-swagger/go-swagger\" target=\"_blank\" rel=\"noreferrer noopener\">Go swagger</a></strong> สำหรับการ generate code ในภาษา Go</li><li><strong><a href=\"https://github.com/deepmap/oapi-codegen\" target=\"_blank\" rel=\"noreferrer noopener\">OpenAPI Codegen</a></strong> สำหรับ Swagger version 3 ขึ้นไป และได้ภาษา Go ออกมา (เลือกได้ด้วยทั้ง HTTP/Echo และ Gin)</li><li><strong><a href=\"https://github.com/swaggo/swag\" target=\"_blank\" rel=\"noreferrer noopener\">Swag</a></strong> สำหรับ Swagger version 2 ได้ออกมาเป็นภาษา Go</li><li>สาย GRPC ก็มีเช่น <strong><a href=\"https://github.com/grpc-ecosystem/grpc-gateway\" target=\"_blank\" rel=\"noreferrer noopener\">GRPC Gateway</a></strong></li></ul><p><strong>ในรูปแบบนี้ควรจะทำการออกแบบ API อยู่ในรูปแบบ Swagger ไปเลย</strong></p><p>ไม่ต้องไปออกแบบใน Spreadsheet<br>มิเช่นนั้นมันจะเกิดความซ้ำซ้อนขึ้นมาโดยใช่เหตุ<br>แต่ code ที่ได้มานั้น หลาย ๆ คนอาจจะไม่ชอบ<br>เลยทำให้ไปเลือกใช้วิธีแรกคือ เขียน code<br>เพื่อสร้าง API Specification/documentation ออกมา</p><p><strong>แสดงแนวทางทั้งสองดังรูป</strong></p><p>ลองเลือกดูว่าแบบไหนที่เหมาะสมกับการทำงานของเรา</p><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/02/open-api-01.jpg\" alt=\"\" width=\"477\" height=\"259\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/02/open-api-01.jpg 900w, https://www.somkiat.cc/wp-content/uploads/2021/02/open-api-01-300x163.jpg 300w, https://www.somkiat.cc/wp-content/uploads/2021/02/open-api-01-768x418.jpg 768w\" sizes=\"(max-width: 477px) 100vw, 477px\"></figure><p><strong>หลังจากที่เราได้ API Specification ออกมาแล้ว</strong></p><p>มันสามารถนำไปใช้งานหรือประโยชน์ได้อีกเพียบ<br>แสดงดังรูป</p><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/02/openapidrivendevelopment-1024x648.png\" alt=\"\" width=\"540\" height=\"342\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/02/openapidrivendevelopment-1024x648.png 1024w, https://www.somkiat.cc/wp-content/uploads/2021/02/openapidrivendevelopment-300x190.png 300w, https://www.somkiat.cc/wp-content/uploads/2021/02/openapidrivendevelopment-768x486.png 768w, https://www.somkiat.cc/wp-content/uploads/2021/02/openapidrivendevelopment.png 1265w\" sizes=\"(max-width: 540px) 100vw, 540px\"></figure><p><strong>สุดท้ายแล้ว เรานำเครื่องมือเหล่านี้มาเพื่อให้เกิดประโยชน์หรือไม่</strong></p><p>หรือมันมาทำให้เราช้าลงหรือเป็นภาระมากยิ่งขึ้น<br>ดังนั้นต้องมาวางแผนและตกลงการใช้งานร่วมกันด้วยเสมอนะครับ</p></div><div><p><img alt=\"\" src=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=90&amp;d=mm&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=180&amp;d=mm&amp;r=g 2x\" height=\"90\" width=\"90\"></p><h4>Article by <a href=\"https://www.facebook.com/somkiatspns\">Somkiat Puisungnoen</a></h4><p>To be Craftmanship</p></div></div></article></div></div>","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"0d073d9c8cb1d2d4767fee49c47dffcefcd4117bda698d915cca57f74ec3364c","category":"Thai"}