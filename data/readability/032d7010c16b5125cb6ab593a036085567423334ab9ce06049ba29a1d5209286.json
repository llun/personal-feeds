{"title":"Microsoft is seeing a big spike in Web shell use","link":"https://arstechnica.com/?p=1741731","date":1613135947000,"content":"<div id=\"readability-page-1\" class=\"page\"><div><h4>so many web shells —</h4><h2 itemprop=\"description\">Spike shows just how useful and hard to detect these simple programs can be.</h2></div><div itemprop=\"articleBody\"><figure><img src=\"https://cdn.arstechnica.net/wp-content/uploads/2021/02/interface-800x532.jpg\" alt=\"Microsoft is seeing a big spike in Web shell use\"><figcaption><p>Getty Images</p></figcaption></figure><p>Security personnel at Microsoft are seeing a big increase in the use of Web shells, the light-weight programs that hackers install so they can burrow further into compromised websites.</p><p>The average number of Web shells installed from August, 2020 to January of this year was 144,000, almost twice that for the same months in 2019 and 2020. The spike represents an acceleration in growth that the same Microsoft researchers saw throughout last year.</p><figure><a href=\"https://cdn.arstechnica.net/wp-content/uploads/2021/02/web-shell-yoy.jpg\" data-height=\"700\" data-width=\"1397\"><img src=\"https://cdn.arstechnica.net/wp-content/uploads/2021/02/web-shell-yoy-640x321.jpg\" width=\"640\" height=\"321\" srcset=\"https://cdn.arstechnica.net/wp-content/uploads/2021/02/web-shell-yoy-1280x641.jpg 2x\"></a><figcaption><p>Microsoft</p></figcaption></figure><h2>A Swiss Army knife for hackers</h2><p>The growth is a sign of just how useful and hard to detect these simple programs can be. A Web shell is an interface that allows hackers to execute standard commands on Web servers once the servers have been compromised. Web shells are built using Web-based programming languages such as PHP, JSP, or ASP. The command interfaces work much the way browsers do.</p><p>Once installed successfully, Web shells allow remote hackers to do most of the same things legitimate administrators can do. Hackers can use them to run commands that steal data, execute malicious code, and provide system information that allows lateral movement further into a compromised network. The programs can also provide a persistent means of backdoor access that despite their effectiveness remain surprisingly hard to detect.</p><p>In a <a href=\"https://www.microsoft.com/security/blog/2021/02/11/web-shell-attacks-continue-to-rise/\" rel=\"nofollow\">blog post</a> published on Thursday, members of Microsoft’s Detection and Response Team and the Microsoft 365 Defender Research Team wrote:</p><blockquote><p>Once installed on a server, web shells serve as one of the most effective means of persistence in an enterprise. We frequently see cases where web shells are used solely as a persistence mechanism. Web shells guarantee that a backdoor exists in a compromised network, because an attacker leaves a malicious implant after establishing an initial foothold on a server. If left undetected, web shells provide a way for attackers to continue to gather data from and monetize the networks that they have access to.</p><p>Compromise recovery cannot be successful and enduring without locating and removing attacker persistence mechanisms. And while rebuilding a single compromised system is a great solution, restoring existing assets is the only feasible option for many. So, finding and removing all backdoors is a critical aspect of compromise recovery.</p></blockquote><h2>Case studies</h2><p>Early last July, the Metasploit hacking framework added a module that exploited a critical vulnerability in the Big-IP advanced delivery controller, a device made by F5 that’s typically placed between a perimeter firewall and a Web application to handle load balancing and other tasks. One day later, Microsoft researchers started seeing hackers using the exploit to install Web shells on vulnerable servers.</p><p>Initially, hackers used the Web shells to install malware that leveraged the servers’ computing power to mine cryptocurrency. Less than a week later, researchers saw hackers exploiting the Big-IP vulnerability to <a href=\"https://arstechnica.com/information-technology/2020/07/hackers-actively-exploit-high-severity-networking-vulnerabilities/\">install Web shells for a much wider assortment of uses</a> on servers belonging to both the US government and private industry.</p><p>In another case from <a href=\"https://www.microsoft.com/security/blog/2020/02/04/ghost-in-the-shell-investigating-web-shell-attacks/\" rel=\"nofollow\">last year</a>, Microsoft said it conducted an incident response after an organization in the public sector discovered that hackers had installed a Web shell on one of its Internet-facing servers. The hackers had “uploaded a Web shell in multiple folders on the Web server, leading to the subsequent compromise of service accounts and domain admin accounts,” Microsoft researchers wrote. “This allowed the attackers to perform reconnaissance using <em>net.exe</em>, scan for additional target systems using <em>nbtstat.exe</em>, and eventually move laterally using PsExec.”</p><p>The hackers went on to install a backdoor on an Outlook server that intercepted all incoming and outgoing emails, performed additional reconnaissance, and downloaded other malicious payloads. Among other things, the hack allowed the hackers to send special emails that the backdoor interpreted as commands.</p><h2>Needle in a haystack</h2><p>Because they use standard Web development languages, Web shells can be hard to detect. Adding to the difficulty, Web shells have multiple means of executing commands. Attackers can also hide commands inside of user agent strings and parameters that get passed during an exchange between an attacker and the compromised website. As if that wasn’t enough, Web shells can be stashed inside of media files or other non-executable file formats.</p><p>“When this file is loaded and analyzed on a workstation, the photo is harmless,” Microsoft researchers wrote. “But when a Web browser asks a server for this file, malicious code executes server side. These challenges in detecting Web shells contribute to their increasing popularity as an attack tool.”</p><p>Thursday’s post lists a variety of steps administrators can take to prevent Web shells from making their way onto a server. They include:</p><blockquote><ul><li>Identify and remediate vulnerabilities or misconfigurations in web applications and web servers. Use Threat and Vulnerability Management to discover and fix these weaknesses. Deploy the latest security updates as soon as they become available.</li><li>Implement proper segmentation of your perimeter network, such that a compromised web server does not lead to the compromise of the enterprise network.</li><li>Enable antivirus protection on web servers. <a href=\"https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-antivirus/enable-cloud-protection-windows-defender-antivirus\">Turn on cloud-delivered protection</a> to get the latest defenses against new and emerging threats. Users should only be able to upload files in directories that can be scanned by antivirus and configured to not allow server-side scripting or execution.</li><li>Audit and review logs from web servers frequently. Be aware of all systems you expose directly to the internet.</li><li>Utilize the Windows Defender Firewall, intrusion prevention devices, and your network firewall to prevent command-and-control server communication among endpoints whenever possible, limiting lateral movement, as well as other attack activities.</li><li>Check your perimeter firewall and proxy to restrict unnecessary access to services, including access to services through non-standard ports.</li><li>Practice good credential hygiene. Limit the use of accounts with local or domain admin level privileges.</li></ul></blockquote><p>The National Security Agency has published tools <a href=\"https://github.com/nsacyber/Mitigating-Web-Shells\">here</a> that help admins detect and remove Web shells on their networks.</p></div></div>","author":"Dan Goodin","siteTitle":"Ars Technica","siteHash":"5b0ddf6e8923e49262a7894cfd77962733e43fbcc565a103b48373820b310636","entryHash":"032d7010c16b5125cb6ab593a036085567423334ab9ce06049ba29a1d5209286","category":"Tech"}