{"title":"Introducing Amazon S3 Object Lambda – Use Your Code to Process Data as It Is Being Retrieved from S3","link":"https://aws.amazon.com/blogs/aws/introducing-amazon-s3-object-lambda-use-your-code-to-process-data-as-it-is-being-retrieved-from-s3/","date":1616084302000,"content":"<div id=\"readability-page-1\" class=\"page\"><article vocab=\"http://schema.org/\" typeof=\"TechArticle\"><meta property=\"inLanguage\" content=\"en-US\"><meta property=\"image\" content=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/03/18/Site-Merch_S3-Object-Lambda_Final_SocialMedia_1.png\"><section property=\"articleBody\"><div id=\"amazon-polly-audio-tab\"><p><a href=\"https://aws.amazon.com/polly/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://a0.awsstatic.com/aws-blog/images/Voiced_by_Amazon_Polly_EN.png\" width=\"554\" height=\"56\"></a></p></div><p>When you store data in <a href=\"https://aws.amazon.com/s3/\" title=\"\">Amazon Simple Storage Service (S3)</a>, you can easily share it for use by multiple applications. However, each application has its own requirements and may need a different view of the data. For example, a dataset created by an e-commerce application may include personally identifiable information (PII) that is not needed when the same data is processed for analytics and should be redacted. On the other side, if the same dataset is used for a marketing campaign, you may need to enrich the data with additional details, such as information from the customer loyalty database.</p><p>To provide different views of data to multiple applications, there are currently two options. You either create, store, and maintain additional derivative copies of the data, so that each application has its own custom dataset, or you build and manage infrastructure as a proxy layer in front of S3 to intercept and process data as it is requested. Both options add complexity and costs, so the S3 team decided to build a better solution.</p><p>Today, I’m very happy to announce the availability of <strong>S3 Object Lambda</strong>, a new capability that allows you to add your own code to process data retrieved from S3 before returning it to an application. S3 Object Lambda works with your existing applications and uses <a href=\"https://aws.amazon.com/lambda/\" title=\"\">AWS Lambda</a> functions to automatically process and transform your data as it is being retrieved from S3. The Lambda function is invoked inline with a standard <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">S3 GET request</a>, so you don’t need to change your application code.</p><p>In this way, you can easily present multiple views from the same dataset, and you can update the Lambda functions to modify these views at any time.</p><p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/03/16/s3-object-lambda-architecture-1.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/03/16/s3-object-lambda-architecture-1-1024x520.png\" alt=\"Architecture diagram.\" width=\"1024\" height=\"520\"></a></p><p>There are many use cases that can be simplified by this approach, for example:</p><ul><li>Redacting personally identifiable information for analytics or non-production environments.</li><li>Converting across data formats, such as converting XML to JSON.</li><li>Augmenting data with information from other services or databases.</li><li>Compressing or decompressing files as they are being downloaded.</li><li>Resizing and watermarking images on the fly using caller-specific details, such as the user who requested the object.</li><li>Implementing custom authorization rules to access data.</li></ul><p>You can start using S3 Object Lambda with a few simple steps:</p><ol><li>Create a Lambda Function to transform data for your use case.</li><li>Create an S3 Object Lambda Access Point from the <a href=\"https://s3.console.aws.amazon.com/\">S3 Management Console</a>.</li><li>Select the Lambda function that you created above.</li><li>Provide a supporting <a href=\"https://aws.amazon.com/s3/features/access-points/\">S3 Access Point</a> to give S3 Object Lambda access to the original object.</li><li>Update your application configuration to use the new S3 Object Lambda Access Point to retrieve data from S3.</li></ol><p>To get a better understanding of how S3 Object Lambda works, let’s put it in practice.</p><p><strong><span>How to Create a Lambda Function for S3 Object Lambda<br></span></strong>To create the function, I start by looking at the syntax of the input event the Lambda function receives from S3 Object Lambda:</p><p>The <code>getObjectContext</code> property contains some of the most useful information for the Lambda function:</p><ul><li>The <code>inputS3Url</code> is a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html\">presigned URL</a> that the function can use to download the original object from the supporting Access Point. In this way, the Lambda function doesn’t need to have S3 read permissions to retrieve the original object and can only access the object processed by each invocation.</li><li>The <code>outputRoute</code> and the <code>outputToken</code> are two parameters that are used to send back the modified object using the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_WriteGetObjectResponse.html\">new <code>WriteGetObjectResponse</code> API</a>.</li></ul><p>The <code>configuration</code> property contains the <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Name (ARN)</a> of the Object Lambda Access Point and of the supporting Access Point.</p><p>The <code>userRequest</code> property gives more information of the original request, such as the path in the URL, and the HTTP headers.</p><p>Finally, the <code>userIdentity</code> section returns the details of who made the original request and can be used to customize access to the data.</p><p>Now that I know the syntax of the event, I can create the Lambda function. To keep things simple, here’s a function written in Python that changes all text in the original object to uppercase:</p><p>Looking at the code of the function, there are three main sections:</p><ul><li>First, I use the <code>inputS3Url</code> property of the input event to download the original object. Since the value is a presigned URL, the function doesn’t need permissions to read from S3.</li><li>Then, I transform the text to be all uppercase. To customize the behavior of the function for your use case, this is the part you need to change. For example, to detect and redact personally identifiable information (PII), I can use <a href=\"https://aws.amazon.com/comprehend/\" title=\"\">Amazon Comprehend</a> to <a href=\"https://docs.aws.amazon.com/comprehend/latest/dg/how-pii.html\">locate PII entities</a> with the <code>DetectPiiEntities</code> API and replace them with asterisks or a description of the redacted entity type.</li><li>Finally, I use the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_WriteGetObjectResponse.html\">new <code>WriteGetObjectResponse</code> API</a> to send the result of the transformation back to S3 Object Lambda. In this way, the transformed object can be much larger than the maximum size of the response returned by a Lambda function. For larger objects, the <code>WriteGetObjectResponse</code> API supports <a href=\"https://en.wikipedia.org/wiki/Chunked_transfer_encoding\">chunked transfer encoding</a> to implement a streaming data transfer. The Lambda function only needs to return the status code (<code>200 OK</code> in this case), eventual errors, and optionally customize the metadata of the returned object as described in the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">S3 <code>GetObject</code> API</a>.</li></ul><p>I package the function, including the dependencies, and upload it to Lambda. Note that the maximum duration for a Lambda function used by S3 Object Lambda is 60 seconds, and that the Lambda function needs <a href=\"https://aws.amazon.com/iam/\" title=\"\">AWS Identity and Access Management (IAM)</a> permissions to call the <code>WriteGetObjectResponse</code> API.</p><p><span><strong>How to Create an S3 Object Lambda Access Point from the Console<br></strong></span>In the <a href=\"https://s3.console.aws.amazon.com/s3/home?region=us-east-1#\">S3 console</a>, I create an S3 Access Point on one of my S3 buckets:</p><p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/03/15/create-s3-access-point-1.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/03/15/create-s3-access-point-1-1024x731.png\" alt=\"S3 console screenshot.\" width=\"1024\" height=\"731\"></a></p><p>Then, I create an S3 Object Lambda Access Point using the supporting Access Point I just created. The Lambda function is going to use the supporting Access Point to download the original objects.</p><p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/03/15/create-s3-object-lambda-access-point-1.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/03/15/create-s3-object-lambda-access-point-1-1024x857.png\" alt=\"S3 console screenshot.\" width=\"1024\" height=\"857\"></a></p><p>During the configuration of the S3 Object Lambda Access Point as shown below, I select the latest version of the Lambda function I created above. Optionally, I can enable support for requests using a <a href=\"https://docs.aws.amazon.com/whitepapers/latest/s3-optimizing-performance-best-practices/use-byte-range-fetches.html\">byte range</a>, or using <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html#API_GetObject_RequestSyntax\">part numbers</a>. For now, I leave them disabled. To understand <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/olap-writing-lambda.html#range-get-olap\">how to use byte range and part numbers with S3 Object Lambda, please see the documentation</a>.</p><p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/03/09/create-s3-object-lambda-function.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/03/09/create-s3-object-lambda-function-1024x779.png\" alt=\"S3 console screenshot.\" width=\"1024\" height=\"779\"></a></p><p>When configuring the S3 Object Lambda Access Point, I can set up a string as a <code>payload</code> that is passed to the Lambda function in all invocations coming from that Access Point, as you can see in the <code>configuration</code> property of the sample event I described before. In this way, I can configure the same Lambda function for multiple S3 Object Lambda Access Points, and use the value of the<code>payload</code> to customize the behavior for each of them.</p><p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/03/09/create-s3-object-lambda-payload-metrics.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/03/09/create-s3-object-lambda-payload-metrics-1024x398.png\" alt=\"S3 console screenshot.\" width=\"1024\" height=\"398\"></a></p><p>Finally, I can set up a policy, similar to what I can do with normal S3 Access Points, to provide access to the objects accessible through this Object Lambda Access Point. For now, I keep the policy empty. Then, I leave the default option to block all public access and create the Object Lambda Access Point.</p><p>Now that the S3 Object Lambda Access Point is ready, let’s see how I can use it.</p><p><span><strong>How to Use the S3 Object Lambda Access Point<br></strong></span>In the S3 console, I select the newly created Object Lambda Access Point. In the properties, I copy the ARN to have it available later.</p><p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/03/09/s3-object-lambda-access-point-properties.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/03/09/s3-object-lambda-access-point-properties-1024x286.png\" alt=\"S3 console screenshot.\" width=\"1024\" height=\"286\"></a></p><p>With the <a href=\"https://aws.amazon.com/cli/\" title=\"\">AWS Command Line Interface (CLI)</a>, I upload a text file containing a few sentences to the S3 bucket behind the S3 Object Lambda Access Point:</p><p>Using S3 Object Lambda with my existing applications is very simple. I just need to replace the S3 bucket with the ARN of the S3 Object Lambda Access Point and update the <a href=\"https://aws.amazon.com/tools/\" title=\"\">AWS SDKs</a> to accept the new syntax using the S3 Object Lambda ARN.</p><p>For example, this is a Python script that downloads the text file I just uploaded: first, straight from the S3 bucket, and then from the S3 Object Lambda Access Point. The only difference between the two downloads is the value of the <code>Bucket</code> parameter.</p><p>I start the script on my laptop:</p><p>And this is the result I get:</p><p><code>Original object on S3:</code><br><code>Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance. This means customers of all sizes and industries can use it to store and protect any amount of data for a range of use cases, such as data lakes, websites, mobile applications, backup and restore, archive, enterprise applications, IoT devices, and big data analytics.<br></code></p><p><code>Object processed by S3 Object Lambda:</code><br><code>AMAZON SIMPLE STORAGE SERVICE (AMAZON S3) IS AN OBJECT STORAGE SERVICE THAT OFFERS INDUSTRY-LEADING SCALABILITY, DATA AVAILABILITY, SECURITY, AND PERFORMANCE. THIS MEANS CUSTOMERS OF ALL SIZES AND INDUSTRIES CAN USE IT TO STORE AND PROTECT ANY AMOUNT OF DATA FOR A RANGE OF USE CASES, SUCH AS DATA LAKES, WEBSITES, MOBILE APPLICATIONS, BACKUP AND RESTORE, ARCHIVE, ENTERPRISE APPLICATIONS, IOT DEVICES, AND BIG DATA ANALYTICS.<br></code></p><p>The first output is downloaded straight from the source bucket, and I see the original content as expected. The second time, the object is processed by the Lambda function as it is being retrieved and, as the result, all text is uppercase!</p><p><span><strong>More Use Cases for S3 Object Lambda<br></strong></span>When retrieving an object using S3 Object Lambda, there is no need for an object with the same name to exist in the S3 bucket. The Lambda function can use information in the name of the file or in the HTTP headers to generate a custom object.</p><p>For example, if you ask to use an S3 Object Lambda Access Point for an image with name <code>sunset_600x400.jpg</code>, the Lambda function can look for an image named <code>sunset.jpg</code> and resize it to fit the maximum width and height as described in the file name. In this case, the Lambda function would need access permission to read the original image, because the object key is different from what was used in the presigned URL.</p><p>Another interesting use case would be to retrieve JSON or CSV documents, such as <code>order.json</code> or <code>items.csv</code>, that are generated on the fly based on the content of a database. The metadata in the request HTTP headers can be used to pass the <code>orderId</code> to use. As usual, I expect our customers’ creativity to far exceed the use cases I described here.</p><p>Here’s a short video describing how S3 Object Lambda works and how you can use it:</p><p><iframe title=\"S3 Object Lambda Overview\" width=\"500\" height=\"281\" src=\"https://www.youtube.com/embed/uTBgpK07E38?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe></p><p><span><strong>Availability and Pricing</strong></span><br>S3 Object Lambda is available today in all AWS Regions with the exception of the <span title=\"\">Asia Pacific (Osaka)</span>, <span title=\"\">AWS GovCloud (US-East)</span>, <span title=\"\">AWS GovCloud (US-West)</span>, <span title=\"\">China (Beijing)</span>, and <span title=\"\">China (Ningxia)</span> Regions. You can use S3 Object Lambda with the <a href=\"https://console.aws.amazon.com/\" title=\"\">AWS Management Console</a>, <a href=\"https://aws.amazon.com/cli/\" title=\"\">AWS Command Line Interface (CLI)</a>, and <a href=\"https://aws.amazon.com/tools/\" title=\"\">AWS SDKs</a>. Currently, the AWS CLI high-level S3 commands, such as <code>aws s3 cp</code>, don’t support objects from S3 Object Lambda Access Points, but you can use the low-level S3 API commands, such as <code>aws s3api get-object</code>.</p><p>With S3 Object Lambda, you pay for the AWS Lambda compute and request charges required to process the data, and for the data S3 Object Lambda returns to your application. You also pay for the S3 requests that are invoked by your Lambda function. For more pricing information, please see the <a href=\"https://aws.amazon.com/s3/pricing/\">Amazon S3 pricing page</a>.</p><p>This new capability makes it much easier to share and convert data across multiple applications.</p><p><strong><a href=\"https://aws.amazon.com/s3/features/object-lambda\">Start using S3 Object Lambda to simplify your storage architecture today.</a><br></strong></p><p>— <a href=\"https://twitter.com/danilop\" title=\"Danilo on Twitter\">Danilo</a></p></section></article></div>","author":"Danilo Poccia","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"944f1217af0a2b3ea1cfec2f75e39760a54db3dc4002d4a040aa5070418f181e","category":"Tech"}