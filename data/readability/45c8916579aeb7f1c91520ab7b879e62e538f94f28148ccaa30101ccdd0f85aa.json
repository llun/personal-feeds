{"title":"Tips การใช้งาน Git แบบง่าย ๆ  ไหมนะ !!","link":"https://www.somkiat.cc/tips-with-git/","date":1621150199000,"content":"<div id=\"readability-page-1\" class=\"page\"><div id=\"page\"><article><div id=\"content_box\"><header></header><div><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/05/git-shit.jpg\" alt=\"\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/05/git-shit.jpg 900w, https://www.somkiat.cc/wp-content/uploads/2021/05/git-shit-300x169.jpg 300w, https://www.somkiat.cc/wp-content/uploads/2021/05/git-shit-768x432.jpg 768w\" sizes=\"(max-width: 900px) 100vw, 900px\"></figure><p>วันนี้ทำการสรุปเรื่องการใช้งาน Git ไว้<br>เพื่อใช้สำหรับการทำ workshop เกี่ยวกับการจัดการ version ของ code<br>จึงทำให้เห็นว่ามี tip ที่น่าสนใจ และ ใช้งานบ่อย ๆ ไว้</p><p><strong>เรื่องแรกที่มักจะบอกเสมอคือ อย่า Force Push</strong> !!</p><div><p>ถ้าไม่จำเป็นจริง ๆ เช่น ต้องการให้พังก็ force ไป<br>เพราะว่า การ force push นั้น<br>เป็นการเปลี่ยนแปลง history ของ commit ใน remote repository<br>ดังนั้นจะทำให้คนอื่น ๆ มีปัญหาไปด้วย<br>อาจจะมาจากการ rebase หรือ squash commit</p><p>ดังนั้นถึงระวังไว้<br>ยิ่งถ้าใครสาย UI จะพบว่าแค่ไป check ที่ force push ก็ไปเลยนะ !!</p><p>ถ้าจะทำจริง ๆ ทางเลือกที่เจ็บน้อยลงคือ Force with lease<br>ซึ่งสามารถทำการ alias จาก force push มาเป็น Force with lease ได้</p></div><p><strong>เรื่องที่สอง ถ้าขี้เกียจกำหนด remote branch ก็ใช้ upstream ไป</strong></p><div id=\"highlighter_57019\"><table><tbody><tr><td><p>1</p></td><td><div><p><code>$git push -u origin your-branch</code></p></div></td></tr></tbody></table></div><p><strong>เรื่องที่สาม ตั้วชื่อ branch ให้มันรู้เรื่องและเข้าใจ ตรงกับสิ่งที่ทำ</strong></p><p>ชื่อ branch ที่ไม่ควรมี</p><ul><li>feature01, 02, 03</li><li>ชื่อของเราเอง !!</li></ul><p>เพิ่มเติมคือ commit message เช่นเดียวกัน<br>มันมีใส่ทั้ง subject และ description นะ<br>ไม่ใช่มีแต่ update update update<br>ไม่ใช่มีแต่ fixed fixed fixed</p><p><strong>เรื่องที่สี่ สำหรับสาย feature branch ถ้า merge ไปแล้วก็ลบทิ้งไปซะ</strong></p><p>มาก branch มากความ<br>แต่หลายคนบอกว่าหลีกเลี่ยงไม่ได้<br>แต่เมื่อคุณทำการ merge ไปยัง branch หลักเรียบร้อย<br>แล้วควรลบ feature branch นั้น ๆ ไปซะ<br>จะเก็บไว้ทำซากอะไร !!<br>ยิ่งเป็น local branch ยิ่งควรลบ</p><p>หรือถ้ามีคนลบ branch จาก remote repository แล้ว<br>เมื่อเราทำการ fetch มา แล้วทำการลบที่ local repository เลย<br>ให้ทำการ config ดังนี้</p><div id=\"highlighter_7051\"><table><tbody><tr><td><p>1</p></td><td><div><p><code>$git config fetch.prune true</code></p></div></td></tr></tbody></table></div><p><strong>เรื่องที่ห้า สายหลบ หรือ การ stash เพื่อเก็บการเปลี่ยนแปลงที่ local ไว้</strong></p><p>ก่อนที่จะทำการ pull หรือเปลี่ยน branch มักจะใช้ stash<br>ดังนั้นการใช้งานควรใส่ชื่อหรือ stash message ที่สื่อถึงก่ีเปลี่ยนแปลงเหล่านั้นไว้ด้วย<br>กฎกติกาคือ ควรมี stash ได้เพียง 1 ตัวเท่านั้น</p><p><strong>เรื่องที่หก Rebase vs Merge</strong></p><p>ปกติแล้วนั้น git จะทำการ merge ให้อัตโนมัติ<br>สำหรับการ pull การเปลี่ยนแปลงมาที่ local branch repository<br>ซึ่งจะทำการสร้าง commit สำหรับการ merge ขึ้นมา<br>ทำให้หลาย ๆ คนอาจจะไม่พอได้ผลการทำงาน</p><p>ดังนั้น เพื่อความ clean ของ commit ใน branch ต่าง ๆ<br>แนะนำให้ใช้การ rebase แทน<br>แต่ก็ระวังด้วย เพราะว่า จะทำให้เกิดปัญหาในข้อหนึ่ง</p><p>สามารถเปลี่ยนค่า default ของการ pull เป็น rebase ดังนี้</p><div id=\"highlighter_229216\"><table><tbody><tr><td><p>1</p></td><td><div><p><code>$git config pull.rebase true</code></p></div></td></tr></tbody></table></div><p>อีกอย่าง ผมมักจะทำ squash ก่อน rebase เสมอ<br>เป็นการยุบหรือตกแต่ง commit ให้สวยงาม<br>เช่นจาก 20 commit รวมให้เหลือแค่ 5 commit<br>ก็ได้จะทำให้เราได้ release note สวย ๆ</p><p>สามารถกำหนดค่า default ของการ rebase ให้เป็น squash ได้เลย</p><div id=\"highlighter_127219\"><table><tbody><tr><td><p>1</p></td><td><div><p><code>$git config rebase.autosquash true</code></p></div></td></tr></tbody></table></div><p><strong>เรื่องที่เจ็ด ต้องการเปลี่ยน commit message ใน commit ล่าสุดด้วย amend</strong></p><p>หรือลืม add file ใน commit ล่าสุด ก็เพิ่มเข้าไป</p><div id=\"highlighter_931057\"><table><tbody><tr><td><p>1</p><p>2</p></td><td><div><p><code>$git add somefile</code></p><p><code>$git commit --amend</code></p></div></td></tr></tbody></table></div><p><strong>เรื่องสุดท้าย ลบ file และ folder ที่ untracked ทิ้งไป ด้วย git clean -d –force</strong></p></div><div><p><img alt=\"\" src=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=90&amp;d=mm&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=180&amp;d=mm&amp;r=g 2x\" height=\"90\" width=\"90\"></p><h4>Article by <a href=\"https://www.facebook.com/somkiatspns\">Somkiat Puisungnoen</a></h4><p>To be Craftmanship</p></div></div></article></div></div>","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"45c8916579aeb7f1c91520ab7b879e62e538f94f28148ccaa30101ccdd0f85aa","category":"Thai"}