{"title":"ว่าด้วยเรื่อง Component Testing ของ Cypress","link":"https://www.somkiat.cc/component-testing-in-cypress/","date":1617896319000,"content":"<div id=\"readability-page-1\" class=\"page\"><div id=\"page\"><article><div id=\"content_box\"><header><div><p><time>April 8, 2021</time> <span><a href=\"https://www.somkiat.cc/category/programming/\" rel=\"category tag\">Programming</a></span></p></div></header><div><p>จากที่คุยเรื่อง Component Testing ของ Cypress ใน alpha version<br>หรือเรียกว่า <strong><a href=\"https://docs.cypress.io/guides/component-testing/introduction\" target=\"_blank\" rel=\"noreferrer noopener\">Cypress Component Testing Library</a></strong><br>พบว่า มีความเข้าใจผิดเรื่องของ <strong>Component testing</strong> นิดหน่อย<br>เพราะว่า ชื่อดันไปเหมือนกับ <strong>Service Component Testing</strong> ใน Microservices อีกด้วย<br>จึงทำการอธิบายไว้นิดหน่อย</p><p><strong><em>ปล. Cypress Component Testing Library</em></strong> <strong><em>สามารถเปลี่ยนแปลงได้อีกมาก</em></strong></p><p><strong>ก่อนอื่น ๆ Component Testing ของ Cypress นั้น</strong></p><div><p>คือการทดสอบแต่ละ component ที่เราต้องการ<br>ไม่ว่าจะเป็น Component ใน ReactJS, Angular และ VueJS</p><p>ซึ่งปกติการทดสอบในแต่ละ component<br>จะทดสอบผ่าน test framework/library เช่ร Jest หรือ Mocha<br>รวมทั้งการ render จะใช้ virtual browser แทนคือ JSDom นั่นเอง</p></div><p><strong>แต่ใน Cypress นั้นจะทดสอบบน browser จริง ๆ ไปเลย</strong><br>ทำให้ง่ายต่อการทดสอบและ debugแสดง<br>ดังรูป</p><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/04/cypress-testing.jpg\" alt=\"\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/04/cypress-testing.jpg 1000w, https://www.somkiat.cc/wp-content/uploads/2021/04/cypress-testing-300x180.jpg 300w, https://www.somkiat.cc/wp-content/uploads/2021/04/cypress-testing-768x460.jpg 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\"></figure><p><strong>การทดสอบแบบนี้ เราสามารถเข้าถึง Component ที่ต้องการได้เลย</strong></p><p>ไม่จำเป็นต้องเข้า URL ใด ๆ<br>เพียงแค่ mount Component ที่ต้องการได้เลย<br>จากภาพ Component ที่สามารถทดสอบได้ด้วย Cypress คือ</p><ul><li>Main component</li><li>Component 1</li><li>Component 2</li></ul><div itemprop=\"text\" id=\"gist108896218\"><table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-1-js-L1\" data-line-number=\"1\"></td><td id=\"file-1-js-LC1\"><span>import</span> <span>React</span> <span>from</span> <span>'react'</span><span>;</span></td></tr><tr><td id=\"file-1-js-L2\" data-line-number=\"2\"></td><td id=\"file-1-js-LC2\"><span>import</span> <span>{</span> <span>mount</span> <span>}</span> <span>from</span> <span>'@cypress/react'</span><span>;</span></td></tr><tr><td id=\"file-1-js-L3\" data-line-number=\"3\"></td><td id=\"file-1-js-LC3\"><span>import</span> <span>App</span> <span>from</span> <span>'./App'</span><span>;</span></td></tr><tr><td id=\"file-1-js-L4\" data-line-number=\"4\"></td><td id=\"file-1-js-LC4\"></td></tr><tr><td id=\"file-1-js-L5\" data-line-number=\"5\"></td><td id=\"file-1-js-LC5\"><span>it</span><span>(</span><span>'renders learn react link'</span><span>,</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span></td></tr><tr><td id=\"file-1-js-L6\" data-line-number=\"6\"></td><td id=\"file-1-js-LC6\"><span>mount</span><span>(</span><span>&lt;</span><span>App</span> <span>/</span><span>&gt;</span><span>)</span><span>;</span></td></tr><tr><td id=\"file-1-js-L7\" data-line-number=\"7\"></td><td id=\"file-1-js-LC7\"><span>cy</span><span>.</span><span>get</span><span>(</span><span>'a'</span><span>)</span><span>.</span><span>contains</span><span>(</span><span>'Learn React'</span><span>)</span><span>;</span></td></tr><tr><td id=\"file-1-js-L8\" data-line-number=\"8\"></td><td id=\"file-1-js-LC8\"><span>}</span><span>)</span><span>;</span></td></tr></tbody></table></div><p><strong>ส่วนอีกเรื่องคือ Service Component Testing</strong></p><p>ซึ่งมีที่มาจาก <strong><a href=\"https://martinfowler.com/articles/microservice-testing/#testing-component-in-process-diagram\" target=\"_blank\" rel=\"noreferrer noopener\">Microservices Testing</a></strong><br>เป็นการทดสอบในแต่ละ service แยกกันไปเลย<br>แน่นอนว่า มีแนวคิดเดียวกันคือ Isolated component/service testing นั่นเอง<br>ช่วยทำให้เรามั่นใจมากยิ่งขึ้นว่า<br>service หนึ่ง ๆ ของเราทำงานได้ตามที่เราคาดหวัง<br>ด้วยการเข้าตาม URL ที่ต้องการ<br>รวมทั้งมีการจำลองหรือควบคุมการทำงานของ dependency ที่ใช้งาน<br>ยกตัวอย่างเช่น External REST API เป็นต้น</p><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/04/Screen-Shot-2564-04-08-at-22.14.41.png\" alt=\"\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/04/Screen-Shot-2564-04-08-at-22.14.41.png 951w, https://www.somkiat.cc/wp-content/uploads/2021/04/Screen-Shot-2564-04-08-at-22.14.41-300x180.png 300w, https://www.somkiat.cc/wp-content/uploads/2021/04/Screen-Shot-2564-04-08-at-22.14.41-768x461.png 768w\" sizes=\"(max-width: 951px) 100vw, 951px\"></figure><p><strong>ดังนั้นถ้าเรามองว่าระบบงานในฝั่งของ Frontend เป็น service หนึ่งของเรา</strong></p><p>แล้วมี dependency ที่ใช้คือ External REST API<br>เราสามารถทดสอบส่วนของ Frontend แบบ <strong>Service Component Testing</strong><br>ด้วยการใช้งาน Cypress ได้เลยด้วยการใช้ <a rel=\"noreferrer noopener\" href=\"https://docs.cypress.io/guides/guides/network-requests#Testing-Strategies\" target=\"_blank\">Intercept network request</a><br>ที่ออกจาก browser ของ Cypress ได้เลย</p><div itemprop=\"text\" id=\"gist108896218\"><table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-2-js-L1\" data-line-number=\"1\"></td><td id=\"file-2-js-LC1\"><span>cy</span><span>.</span><span>intercept</span><span>(</span></td></tr><tr><td id=\"file-2-js-L2\" data-line-number=\"2\"></td><td id=\"file-2-js-LC2\"><span>{</span></td></tr><tr><td id=\"file-2-js-L3\" data-line-number=\"3\"></td><td id=\"file-2-js-LC3\"><span>method</span>: <span>'GET'</span><span>,</span> <span>// Route all GET requests</span></td></tr><tr><td id=\"file-2-js-L4\" data-line-number=\"4\"></td><td id=\"file-2-js-LC4\"><span>url</span>: <span>'/users/*'</span><span>,</span> <span>// that have a URL that matches '/users/*'</span></td></tr><tr><td id=\"file-2-js-L5\" data-line-number=\"5\"></td><td id=\"file-2-js-LC5\"><span>}</span><span>,</span></td></tr><tr><td id=\"file-2-js-L6\" data-line-number=\"6\"></td><td id=\"file-2-js-LC6\"><span>[</span><span>]</span> <span>// and force the response to be: []</span></td></tr><tr><td id=\"file-2-js-L7\" data-line-number=\"7\"></td><td id=\"file-2-js-LC7\"><span>)</span></td></tr></tbody></table></div><p><strong>เพียงเท่านี้เราสามารถทดสอบการทำงานของระบบงาน</strong><br>ได้ตามที่เราต้องการ<br>เพื่อเพิ่มความมั่นใจต่อระบบงานให้มากยิ่งขึ้น</p></div><div><p><img alt=\"\" src=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=90&amp;d=mm&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=180&amp;d=mm&amp;r=g 2x\" height=\"90\" width=\"90\"></p><h4>Article by <a href=\"https://www.facebook.com/somkiatspns\">Somkiat Puisungnoen</a></h4><p>To be Craftmanship</p></div></div></article></div></div>","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"c8bf02542967c2ee35f5b618bfe79def978ca1486db304b33315d100cfb5b221","category":"Thai"}