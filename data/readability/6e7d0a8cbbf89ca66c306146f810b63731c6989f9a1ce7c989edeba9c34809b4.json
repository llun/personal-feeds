{"title":"[MQTT] ทดลองใช้ MQTT เพื่อควบคุม Sonoff ด้วย NodeJS ครับ","link":"https://thanapon.info/sonoff-mqtt/","date":1599916339000,"content":"<div id=\"readability-page-1\" class=\"page\"><div><p id=\"6d9c\">สืบเนื่องจากบทความคราวก่อนนะครับที่ผมได้เขียนเกี่ยวกับการอัพโหลด TASMOTA firmware สำหรับ Sonoff กันและอีกบทความที่เกี่ยวกับการติดตั้งและใช้งาน MQTT ร่วมกับ NodeJS</p><p id=\"2c4d\">สำหรับบทความนี้จะเป็นการรวมทั้งสองบทความก่อนหน้านี้ให้เป็น Web Application สำหรับควบคุม Sonoff โดยผ่าน MQTT Protocol กันนะครับอาจจะออกแนวไปสาย developer นิดนึ่ง แต่ผมจะพยายามเขียนให้ทุกท่านเข้าใจมากที่สุดครับ สำหรับผู้ที่สนใจสามารถดาวน์โหลด code ได้ที่ github ได้นะครับ…</p><blockquote><p><a href=\"https://thanapon.info/?p=92\" target=\"_blank\" rel=\"noreferrer noopener\">[ESP8266-Sonoff] มาลอง TASMOTA firmware สำหรับ Sonoff กันครับ</a></p><cite>สวัสดีครับหลังจากที่หายไปหลายเดือน<br>พอดีได้มีโอกาสไปลองเล่น Sonoff มา ซึ่งรุ่นที่ได้ลองจะเป็น Module Sonoff Basic ลักษณะจะคล้ายๆกับบัลลาสต์เลยครับแต่ขนาดตัวจะเล็กกว่าประมาณครึ่งเลยที่เดียวครับ</cite></blockquote><blockquote><p><a href=\"https://thanapon.info/?p=94\" target=\"_blank\" rel=\"noreferrer noopener\">[MQTT] ลอง MQTT บน NodeJS เถอะครับ</a></p><cite>MQTT (Message Queueing Telemetry Transport protocol)คือโปรโตคอลที่ใช้สำหรับสื่อสารกันระหว่าง m2m หรือ machine to machine</cite></blockquote><h2 id=\"52c4\" data-selectable-paragraph=\"\">เริ่มต้นสร้าง express-generator สำหรับเป็นโครงให้ตัวโปรเจคของเรา</h2><p id=\"d567\" data-selectable-paragraph=\"\">ก่อนจะนำ MQTT มาใช้เราต้องทำการสร้าง web application มาก่อนนะครับ ในที่นี้ผมจะใช้ตัว express-generator และในการสร้าง application ขึ้นมาโดยที่ view engine ผมจะใช้ EJS นะครับซึ่ง syntax จะคล้ายๆกับ html มากๆครับ</p><pre>$ express --view=ejs nodejs-tasmota</pre><p id=\"1b77\" data-selectable-paragraph=\"\">หลังจากนั้นเราก็จะได้โฟลเดอร์ nodejs-tasmota มา โดยภายในโฟลเดอร์นี้ก็จะประกอบไปด้วย</p><pre>├── app.js\n├── bin\n│   └── www\n├── package.json\n├── public\n│   ├── images\n│   ├── javascripts\n│   └── stylesheets\n│       └── style.css\n├── routes\n│   ├── index.js\n│   └── users.js\n└── views\n    ├── error.ejs\n    ├── index.ejs</pre><p id=\"4a7f\" data-selectable-paragraph=\"\">เสร็จแล้วทำการทดสอบการทำงานของ web application ของเราโดยการรัน <em>npm install</em> ก่อนโดยจะเป็นการติดตั้ง package ต่างๆที่จำเป็นสำหรับ application ของเราแล้วทำการรัน <em>npm start</em> ตามลำดับ</p><section><pre>$ npm install // Install package dependencies\n$ npm start   // Start service</pre><p id=\"c2d4\" data-selectable-paragraph=\"\">มาที่ Web browser ของเราไม่ว่าจะเป็น Google chrome หรือ Microsoft Edge ทำการพิมพ์ไปที่ช่อง address : <a href=\"http://localhost:3000/\" rel=\"noopener nofollow\"><strong>http://localhost:3000</strong></a> เป็นอันว่าจบการติดตั้งโครงสร้าง web application ที่จะใช้เขียนเชื่อมต่อ MQTT และ Tasmota</p><figure>&nbsp;<img loading=\"lazy\" src=\"https://miro.medium.com/max/1920/1*eCG3UkL7iHRFz-4LwGxZgw.png\" sizes=\"700px\" srcset=\"https://miro.medium.com/max/276/1*eCG3UkL7iHRFz-4LwGxZgw.png 276w, https://miro.medium.com/max/552/1*eCG3UkL7iHRFz-4LwGxZgw.png 552w, https://miro.medium.com/max/640/1*eCG3UkL7iHRFz-4LwGxZgw.png 640w, https://miro.medium.com/max/700/1*eCG3UkL7iHRFz-4LwGxZgw.png 700w\" alt=\"Image for post\" width=\"1920\" height=\"1030\"></figure></section><section><h2 id=\"aa20\" data-selectable-paragraph=\"\">ขั้นตอนต่อไปเริ่มพัฒนา nodejs-mqtt กันเลย</h2><p id=\"99bd\" data-selectable-paragraph=\"\">ทำการติดตั้ง package MQTT สำหรับ web application ของเราโดยที่พิมพ์คำสั่ง</p><pre>$ npm install mqtt</pre><p id=\"aef2\" data-selectable-paragraph=\"\">หลังจากนั้นเปิดไฟล์ <strong>app.js </strong>ขึ้นมาเพื่อที่จะแก้ไขตัว application ของเราให้เชื่อมต่อกับ mqtt ได้</p></section><div><pre data-lang=\"JavaScript\"><code data-hcb-clip=\"1\"><span>const</span> createError <span>=</span> <span>require</span><span>(</span><span>'http-errors'</span><span>)</span><span>;</span>\n<span>const</span> express <span>=</span> <span>require</span><span>(</span><span>'express'</span><span>)</span><span>;</span>\n<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>'path'</span><span>)</span><span>;</span>\n<span>const</span> cookieParser <span>=</span> <span>require</span><span>(</span><span>'cookie-parser'</span><span>)</span><span>;</span>\n<span>const</span> logger <span>=</span> <span>require</span><span>(</span><span>'morgan'</span><span>)</span><span>;</span>\n\n<span>//------------MQTT section------------//</span>\n<span>const</span> mqtt <span>=</span> <span>require</span><span>(</span><span>'mqtt'</span><span>)</span>  <span>// import mqtt connect</span>\n<span>// mqtt configuration</span>\n<span>const</span> mqttConfig <span>=</span> <span>{</span>\n  host<span>:</span> <span>'localhost'</span><span>,</span>\n  port<span>:</span> <span>1883</span><span>,</span>\n  username<span>:</span> <span>''</span><span>,</span>\n  password<span>:</span> <span>''</span>\n<span>}</span>\n<span>const</span> client  <span>=</span> mqtt<span>.</span><span>connect</span><span>(</span>mqttConfig<span>)</span> <span>// create connection to mqtt broker</span>\nclient<span>.</span><span>on</span><span>(</span><span>'connect'</span><span>,</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>\n  client<span>.</span><span>subscribe</span><span>(</span><span>'tasmota/#'</span><span>,</span> <span>function</span> <span>(</span><span>err</span><span>)</span> <span>{</span>\n    <span>if</span> <span>(</span><span>!</span>err<span>)</span> <span>{</span>\n      client<span>.</span><span>publish</span><span>(</span><span>'tasmota'</span><span>,</span> <span>'Hello from application mqtt'</span><span>)</span>\n    <span>}</span>\n  <span>}</span><span>)</span>\n<span>}</span><span>)</span>\n \nclient<span>.</span><span>on</span><span>(</span><span>'message'</span><span>,</span> <span>function</span> <span>(</span><span>topic<span>,</span> message</span><span>)</span> <span>{</span>\n  <span>// message is Buffer</span>\n  console<span>.</span><span>log</span><span>(</span>message<span>.</span><span>toString</span><span>(</span><span>)</span><span>)</span>\n<span>}</span><span>)</span>\n<span>//------------------------------------//</span>\n\n<span>const</span> indexRouter <span>=</span> <span>require</span><span>(</span><span>'./routes/index'</span><span>)</span><span>;</span>\n\n<span>const</span> app <span>=</span> <span>express</span><span>(</span><span>)</span><span>;</span>\n\n<span>// view engine setup</span>\napp<span>.</span><span>set</span><span>(</span><span>'views'</span><span>,</span> path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>'views'</span><span>)</span><span>)</span><span>;</span>\napp<span>.</span><span>set</span><span>(</span><span>'view engine'</span><span>,</span> <span>'ejs'</span><span>)</span><span>;</span>\n\napp<span>.</span><span>use</span><span>(</span><span>logger</span><span>(</span><span>'dev'</span><span>)</span><span>)</span><span>;</span>\napp<span>.</span><span>use</span><span>(</span>express<span>.</span><span>json</span><span>(</span><span>)</span><span>)</span><span>;</span>\napp<span>.</span><span>use</span><span>(</span>express<span>.</span><span>urlencoded</span><span>(</span><span>{</span> extended<span>:</span> <span>false</span> <span>}</span><span>)</span><span>)</span><span>;</span>\napp<span>.</span><span>use</span><span>(</span><span>cookieParser</span><span>(</span><span>)</span><span>)</span><span>;</span>\napp<span>.</span><span>use</span><span>(</span>express<span>.</span><span>static</span><span>(</span>path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>'public'</span><span>)</span><span>)</span><span>)</span><span>;</span>\n\n<span>// Route endpoint</span>\n<span>indexRouter</span><span>(</span>app<span>,</span>client<span>)</span>\n\n<span>// catch 404 and forward to error handler</span>\napp<span>.</span><span>use</span><span>(</span><span>function</span><span>(</span><span>req<span>,</span> res<span>,</span> next</span><span>)</span> <span>{</span>\n  <span>next</span><span>(</span><span>createError</span><span>(</span><span>404</span><span>)</span><span>)</span><span>;</span>\n<span>}</span><span>)</span><span>;</span>\n\n<span>// error handler</span>\napp<span>.</span><span>use</span><span>(</span><span>function</span><span>(</span><span>err<span>,</span> req<span>,</span> res<span>,</span> next</span><span>)</span> <span>{</span>\n  <span>// set locals, only providing error in development</span>\n  res<span>.</span>locals<span>.</span>message <span>=</span> err<span>.</span>message<span>;</span>\n  res<span>.</span>locals<span>.</span>error <span>=</span> req<span>.</span>app<span>.</span><span>get</span><span>(</span><span>'env'</span><span>)</span> <span>===</span> <span>'development'</span> <span>?</span> err <span>:</span> <span>{</span><span>}</span><span>;</span>\n\n  <span>// render the error page</span>\n  res<span>.</span><span>status</span><span>(</span>err<span>.</span>status <span>||</span> <span>500</span><span>)</span><span>;</span>\n  res<span>.</span><span>render</span><span>(</span><span>'error'</span><span>)</span><span>;</span>\n<span>}</span><span>)</span><span>;</span>\n\nmodule<span>.</span>exports <span>=</span> app<span>;</span>\n</code></pre></div><p id=\"c9e7\">ในที่นี้ผมจะกำหนด topic สำหรับ subscribe เป็น “<strong><em>tasmota/#”</em></strong> นะครับ</p><blockquote><p># แปลว่ายอมรับทุกๆ topic ที่ขึ้นต้นด้วย prefix “tasmota”</p></blockquote><p id=\"2e4e\">เสร็จแล้วหลังจากนั้นทำการแก้ไขไฟล์ <strong><em>views/index.ejs </em></strong>โดยที่ผมจะทำการเพิ่มปุ่มสำหรับเปิดและปิดเจ้าตัว Sonoff นะครับ ซึ่งในไฟล์ <strong><em>views/index.ejs </em></strong>เราก็จะทำการเพิ่ม html button tag กัน</p><div><pre data-lang=\"HTML\"><code data-hcb-clip=\"2\"><span>&lt;!DOCTYPE html&gt;</span>\n<span><span><span>&lt;</span>html</span><span>&gt;</span></span>\n  <span><span><span>&lt;</span>head</span><span>&gt;</span></span>\n    <span><span><span>&lt;</span>title</span><span>&gt;</span></span>&lt;%= title %&gt;<span><span><span>&lt;/</span>title</span><span>&gt;</span></span>\n    <span><span><span>&lt;</span>link</span> <span>rel</span><span><span>=</span><span>\"</span>stylesheet<span>\"</span></span> <span>href</span><span><span>=</span><span>\"</span>/stylesheets/style.css<span>\"</span></span> <span>/&gt;</span></span>\n  <span><span><span>&lt;/</span>head</span><span>&gt;</span></span>\n  <span><span><span>&lt;</span>body</span><span>&gt;</span></span>\n    <span><span><span>&lt;</span>h1</span><span>&gt;</span></span>&lt;%= title %&gt;<span><span><span>&lt;/</span>h1</span><span>&gt;</span></span>\n    <span><span><span>&lt;</span>p</span><span>&gt;</span></span>Welcome nodejs-tasmota<span><span><span>&lt;/</span>p</span><span>&gt;</span></span>\n    <span><span><span>&lt;</span>button</span> <span>id</span><span><span>=</span><span>\"</span>butt_on<span>\"</span></span><span>&gt;</span></span>เปิด<span><span><span>&lt;/</span>button</span><span>&gt;</span></span>\n    <span><span><span>&lt;</span>button</span> <span>id</span><span><span>=</span><span>\"</span>butt_off<span>\"</span></span><span>&gt;</span></span>ปิด<span><span><span>&lt;/</span>button</span><span>&gt;</span></span>\n  <span><span><span>&lt;/</span>body</span><span>&gt;</span></span>\n  <span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>\"</span>https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js<span>\"</span></span><span>&gt;</span></span><span></span><span><span><span>&lt;/</span>script</span><span>&gt;</span></span>\n  <span><span><span>&lt;</span>script</span><span>&gt;</span></span><span>\n    <span>$</span><span>(</span><span>\"#butt_on\"</span><span>)</span><span>.</span><span>click</span><span>(</span><span>function</span> <span>(</span><span>event</span><span>)</span> <span>{</span>\n      event<span>.</span><span>preventDefault</span><span>(</span><span>)</span><span>;</span>\n      $<span>.</span><span>get</span><span>(</span><span>\"/control/on\"</span><span>,</span> <span>function</span> <span>(</span><span>data<span>,</span> status</span><span>)</span> <span>{</span>\n        <span>alert</span><span>(</span><span>\"Data: \"</span> <span>+</span> data <span>+</span> <span>\"\\nStatus: \"</span> <span>+</span> status<span>)</span><span>;</span>\n      <span>}</span><span>)</span><span>;</span>\n    <span>}</span><span>)</span><span>;</span>\n    <span>$</span><span>(</span><span>\"#butt_off\"</span><span>)</span><span>.</span><span>click</span><span>(</span><span>function</span> <span>(</span><span>event</span><span>)</span> <span>{</span>\n      event<span>.</span><span>preventDefault</span><span>(</span><span>)</span><span>;</span>\n      $<span>.</span><span>get</span><span>(</span><span>\"/control/off\"</span><span>,</span> <span>function</span> <span>(</span><span>data<span>,</span> status</span><span>)</span> <span>{</span>\n        <span>alert</span><span>(</span><span>\"Data: \"</span> <span>+</span> data <span>+</span> <span>\"\\nStatus: \"</span> <span>+</span> status<span>)</span><span>;</span>\n      <span>}</span><span>)</span><span>;</span>\n    <span>}</span><span>)</span><span>;</span>\n  </span><span><span><span>&lt;/</span>script</span><span>&gt;</span></span>\n<span><span><span>&lt;/</span>html</span><span>&gt;</span></span></code></pre></div><p id=\"4226\">จากโค๊ดจะเห็นว่าผมได้สร้าง button tag เอาไว้สำหรับกด เปิด และ ปิด หลังจากที่ผู้ใช้งานทำการกดแล้วจะเกิด event การ click แล้ว จะไปเรียก Endpoint URL <em>/control/on</em> และ <em>/control/off</em> ผ่าน method GET กันครับ</p><p id=\"f5bd\"><strong>เป็นอันว่าขั้นตอนที่ 2 ก็เสร็จไปแล้วขั้นตอนที่ 3 กันต่อครับโดยขั้นตอนนี้จะเป็นการเขียนให้ไปเรียก MQTT publish ข้อมูลตามโครงสร้าง MQTT ฝั่งของ Tasmota กัน</strong></p><p id=\"eb9a\">ทำการแก้ไขโค๊ดในส่วนของการ route โดยการเปิดไฟล์ route/index.js เพื่อเพิ่ม Endpoint สำหรับการเปิดและปิด Sonoff ซึ่งในส่วนนี้เราจะต้องกำหนดข้อมูล publish ให้เป็นไปตามโครงสร้างของ Tasmota ด้วยนะครับ</p><div><pre data-lang=\"JavaScript\"><code data-hcb-clip=\"3\"><span>const</span> <span>main</span> <span>=</span> <span>(</span><span>app<span>,</span> client</span><span>)</span> <span>=&gt;</span> <span>{</span>\n  <span>/* GET home page. */</span>\n  app<span>.</span><span>get</span><span>(</span><span>'/'</span><span>,</span> <span>function</span> <span>(</span><span>req<span>,</span> res</span><span>)</span> <span>{</span>\n    res<span>.</span><span>render</span><span>(</span><span>'index'</span><span>,</span> <span>{</span>\n      title<span>:</span> <span>'nodejs-tasmota'</span>\n    <span>}</span><span>)</span><span>;</span>\n  <span>}</span><span>)</span><span>;</span>\n\n  app<span>.</span><span>get</span><span>(</span><span>'/control/on'</span><span>,</span> <span>function</span> <span>(</span><span>req<span>,</span> res</span><span>)</span> <span>{</span>\n    <span>const</span> fullTopic <span>=</span> <span><span>`tasmota/cmnd/tasmota-1/POWER`</span></span>\n    client<span>.</span><span>publish</span><span>(</span>fullTopic<span>,</span> <span>\"ON\"</span><span>)</span><span>;</span>\n    res<span>.</span><span>send</span><span>(</span><span>'Turn on!'</span><span>)</span>\n  <span>}</span><span>)</span>\n\n  app<span>.</span><span>get</span><span>(</span><span>'/control/off'</span><span>,</span> <span>function</span> <span>(</span><span>req<span>,</span> res</span><span>)</span> <span>{</span>\n    <span>const</span> fullTopic <span>=</span> <span><span>`tasmota/cmnd/tasmota-1/POWER`</span></span>\n    client<span>.</span><span>publish</span><span>(</span>fullTopic<span>,</span> <span>\"OFF\"</span><span>)</span><span>;</span>\n    res<span>.</span><span>send</span><span>(</span><span>'Turn off!'</span><span>)</span>\n  <span>}</span><span>)</span>\n<span>}</span>\n\nmodule<span>.</span>exports <span>=</span> main<span>;</span></code></pre></div><p id=\"7e97\">ภายใน Configuration ของ Sonoff เราจะต้องตั้งค่า Topic และ Full Topic ในการ subscribe</p><ul><li><strong><em>Topic: tasmota-1</em></strong></li><li><strong><em>Full Topic: tasmota/%prefix%/%topic%/</em></strong></li></ul><p id=\"ced7\">หลังจากนั้นทำการกด Save แล้ว Sonoff ของเราจะทำการ restart ตัวเอง เป็นอันว่าตอนนี้เจ้า Sonoff ของเราพร้อมกับการเชื่อมต่อเข้ากับ web application ของเราแล้ว</p><div><figure><img src=\"https://miro.medium.com/max/1498/1*KzowlRg7f3O-3AKXTrGqpQ.png\" alt=\"Image for post\"></figure></div><p><strong>Fulltopic : tasmota/${prefix}/${topic}/</strong></p><ul><li><strong><em>tasmota</em></strong> เป็นชื่อกรุ๊ปของเราสามารถตั้งเป็นชื่ออะไรก็ได้</li><li><strong><em>prefix</em></strong> คือส่วนที่กำหนดว่าเป็นคำสั่งอะไร เช่น cmnd, stat, tele</li><li><strong>topic </strong>คือส่วนที่เรากำหนดได้โดยอาจจะเป็นชื่อของอุปกรณ์ที่สามารถแสดงความเจาะจงถึงอุปกรณ์นั้นๆได้เช่น device_1, device_2</li></ul><p id=\"cea0\">ในการ publish ไปยัง MQTT broker นั้นเราจะต้องสร้าง topic ใน application ของเราให้อยู่ในรูปแบบ Fulltopic ของ Tasmota ซึ่งถ้าเราจะทำการกำหนดสถานะเช่นเปิด/ปิด Sonoff จำเป็นต้องเพิ่มคำสั่งย่อยของ prefix นั้นๆคือ POWER</p><p id=\"b35c\">ทำการรัน application ของเราโดยใช้คำสั่ง</p><pre>$ npm start</pre><p id=\"4bb5\">หลังจากนั้นเปิด web browser ของเราไปที่ <a href=\"http://localhost:3000/\"><strong>http://localhost:3000</strong></a> เพื่อดูผลลัพธ์</p><div><figure><img src=\"https://miro.medium.com/max/392/1*5GYz10EaylHCBNq58ciCnQ.gif\" alt=\"Image for post\"></figure></div><p id=\"a2ce\">จริงๆแล้ว Tasmota firmware มีของดีอีกเยอะเลยครับไม่ว่าจะเป็นข้อมูลที่ response มาจากตัว firmware แล้วผ่าน MQTT ซึ่งเราสามารถนำข้อมูลต่างๆนั้นมาทำเป็น Dashboard หรือแสดงสถานะต่างๆได้เป็นอย่างดีเลยครับ ไม่ว่าอยากจะทำ Smarthome เอย หรือ Smart ต่างๆ Tasmota และ Sonoff นี้น่าจะช่วยในส่วนของ hardware สำหรับนักพัฒนาได้เยอะครับ หากมีข้อผิดพลาดประการใด กราบขออภัยด้วยครับ <img draggable=\"false\" role=\"img\" alt=\"🙂\" src=\"https://s.w.org/images/core/emoji/13.0.0/svg/1f642.svg\"></p><h2 id=\"5eaa\">สำหรับวันนี้ขอบคุณและสวัสดีครับ</h2><ul><li><strong>Github code example</strong></li></ul><blockquote><p><a href=\"https://github.com/toygame/nodejs-tasmota\" target=\"_blank\" rel=\"noreferrer noopener\">toygame/<strong>nodejs-tasmota</strong></a></p><cite>https://github.com/toygame/nodejs-tasmota</cite></blockquote></div></div>","author":"thanapon.tap","siteTitle":"Thanapon","siteHash":"6a039c2f54d76e4c49227d80968f2a30de5427cc57525c047c383ea3563cde5f","entryHash":"6e7d0a8cbbf89ca66c306146f810b63731c6989f9a1ce7c989edeba9c34809b4","category":"Thai"}