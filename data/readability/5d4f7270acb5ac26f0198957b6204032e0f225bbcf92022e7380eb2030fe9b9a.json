{"title":"การเขียน test ทำให้การพัฒนาช้าลง ?","link":"https://www.somkiat.cc/slow-with-test/","date":1617094413000,"content":"<div id=\"readability-page-1\" class=\"page\"><div id=\"page\"><article><div id=\"content_box\"><header></header><div><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/03/slow-test-1024x538.jpeg\" alt=\"\" width=\"532\" height=\"279\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/03/slow-test-1024x538.jpeg 1024w, https://www.somkiat.cc/wp-content/uploads/2021/03/slow-test-300x158.jpeg 300w, https://www.somkiat.cc/wp-content/uploads/2021/03/slow-test-768x403.jpeg 768w, https://www.somkiat.cc/wp-content/uploads/2021/03/slow-test.jpeg 1200w\" sizes=\"(max-width: 532px) 100vw, 532px\"></figure><p>เพิ่งอ่านบทความเรื่อง <strong><a href=\"https://levelup.gitconnected.com/we-didnt-write-tests-because-we-wanted-to-get-our-code-out-faster-2f9de49a52d7\" target=\"_blank\" rel=\"noreferrer noopener\">We didn’t write tests because we wanted to get our code out faster</a></strong></p><p>กับเจอคำถามว่าในกลุ่ม <a href=\"https://www.facebook.com/groups/888843288132583/permalink/1392241561126084\" target=\"_blank\" rel=\"noreferrer noopener\">QA &amp; Testers Thailand</a> ว่า</p><p><strong><em>เวลาเราเขียน automate api เช่นกรณีเบอร์โทร<br>ถ้าหน้าบ้านมันดักอยู่ว่าไม่ให้ใส่เกิน 10 ตัว<br>ใน api เราจำเป็นต้องเช็คไหมคะว่าห้ามเกิน</em></strong></p><p>เป็นสิ่งที่น่าสนใจทั้งคู่ จึงสรุปไว้หน่อย</p><p><strong>คำตอบในเรื่องที่สองคือ</strong></p><div><p>น่าจะกลับมาคุยกันก่อนว่า แยก frontend และ backend ออกจากกันทำไม<br>เพราะว่าถ้ามีแค่ส่วนเดียว<br>ก็ทดสอบที่เดียวไป ง่ายสุด ๆ ใช่ไหม ?</p><p>แต่ถ้าแยกกันเป็นสองส่วนแล้ว ไม่ว่าจะด้วยเหตุผลใด ๆ ก็ตาม<br>ก่อนที่ทั้งสองจะมาทำงานด้วยกัน<br><strong><em>ก็จำเป็นต้องทำให้มั่นใจก่อนว่า</em></strong><br>แต่ละส่วนทำงานได้ตามที่ต้องการและตกลงกันไว้<br>ไม่ว่าจะ success หรือ failure ก็ตาม</p></div><p><strong>ส่วนเรื่องข้ออ้างต่าง ๆ จะกลับไปที่บทความแรก</strong></p><div><p>คือเราไม่เขียน test เพราะว่า ต้องการพัฒนาให้เร็วขึ้นมันจริงหรือเปล่า ?<br>เราเขียน test เพื่อทำให้มั่นใจว่าสิ่งที่เคย work มันจะยังคง work เสมอ<br>ไม่ว่าเราจะเพิ่มหรือลบ code ใด ๆ<br>ตราบเท่าที่ requirement ยังไม่เปลี่ยน</p><p><strong>แต่ถ้าเรามีความมั่นใจว่า สิ่งท่ีเราเพิ่มหรือลบไปนั้น</strong><br>ไม่ส่งผลกระทบแน่นอนก็ไม่มีความจำเป็นต้องเขียน test ใช่ไหม<br>มันก็สมเหตุสมผลนะแต่ความจริงคืออะไรละ ตรงนี้น่าคิด</p></div><p><strong>ยิ่งเวลาผ่านไปจำนวน feature เริ่มมากขึ้น</strong><br>ความซับซ้อนสูงขึ้น<br>ความเป็นไปได้ของ bug ก็มากขึ้นตามจำนวน code</p><p><strong>วันดีคืนดี ไม่รู้อะไรเข้าฝันอยากจะมี refactor code</strong><br>ซึ่งเป็นสิ่งที่ดี<br>คำถามคือ refactor code แล้ว มันยังทำงานได้เช่นเดิมไหม ?<br>ตรงนี้ต้องตอบด้วยความมั่นใจ<br>และแสดงให้ดูได้ด้วยจะทำเช่นใด แล้วแต่เลย</p><p><strong><em>Always test ครับ<br>แต่จะ test แบบไหน ก็ตามใจ<br>แต่ต้อง repeat ได้<br>ได้รับ feedback ที่รวดเร็ว<br>เท่านี้ก็พอแล้ว ไม่ขออะไรมาก</em></strong></p></div><div><p><img alt=\"\" src=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=90&amp;d=mm&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=180&amp;d=mm&amp;r=g 2x\" height=\"90\" width=\"90\"></p><h4>Article by <a href=\"https://www.facebook.com/somkiatspns\">Somkiat Puisungnoen</a></h4><p>To be Craftmanship</p></div></div></article></div></div>","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"5d4f7270acb5ac26f0198957b6204032e0f225bbcf92022e7380eb2030fe9b9a","category":"Thai"}