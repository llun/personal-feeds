{"title":"[Flutter] บันทึกแนวทางการจัดการเรื่อง SEO (Search Engine Optimization)","link":"https://www.somkiat.cc/flutter-for-web-seo-workaround/","date":1621496635000,"content":"<div id=\"readability-page-1\" class=\"page\"><div id=\"page\"><article><div id=\"content_box\"><header></header><div><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/05/SEO.jpeg\" alt=\"\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/05/SEO.jpeg 880w, https://www.somkiat.cc/wp-content/uploads/2021/05/SEO-300x153.jpeg 300w, https://www.somkiat.cc/wp-content/uploads/2021/05/SEO-768x392.jpeg 768w\" sizes=\"(max-width: 880px) 100vw, 880px\"></figure><p>จาก Flutter 2 ที่ออกมา โดยรองรับการพัฒนา web application ด้วย<br>จึงมีปัญหาหนึ่งเรื่องที่ใน community ของกันเยอะ<br>นั่นก็คือเรื่องของ SEO Friendly<br>หรือใน Flutter User Experience Research (UXR) ก็มีเช่นกัน<br>รวมทั้ง feature อื่น ๆ เช่น Hot Reload (ไม่ต้องมากดได้ไหม) เป็นต้น</p><p><strong>ดังนั้นวิธีการยังไม่มีเลย</strong></p><p>เนื่องจากจะทำการแปลงจาก Flutter/Dart มาเป็น HTML/CSS/JS ให้<br>ทำให้เราทำอะไรมากไม่ค่อยได้</p><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/05/web-arch-1024x472.png\" alt=\"\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/05/web-arch-1024x472.png 1024w, https://www.somkiat.cc/wp-content/uploads/2021/05/web-arch-300x138.png 300w, https://www.somkiat.cc/wp-content/uploads/2021/05/web-arch-768x354.png 768w, https://www.somkiat.cc/wp-content/uploads/2021/05/web-arch-1536x708.png 1536w, https://www.somkiat.cc/wp-content/uploads/2021/05/web-arch.png 1836w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></figure><p><strong>แต่จากที่ลองทำใน project เบื้องต้น สรุปสิ่งที่พอทำได้ดังนี้</strong></p><p>ซึ่งผลที่ออกมาก็ถือว่าน่าพอใจ และตรงกับที่ต้องการ<br>นั่นคือเรื่องของ SEO และการ share content<br>ใน Social media ต่าง ๆ ได้ง่ายและเหมาะสมขึ้น<br><strong>ขั้นตอนมีดังนี้</strong></p><p><strong>ขั้นตอนที่ 1 ใน web app ก็มีการใช้งาน routing ปกติ</strong></p><p>โดยจะแบ่งตามหน้ารายการ รวมทั้ง detail เช่น</p><ul><li>Main page ใช้ /</li><li>Promotion page ใช้ #/promotion</li><li>ใน promotion detail page ใช้ #/promotion/1</li></ul><p>โดยทุกหน้าสามารถเข้าถึงด้วย URL ข้างต้นได้ทั้งหมด</p><p><strong>ขั้นตอนที่ 2 เปลี่ยนการ reference หรืออ้างถึง URL ใน page ต่าง ๆ</strong></p><p>โดยทำการกำหนด slug หรือ URL ที่ friendly ขึ้นมาของแต่ละหน้า<br>โดยเฉพาะในหน้า promotion detail<br>ซึ่งกำหนดใหม่ให้เป็น <strong>/promotion/slug</strong><br>รวมทั้งมีการ custom header ต่าง ๆ ของ page ตามที่ต้องการ<br>และนำข้อมูลจาก #/promotion/1 มาใช้<br>ขั้นตอนนี้เหมือนการทำ template นั่นเอง</p><p><strong>ขั้นตอนที่ 3 ใช้ <a href=\"https://developers.google.com/web/tools/puppeteer/articles/ssr\" target=\"_blank\" rel=\"noreferrer noopener\">Puppeteer</a> มาเพื่อสร้างหรือ generate หน้าที่ต้องการไว้</strong></p><p>และบันทึกไว้บน server ที่สร้างไว้<br>และสร้าง server route เข้าถึง<br>ทำให้ทางฝั่งคนเรียกหรือผู้ใช้งานเข้าถึงได้ง่าย<br>รวมทั้งก็เอาไปใส่ sitemap และการ share ได้ง่ายขึ้น</p><p>แต่ปัญหาที่ตามมาคือ เมื่อทุกครั้ง content เพิ่มหรือเปลี่ยนแปลง<br>ก็ต้องมี run puppeteer ใหม่ทุกครั้ง ซึ่งกิน resource น่าดู<br>จึงทำการแยกส่วนงานนี้ออกไปอีกเครื่อง<br>รวมทั้งเรื่องการ monitoring task การทำงานนี้ตลอดเวลาด้วย<br>และทำให้ระบบงานทำการเริ่มซับซ้อนขึ้น</p><p><strong>แต่ผลที่ออกมาก็เป็นที่น่าพอใจ ได้ไปต่อในตอนนี้</strong></p></div><div><p><img alt=\"\" src=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=90&amp;d=mm&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=180&amp;d=mm&amp;r=g 2x\" height=\"90\" width=\"90\"></p><h4>Article by <a href=\"https://www.facebook.com/somkiatspns\">Somkiat Puisungnoen</a></h4><p>To be Craftmanship</p></div></div></article></div></div>","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"dd2f23d09a6d59fde465b2f2df53676f6fc27b0dc223f514a5a1001100dddec6","category":"Thai"}