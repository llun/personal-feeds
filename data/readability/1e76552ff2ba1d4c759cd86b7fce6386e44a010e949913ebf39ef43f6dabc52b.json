{"title":"Announcing Version 2.0 of the Kubernetes and Helm Providers for HashiCorp Terraform","link":"https://www.hashicorp.com/blog/announcing-version-2-0-kubernetes-and-helm-providers-for-hashicorp-terraform","date":1612198800000,"content":"<div id=\"readability-page-1\" class=\"page\"><section><p>The HashiCorp Terraform Strategic Integrations team is excited to announce the release of major version 2.0 for the Kubernetes and Helm providers for HashiCorp Terraform. This major release includes some significant changes to authentication, an upgrade to the <a href=\"https://www.hashicorp.com/blog/making-terraform-provider-development-more-accessible\">new Terraform SDK</a> as well as improvements to resources to improve consistency and align more closely with the Kubernetes API. We discuss a select few changes in detail below, and for the full list of changes you can look to the Helm provider <a href=\"https://github.com/hashicorp/terraform-provider-helm/blob/master/CHANGELOG.md#200-december-19-2020\">changelog</a> and Kubernetes provider <a href=\"https://github.com/hashicorp/terraform-provider-kubernetes/blob/master/CHANGELOG.md#200\">changelog</a>.</p><p>Please read the upgrade guides for each provider before upgrading. You can find the upgrade guide for the Helm provider <a href=\"https://registry.terraform.io/providers/hashicorp/helm/latest/docs/guides/v2-upgrade-guide\">here</a> and the Kubernetes provider <a href=\"https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/guides/v2-upgrade-guide\">here</a>.</p><h2><a href=\"#changes-to-provider-authentication\" aria-label=\"changes to provider authentication permalink\">»</a><a id=\"changes-to-provider-authentication\" aria-hidden=\"\"></a>Changes to Provider Authentication</h2><p>The Kubernetes and Helm providers’ v1.x authentication scheme made it easy for new users to start out with a single cluster. However, we found that it made things more complicated for users who were managing multiple Kubernetes clusters, a common scenario among the providers’ users. For these users, the providers’ default assumption that users wanted to use the configuration set in the KUBECONFIG environment variable sometimes resulted in accidental application of configuration to the wrong cluster.</p><p>In order to promote explicit declaration of access credentials and avoid accidental misconfiguration of the Kubernetes and Helm providers, we are removing support for the <code>KUBECONFIG</code> environment variable and the <code>load_config_file</code> attribute in the provider configuration block. Instead, we are now offering the ability to set an explicit <code>KUBE_CONFIG_PATH</code> or <code>KUBE_CONFIG_PATHS</code> in the provider configuration block to allow you to configure the provider with a given <code>kubeconfig</code> file.</p><h2><a href=\"#deprecated-support-for-terraform-v0-11\" aria-label=\"deprecated support for terraform v0 11 permalink\">»</a><a id=\"deprecated-support-for-terraform-v0-11\" aria-hidden=\"\"></a>Deprecated Support for Terraform v0.11</h2><p>In November 2019, we announced that we would be <a href=\"https://www.hashicorp.com/blog/deprecating-terraform-0-11-support-in-terraform-providers\">deprecating support for Terraform v0.11</a>. With the upgrade to the new Terraform SDK in these new providers, we now no longer support Terraform v0.11. Please <a href=\"https://www.terraform.io/upgrade-guides/0-12.html\">upgrade your terraform version</a> before proceeding with the upgrade to the 2.0 version of the Helm and Kubernetes providers.</p><h2><a href=\"#helm-v2-support-removed\" aria-label=\"helm v2 support removed permalink\">»</a><a id=\"helm-v2-support-removed\" aria-hidden=\"\"></a>Helm v2 Support Removed</h2><p>We have removed support for Helm v2 <a href=\"https://helm.sh/blog/helm-v2-deprecation-timeline/\">in accordance with the Helm v2 deprecation timeline</a>. The last version of the provider that supports Helm v2 is provider version <a href=\"https://registry.terraform.io/providers/hashicorp/helm/0.10.6\">v0.10.6</a>. We will no longer be accepting pull requests for bug fixes related to this version going forward.</p><h2><a href=\"#kubernetes-resource-alignment\" aria-label=\"kubernetes resource alignment permalink\">»</a><a id=\"kubernetes-resource-alignment\" aria-hidden=\"\"></a>Kubernetes Resource Alignment</h2><p>Besides the authentication changes discussed above, we took the opportunity to align many of the resources in the Kubernetes provider with the upstream Kubernetes API and with each other. Included in these changes is an update to the <code>automount_service_account_token</code> default on all resources that include PodSpec - it now defaults to <code>true</code>. See the changelog and upgrade guides above for a comprehensive list of updates.</p><p>We would love to hear your feedback on these updates! You can post bugs and feature requests for the Helm provider by opening an issue at <a href=\"https://github.com/hashicorp/terraform-provider-helm\">hashicorp/terraform-provider-helm</a>, or the Kubernetes provider at <a href=\"https://github.com/hashicorp/terraform-provider-kubernetes\">hashicorp/terraform-provider-kubernetes</a>. You can also engage with us and the community on <a href=\"https://discuss.hashicorp.com/\">HashiCorp Discuss</a> and in <a href=\"https://kubernetes.slack.com/messages/CJY6ATQH4\">#terraform-providers</a> on the Kubernetes Slack (<a href=\"http://slack.k8s.io/\">Sign up here</a>).</p><p>To discover more about managing Kubernetes with Terraform, review the <a href=\"https://learn.hashicorp.com/collections/terraform/kubernetes\">guides</a> on HashiCorp Learn.</p></section></div>","author":"Aareet Mahadevan","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"1e76552ff2ba1d4c759cd86b7fce6386e44a010e949913ebf39ef43f6dabc52b","category":"Tech"}