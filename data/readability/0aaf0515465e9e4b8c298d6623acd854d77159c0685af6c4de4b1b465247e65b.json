{"title":"สิ่งที่ถูก Hold ใน Technology Radar Vol. 24","link":"https://www.somkiat.cc/technology-radar-vol-24/","date":1618586586000,"content":"<div id=\"readability-page-1\" class=\"page\"><div id=\"page\"><article><div id=\"content_box\"><header></header><div><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/04/radar-24.jpg\" alt=\"\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/04/radar-24.jpg 1000w, https://www.somkiat.cc/wp-content/uploads/2021/04/radar-24-300x183.jpg 300w, https://www.somkiat.cc/wp-content/uploads/2021/04/radar-24-768x469.jpg 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\"></figure><p>ใน Technology Radar Vol. 24 นั้นมีรายละเอียดที่น่าสนใจคือ<br>สิ่งที่ถูก Hold คือ proceed with caution<br>นั่นคือ ดำเนินการอย่างระมัดระวังเพราะว่า<br>อาจจะส่งผลแย่มากกว่าดี !!<br>มาดูกันว่ามีอะไรบ้าง ในแต่ละกลุ่ม</p><p><strong>กลุ่มที่ 1 Techniques</strong></p><p>เรื่องที่น่าสนใจ ประกอบไปด้วย</p><p><strong>ตัวแรกคือ GitOps ซึ่งผลยังไม่เคยใช้งาน</strong></p><p>แต่จากเอกสารบอกว่า<br>มันดีนะ<br>แต่เมื่อใช้งานแบบ <strong>branch per environment</strong><br>จะก่อให้เกิดปัญหาในการ config ของแต่ละ environment ขึ้นมา<br>ซึ่งเป็นปัญหาเดียวกับ branch ที่มาอายุนาน ๆ ใน <strong>GitFlow</strong> นั่นเอง</p><p><strong>ตัวที่สอง คือ Layered platform teams</strong></p><p>เป็นการแบ่งทีมตาม layer หรือ technology<br>ทำให้เกิด component team เช่นเดิม<br>ยกตัวอย่างเช่น แยกเป็น frontend, backend และ database team<br>แน่นอนว่า ปัญหาเดิม ๆ ในการทำงานก็ตามมา</p><p><strong>ตัวที่สาม คือ Separate code and pipeline ownership</strong></p><p>จะเป็นปัญหาเดียวกันกับเรื่องก่อนหน้านี้<br>คือแยกทีมทำหรือรับผิดชอบระหว่าง code และ pipeline<br>ก่อให้เกิดการทำงานของใครของมัน<br>อาจจะต้องมีการสร้าง process การทำงาน<br>เช่นเปิด ticket/request การทำงานและเปลี่ยนแปลง<br>ผลคือ ช้าลงไปอีก</p><p><strong><em>อีกทั้งยังมีเรื่องของ SAFe และการ peer review equals pull request อีกด้วย</em></strong></p><p><strong>กลุ่มที่ 2 Tools</strong></p><p>มีตัวเดียวคือ <strong>AWS CodePipeline</strong><br>ซึ่งผมก็ไม่เคยใช้งาน<br>แต่จากเอกสารบอกว่า<br>เพียงแค่จะทำ process ง่าย ๆ กลับต้องใช้เวลาและการ setup ยุ่งยาก และมากเกินไป<br>ดังนั้นน่าจะเป็นเรื่องแนวทางการใช้งานที่ไม่ค่อยยืดหยุ่นและสะดวก</p><p><strong>กลุ่มที่ 3 Platforms</strong></p><p>มี 2 เรื่องคือ</p><ul><li><strong>Azure Machine Learning</strong> ที่ scale ได้ยาก และเอกสารที่ไม่ดีพอ</li><li><strong>Homemade infrastructure-as-code (IaC) products</strong> คือทำเองใช้เอง ปัญหาหลัก ๆ คือ product roadmap ที่จะไม่ชัดเจนมากกว่า</li></ul></div><div><p><img alt=\"\" src=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=90&amp;d=mm&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=180&amp;d=mm&amp;r=g 2x\" height=\"90\" width=\"90\"></p><h4>Article by <a href=\"https://www.facebook.com/somkiatspns\">Somkiat Puisungnoen</a></h4><p>To be Craftmanship</p></div></div></article></div></div>","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"0aaf0515465e9e4b8c298d6623acd854d77159c0685af6c4de4b1b465247e65b","category":"Thai"}