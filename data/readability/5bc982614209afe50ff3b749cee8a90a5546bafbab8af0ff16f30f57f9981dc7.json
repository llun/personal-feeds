{"title":"Wait Conditions in the Kubernetes Provider for HashiCorp Terraform","link":"https://www.hashicorp.com/blog/wait-conditions-in-the-kubernetes-provider-for-hashicorp-terraform","date":1612803600000,"content":"<div id=\"readability-page-1\" class=\"page\"><div><section><p>The HashiCorp Terraform Strategic Integrations team is working hard to bring you a <a href=\"https://registry.terraform.io/providers/hashicorp/kubernetes/latest\">Kubernetes provider</a> for HashiCorp Terraform with a better-than-native experience. We recently improved the <code>wait_for</code> configurations on several resources, as well as introduced an entirely new generic waiter. The new and improved configuration options allow you to specify whether Terraform should wait for a specific condition, or not, before continuing to <code>apply</code> your configuration or complete successfully.</p><h2><a href=\"#wait-for-rollout\" aria-label=\"wait for rollout permalink\">»</a><a id=\"wait-for-rollout\" aria-hidden=\"\"></a>Wait For Rollout</h2><p>The <code>wait_for_rollout</code> attribute is available on both the <a href=\"https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/deployment#wait_for_rollout\"><code>kubernetes_deployment</code></a> and the <a href=\"https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/stateful_set#wait_for_rollout\"><code>kubernetes_stateful_set</code></a> resources. The default value for <code>wait_for_rollout</code> is <code>true</code>, so if that’s the behavior you want, you don’t need to do anything. However, there are cases where you may not expect a rollout to complete before you’re finished applying your Kubernetes configuration. In these cases, you can set <code>wait_for_rollout</code> to <code>false</code> and the Kubernetes provider will move on after the <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\">Deployment</a> or <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/\">StatefulSet</a> have been successfully submitted to Kubernetes. Below is an example configuration that demonstrates the usage of <code>wait_for</code> in a deployment resource.</p></section><div><pre><code><span>terraform</span> <span>{</span>\n <span>required_providers</span> <span>{</span>\n   <span>kubernetes</span> <span>=</span> <span>{</span>\n     <span>source</span> <span>=</span> <span>\"hashicorp/kubernetes\"</span>\n   <span>}</span>\n <span>}</span>\n<span>}</span>\n\n<span>provider<span> \"kubernetes\" </span></span><span>{</span>\n   <span>config_path</span> <span>=</span> <span>\"~/.kube/config\"</span>\n<span>}</span>\n\n<span>resource <span>\"kubernetes_deployment\"</span></span> <span>\"nginx\"</span> <span>{</span>\n <span>metadata</span> <span>{</span>\n   <span>name</span> <span>=</span> <span>\"example-nginx\"</span>\n   <span>labels</span> <span>=</span> <span>{</span>\n     <span>App</span> <span>=</span> <span>\"ExampleNGINX\"</span>\n   <span>}</span>\n <span>}</span>\n\n <span>spec</span> <span>{</span>\n   <span>replicas</span> <span>=</span> <span>2</span>\n   <span>selector</span> <span>{</span>\n     <span>match_labels</span> <span>=</span> <span>{</span>\n       <span>App</span> <span>=</span> <span>\"ExampleNGINX\"</span>\n     <span>}</span>\n   <span>}</span>\n   <span>template</span> <span>{</span>\n     <span>metadata</span> <span>{</span>\n       <span>labels</span> <span>=</span> <span>{</span>\n         <span>App</span> <span>=</span> <span>\"ExampleNGINX\"</span>\n       <span>}</span>\n     <span>}</span>\n     <span>spec</span> <span>{</span>\n       <span>container</span> <span>{</span>\n         <span>image</span> <span>=</span> <span>\"nginx:1.7.8\"</span>\n         <span>name</span>  <span>=</span> <span>\"example\"</span>\n\n         <span>port</span> <span>{</span>\n           <span>container_port</span> <span>=</span> <span>80</span>\n         <span>}</span>\n       <span>}</span>\n     <span>}</span>\n   <span>}</span>\n <span>}</span>\n   <span>wait_for_rollout</span> <span>=</span> <span>false</span>\n<span>}</span></code></pre></div><section><h2><a href=\"#wait-for-load-balancer\" aria-label=\"wait for load balancer permalink\">»</a><a id=\"wait-for-load-balancer\" aria-hidden=\"\"></a>Wait For Load Balancer</h2><p>The <code>wait_for_load_balancer</code> attribute is an option on the <code>kuberntes_ingress</code> resource. An <a href=\"https://kubernetes.io/docs/concepts/services-networking/ingress/\">Ingress</a> controls access to services in the Kubernetes cluster. By default, <code>wait_for_loadbalancer</code> is set to <code>false</code>, which means the Kubernetes provider will move on after Kubernetes has accepted the Ingress object API request. When creating or modifying an Ingress with a load balancer configuration, some users want to make sure at least one endpoint is available through the load balancer before the Terraform <code>apply</code> succeeds, or moves on. When <code>wait_for_load_balancer</code> is set to <code>true</code>, that’s exactly what the Kubernetes provider will do.</p></section><div><pre><code><span>terraform</span> <span>{</span>\n <span>required_providers</span> <span>{</span>\n   <span>kubernetes</span> <span>=</span> <span>{</span>\n     <span>source</span> <span>=</span> <span>\"hashicorp/kubernetes\"</span>\n   <span>}</span>\n <span>}</span>\n<span>}</span>\n\n<span>provider<span> \"kubernetes\" </span></span><span>{</span>\n <span>config_path</span> <span>=</span> <span>\"~/.kube/config\"</span>\n<span>}</span>\n\n<span>resource <span>\"kubernetes_ingress\"</span></span> <span>\"example\"</span> <span>{</span>\n <span>metadata</span> <span>{</span>\n   <span>name</span> <span>=</span> <span>\"example\"</span>\n\n   <span>annotations</span> <span>=</span> <span>{</span>\n     <span>\"ingress.kubernetes.io/rewrite-target\"</span> <span>=</span> <span>\"/\"</span>\n   <span>}</span>\n <span>}</span>\n\n <span>spec</span> <span>{</span>\n   <span>backend</span> <span>{</span>\n     <span>service_name</span> <span>=</span> <span>\"example\"</span>\n     <span>service_port</span> <span>=</span> <span>8080</span>\n   <span>}</span>\n\n   <span>rule</span> <span>{</span>\n     <span>host</span> <span>=</span> <span>\"myminikube.info\"</span>\n\n     <span>http</span> <span>{</span>\n       <span>path</span> <span>{</span>\n         <span>path</span> <span>=</span> <span>\"/\"</span>\n\n         <span>backend</span> <span>{</span>\n           <span>service_name</span> <span>=</span> <span>\"exampleserver\"</span>\n           <span>service_port</span> <span>=</span> <span>8080</span>\n         <span>}</span>\n       <span>}</span>\n     <span>}</span>\n   <span>}</span>\n <span>}</span>\n <span>wait_for_load_balancer</span> <span>=</span> <span>true</span>\n<span>}</span></code></pre></div><section><h2><a href=\"#wait-for-completion\" aria-label=\"wait for completion permalink\">»</a><a id=\"wait-for-completion\" aria-hidden=\"\"></a>Wait For Completion</h2><p>The last wait for attribute on the Kubernetes provider is <code>wait_for_completion</code>, which is available on the <code>kubernetes_job</code> resource. <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/\">Jobs</a> create Pods that run until a specific task either completes successfully or fails. This attribute ensures Terraform waits until the job has completed or failed before continuing.</p></section><div><pre><code><span>terraform</span> <span>{</span>\n <span>required_providers</span> <span>{</span>\n   <span>kubernetes</span> <span>=</span> <span>{</span>\n     <span>source</span> <span>=</span> <span>\"hashicorp/kubernetes\"</span>\n   <span>}</span>\n <span>}</span>\n<span>}</span>\n\n<span>provider<span> \"kubernetes\" </span></span><span>{</span>\n <span>config_path</span> <span>=</span> <span>\"~/.kube/config\"</span>\n<span>}</span>\n\n<span>resource <span>\"kubernetes_job\"</span></span> <span>\"test-pr\"</span> <span>{</span>\n <span>metadata</span> <span>{</span>\n   <span>name</span> <span>=</span> <span>\"job-with-wait\"</span>\n   <span>namespace</span> <span>=</span> <span>\"default\"</span>\n <span>}</span>\n <span>spec</span> <span>{</span>\n   <span>completions</span> <span>=</span> <span>1</span>\n   <span>template</span> <span>{</span>\n     <span>metadata</span> <span>{</span><span>}</span>\n     <span>spec</span> <span>{</span>\n       <span>container</span> <span>{</span>\n         <span>name</span> <span>=</span> <span>\"sleep\"</span>\n         <span>image</span> <span>=</span> <span>\"busybox:latest\"</span>\n         <span>command</span> <span>=</span> <span>[</span><span>\"sleep\"</span>, <span>\"30\"</span><span>]</span>\n       <span>}</span>\n       <span>restart_policy</span> <span>=</span> <span>\"Never\"</span>\n     <span>}</span>\n   <span>}</span>\n <span>}</span>\n <span>wait_for_completion</span> <span>=</span> <span>true</span>\n <span>timeouts</span> <span>{</span>\n   <span>create</span> <span>=</span> <span>\"40s\"</span>\n <span>}</span>\n<span>}</span></code></pre></div><section><h2><a href=\"#the-new-generic-wait\" aria-label=\"the new generic wait permalink\">»</a><a id=\"the-new-generic-wait\" aria-hidden=\"\"></a>The New Generic Wait</h2><p>The <a href=\"https://www.hashicorp.com/blog/deploy-any-resource-with-the-new-kubernetes-provider-for-hashicorp-terraform\">Kubernetes-alpha provider</a> introduces a new, generic <code>kubernetes_manifest</code> <a href=\"https://registry.terraform.io/providers/hashicorp/kubernetes-alpha/latest/docs/resources/kubernetes_manifest\">resource</a> and with it, a new generic <code>wait_for</code> attribute. Unlike the previous <code>wait_for_x</code> attributes, the new generic <code>wait_for</code> configuration gives users more control over wait conditions. This new attribute instructs the Terraform provider to wait on a condition based on any attribute of a Kubernetes object.</p><p>For example, you can specify that Terraform should consider a deployment with 10 replicas complete when two of the pods enter the ready state, and the ingress has an IP address assigned. Keep in mind that the <code>wait_for</code> attribute waits for all conditions to be met simultaneously. So, in this example, if the deployment’s <code>readyReplicas</code> value is greater than two before the ingress has an IP address assigned, the conditions won’t be met and the provider will eventually timeout. Currently, the Kubernetes-alpha provider doesn’t support a configurable timeout. To address this, you can also use regular expressions in your conditions.</p></section><div><pre><code><span>terraform</span> <span>{</span>\n <span>required_providers</span> <span>{</span>\n   <span>kubernetes</span> <span>=</span> <span>{</span>\n     <span>source</span> <span>=</span> <span>\"hashicorp/kubernetes-alpha\"</span>\n   <span>}</span>\n <span>}</span>\n<span>}</span>\n\n<span>provider<span> \"kubernetes-alpha\" </span></span><span>{</span>\n  <span>config_path</span> <span>=</span> <span>\"~/.kube/config\"</span>\n<span>}</span>\n\n<span>resource <span>\"kubernetes_manifest\"</span></span> <span>\"example\"</span> <span>{</span>\n  <span>provider</span> <span>=</span> kubernetes-alpha\n\n  <span>manifest</span> <span>=</span> <span>{</span>\n    <span>apiVersion</span> <span>=</span> <span>\"v1\"</span>\n    <span>kind</span>       <span>=</span> <span>\"Pod\"</span>\n\n    <span>metadata</span> <span>=</span> <span>{</span>\n      <span>name</span>      <span>=</span> <span>\"example-pod\"</span>\n      <span>namespace</span> <span>=</span> <span>\"default\"</span>\n\n      <span>annotations</span> <span>=</span> <span>{</span>\n        <span>\"test.terraform.io\"</span> <span>=</span> <span>\"test\"</span>      \n      <span>}</span>\n\n      <span>labels</span> <span>=</span> <span>{</span>\n        <span>app</span> <span>=</span> <span>\"nginx\"</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>spec</span> <span>=</span> <span>{</span>\n      <span>containers</span> <span>=</span> <span>[</span>\n        <span>{</span>\n          <span>name</span>  <span>=</span> <span>\"nginx\"</span>\n          <span>image</span> <span>=</span> <span>\"nginx:1.19\"</span>\n\n          <span>readinessProbe</span> <span>=</span> <span>{</span>\n            <span>initialDelaySeconds</span> <span>=</span> <span>10</span>\n\n            <span>httpGet</span> <span>=</span> <span>{</span>\n              <span>path</span> <span>=</span> <span>\"/\"</span>\n              <span>port</span> <span>=</span> <span>80</span>\n            <span>}</span>\n          <span>}</span>\n        <span>}</span>\n      <span>]</span>\n    <span>}</span>\n  <span>}</span>\n\n  <span>wait_for</span> <span>=</span> <span>{</span>\n    <span>fields</span> <span>=</span> <span>{</span>\n\t\t\t\t<span>\"metadata.annotations[\\\"test.terraform.io\\\"]\"</span> <span>=</span> <span>\"test\"</span>,\n\n\t\t\t\t<span>\"status.containerStatuses[0].restartCount\"</span> <span>=</span> <span>\"0\"</span>,\n\t\t\t\t<span>\"status.containerStatuses[0].ready\"</span>        <span>=</span> <span>\"true\"</span>,\n\n\t\t\t\t<span>\"status.podIP\"</span> <span>=</span> <span>\"^(\\\\d+(\\\\.|$)){4}\"</span>,\n\t\t\t\t<span>\"status.phase\"</span> <span>=</span> <span>\"Running\"</span>,\n    <span>}</span>\n  <span>}</span>\n<span>}</span></code></pre></div><section><p>For more information on the new Kubernetes Provider, visit the <a href=\"https://registry.terraform.io/providers/hashicorp/kubernetes-alpha/latest\">Terraform Registry</a>. To discover more about managing Kubernetes with Terraform, review the <a href=\"https://learn.hashicorp.com/collections/terraform/kubernetes\">guides</a> on HashiCorp Learn.</p><p>We would love to hear your feedback and expand on these projects! You can post bugs and feature requests for the Kubernetes-alpha provider by opening an issue at <a href=\"https://github.com/hashicorp/terraform-provider-kubernetes-alpha\">hashicorp/terraform-provider-kubernetes-alpha</a>, or the Kubernetes provider at <a href=\"https://github.com/hashicorp/terraform-provider-kubernetes\">hashicorp/terraform-provider-kubernetes</a>.</p><p>You can also engage with us and the community on <a href=\"https://discuss.hashicorp.com/\">HashiCorp Discuss</a> and in <a href=\"https://kubernetes.slack.com/messages/CJY6ATQH4\">#terraform-providers</a> on the Kubernetes Slack (<a href=\"http://slack.k8s.io/\">Sign up here</a>).</p></section></div></div>","author":"Phil Sautter","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"5bc982614209afe50ff3b749cee8a90a5546bafbab8af0ff16f30f57f9981dc7","category":"Tech"}