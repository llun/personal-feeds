{"title":"OpenSSL fixes high-severity flaw that allows hackers to crash servers","link":"https://arstechnica.com/?p=1752244","date":1616709717000,"content":"<div id=\"readability-page-1\" class=\"page\"><div><h4>PATCH, PATCH, PATCH, PATCH —</h4><h2 itemprop=\"description\">The widely used code library is also purged of a certificate verification bypass.</h2></div><div itemprop=\"articleBody\"><figure><img src=\"https://cdn.arstechnica.net/wp-content/uploads/2020/10/wireless-security-800x534.jpg\" alt=\"Stylized image of a floating padlock.\"><figcaption></figcaption></figure><p>OpenSSL, the most widely software library for implementing website and email encryption, has patched a high-severity vulnerability that makes it easy for hackers to completely shut down huge numbers of servers.</p><p>OpenSSL provides time-tested cryptographic functions that implement the Transport Layer Security protocol, the successor to Secure Sockets Layer that encrypts data flowing between Internet servers and end-user clients. People developing applications that use TLS rely on OpenSSL to save time and avoid programming errors that are common when noncryptographers build applications that use complex encryption.</p><p>The crucial role OpenSSL plays in Internet security came into full view in 2014 when hackers began exploiting a critical vulnerability in the open-source code library that let them steal encryption keys, customer information, and other sensitive data from servers all over the world. Heartbleed, as the security flaw was called, demonstrated how a couple lines of faulty code could topple the security of banks, news sites, law firms, and more.</p><h2>Denial-of-service bug squashed</h2><p>On Thursday, OpenSSL maintainers disclosed and patched a vulnerability that causes servers to crash when they receive a maliciously crafted request from an unauthenticated end user. CVE-2021-3449, as the denial-of-server vulnerability is tracked, is the result of a null pointer dereference bug. Cryptographic engineer Filippo Valsorda, <a href=\"https://twitter.com/FiloSottile/status/1375088690729517059\">said on Twitter</a> that the flaw could probably have been discovered earlier than now.</p><p>“Anyway, sounds like you can crash most OpenSSL servers on the Internet today,” he added.</p><p>Hackers can exploit the vulnerability by sending a server a maliciously formed renegotiating request during the initial handshake that establishes a secure connection between an end user and a server.</p><p>“An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client,” maintainers wrote in an <a href=\"https://mta.openssl.org/pipermail/openssl-announce/2021-March/000198.html\">advisory</a>. “If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack.”</p><p>The maintainers have rated the severity high. Researchers reported the vulnerability to OpenSSL on March 17. Nokia developers Peter Kästle and Samuel Sapalski provided the fix.</p><h2>Certificate verification bypass</h2><p>OpenSSL also fixed a separate vulnerability that, in edge cases, prevented apps from detecting and rejecting TLS certificates that aren’t digitally signed by a browser-trusted certificate authority. The vulnerability, tracked as CVE-2021-3450, involves the interplay between a X509_V_FLAG_X509_STRICT flag found in the code and several parameters.</p><p>Thursday’s advisory explained:</p><blockquote><p>If a “purpose” has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named “purpose” values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application.</p><p>In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose.</p></blockquote><p>OpenSSL versions 1.1.1h and newer are vulnerable. OpenSSL 1.0.2 is not impacted by this issue. Akamai researchers Xiang Ding and Benjamin Kaduk discovered and reported the bug, respectively. It was patched by Akamai developer Tomáš Mráz.</p><p>Apps that use a vulnerable OpenSSL version should upgrade to OpenSSL 1.1.1k as soon as possible.</p></div></div>","author":"Dan Goodin","siteTitle":"Ars Technica","siteHash":"5b0ddf6e8923e49262a7894cfd77962733e43fbcc565a103b48373820b310636","entryHash":"214a29590f53c72047b8bcf2b8c666bc958f94d942d2fe76df71aa47820b826d","category":"Tech"}