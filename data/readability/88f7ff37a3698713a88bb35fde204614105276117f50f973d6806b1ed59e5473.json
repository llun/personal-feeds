{"title":"Cloud Native คืออะไร ?","link":"https://www.somkiat.cc/cloud-native-go-part-1/","date":1622006268000,"content":"<div id=\"readability-page-1\" class=\"page\"><div id=\"page\"><article><div id=\"content_box\"><header></header><div><figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/05/content_posts_2020-01-09-ten-commandments-for-cloud-decision-makers_VII-1024x635.png\" alt=\"\" width=\"537\" height=\"332\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/05/content_posts_2020-01-09-ten-commandments-for-cloud-decision-makers_VII-1024x635.png 1024w, https://www.somkiat.cc/wp-content/uploads/2021/05/content_posts_2020-01-09-ten-commandments-for-cloud-decision-makers_VII-300x186.png 300w, https://www.somkiat.cc/wp-content/uploads/2021/05/content_posts_2020-01-09-ten-commandments-for-cloud-decision-makers_VII-768x476.png 768w, https://www.somkiat.cc/wp-content/uploads/2021/05/content_posts_2020-01-09-ten-commandments-for-cloud-decision-makers_VII-1536x952.png 1536w, https://www.somkiat.cc/wp-content/uploads/2021/05/content_posts_2020-01-09-ten-commandments-for-cloud-decision-makers_VII.png 1932w\" sizes=\"(max-width: 537px) 100vw, 537px\"></figure><p>จากหนังสือ <strong><a rel=\"noreferrer noopener\" href=\"https://learning.oreilly.com/library/view/cloud-native-go/9781492076322/\" target=\"_blank\">Cloud Native Go</a></strong><br>เห็นการ review และแนะนำจาก facebook ของป้อมา<br>ก็เลยลองเข้ามาอ่านบ้างประมาณ 1 สัปดาห์<br>จึงทำการสรุปสิ่งที่อ่านในแต่ละบทไว้นิดหน่อย<br>โดยเริ่มจากบทแรกว่าด้วย Cloud Native คืออะไร ?<br>เป็นการอธิบายที่ดีและน่าสนใจมาก ๆ<br>มาเริ่มกันเลย</p><p><strong>Cloud Native คืออะไร</strong></p><p>จาก Cloud Native Computing Foundation (CNCF) อธิบายไว้ว่า<br><strong>Cloud Native</strong> จะมีแนวคิดและ technology ช่วยให้องค์กรสร้างและ run ระบบ<br>ให้ scale ได้ง่ายขึ้น (Scalable)<br>รองรับ environment ต่าง ๆ ได้ง่ายขึ้น<br>เช่น public, private และ hybrid cloudหรืออาจจะเป็น on-premise ก็ได้</p><p><strong>โดยแนวคิดและเทคนิคนี้ช่วยทำให้</strong></p><ul><li>ระบบเป็นอิสระจากกันมาก (Loosely coupled)</li><li>สามารถ recovery จากความผิดพลาดต่าง ๆ ได้ (Resilient)</li><li>สามารถจัดการได้ง่าย (Manageble)</li><li>สามารถดูการทำงานได้ (Observable)</li></ul><p>ทำงานร่วมกับการทำงานแบบอัตโนมัตที่มีความน่าเชื่อถือ<br>รวมทั้งช่วยให้ทีมพัฒนาสามารถแก้ไขความความต้องการที่มากขึ้นและบ่อยมากขึ้น</p><p><strong>จากนั้นทำการอธิบายรายละเอียดของแต่ละเรื่องตามลำดับ</strong></p><p>ประกอบไปด้วย</p><ul><li>Scalability</li><li>Loosely coupled</li><li>Resilient</li><li>Manageable</li><li>Observable</li></ul><p><strong>Scalability</strong></p><p>ระบบสามารถทำงานได้ไม่ว่าการใช้งานจะมากขึ้นหรือน้อยลง<br>โดยที่ไม่ต้องมาแก้ไขระบบงานเดิมที่ทำงานอยู่<br>เป็นแนวคิดที่จะช่วยลดเวลาและค่าใช้จ่ายใน long term<br>ต้องคิดและตัดสินใจให้ดีว่าระบบที่เราจะสร้างขึ้นมานั้นเป็นอย่างไร</p><p><strong>การ scale นั้นมีทั้ง</strong></p><ul><li><strong>Vertical</strong> ทำการขยายเครื่องให้ใหญ่ขึ้นทั้ง CPU และ memory เป็นต้น</li><li><strong>Horizontal</strong> ทำการเพิ่มเครื่องหรือ instance เข้ามา</li></ul><p>ทั้งสองแบบมีทั้งข้อดีและข้อเสียเช่นกัน</p><p><strong>Loosely coupled</strong></p><p>เป็นแนวคิดที่ทุก ๆ service ควรต้องทำตาม<br>นั่นคือ service จะเป็นอิสระต่อ service อื่น ๆ<br>หรือมีความรู้หรือเกี่ยวข้องกับ service อื่น ๆ ให้น้อยที่สุด<br>นั่นหมายความว่า<br>ถ้าทำการเปลี่ยนแปลงใน service หนึ่งแล้ว<br>ไม่จำเป็นต้องไปแก้ไข service อื่น ๆ<br>เป็นแนวคิดนี้ถูกพูดอย่างมากใน Microservices</p><p><strong>Resilient หรือ Fault tolerance</strong></p><p>เป็นสิ่งที่ใช้วัดหรือบอกว่าระบบมีความทนทาน<br>รวมทั้งสามารถ recover ตัวเองกลับมาจากข้อผิดพลาดได้<br>โดยระบบยังสามารถใช้งานได้แบบปกติ<br>หรือใช้งานไม่ได้เพียงบางส่วนเท่านั้นไม่ใช่พังที่เดียว<br>แต่ถ้าส่งผลต่อทั้งระบบให้พัง แบบนี้ก็ไม่ใช่ !!</p><p>สิ่งที่น่าสนใจคือ <strong>Resilient มันไม่ใช่ Reliable นะ</strong><br>เนื่องจาก reliable ของระบบคือ<br>การที่ระบบสามารถทำงานได้ตามที่คาดหวังในช่วงเวลาที่กำหนด<br>โดยมักจะมาพร้อมกับคำว่า availability และ maintainability</p><p><strong>Manageability</strong></p><div><p>อธิบายถึงความง่ายในการเปลี่ยนพฤติกรรมของระบบเช่น<br>ทำให้ปลอดภัยมากขึ้น<br>ทำให้ระบบทำงานได้อย่างราบรื่นง่ายต่อการเปลี่ยนตาม requirement<br>แต่ยิ่งระบบมีความซับซ้อนมากเท่าไร การจัดการก็ยากขึ้นเท่านั้น</p><p>ดังนั้นในการออกแบบและสร้างระบบ<br>ต้องคิดให้ระบบสามารถปรับเปลี่ยนได้ง่ายขึ้น<br>จากความต้องการที่เปลี่ยนไปด้วย<br>แน่นอนว่าระบบงานเป็นสิ่งมีชีวิตนั่นเอง</p><p>ยกตัวอย่างเช่น การเปลี่ยน configuration นั้น<br>สามารถเปลี่ยนแปลงได้ง่ายไหม<br>หรืออาจจะเป็นเรื่องของการเปิดหรือปิด feature ต่าง ๆ ของระบบ<br>หรือการ deploy หรือ upgrade/downgrade ระบบ</p></div><p>สิ่งที่น่าสนใจคือ <strong>Manageability มันไม่ใช่ Maintainability นะ</strong><br>เนื่องจาก Maintainability ใช้อธิบายว่า<br>ระบบง่ายต่อการเปลี่ยน function การทำงาน (เช่น code)<br>นั่นคือเรื่องของ internal นั่นเอง<br>ส่วน Manageability คือเรื่องของ external หรือ ภายนอก</p><p><strong>Observability</strong></p><p>จะเน้นไปที่พฤติกรรมการทำงานของระบบว่า<br>ทำงานอย่างไร จนได้ output ออกมา<br>โดยที่เราไม่จำเป็นต้องมีความรู้ในเชิงลึกต่อระบบมากนัก<br>เป็นสิ่งท่ีถูกปรับปรุงมาจาก monitoring นั่นเอง<br>เพื่อให้สามารถนำข้อมูลต่าง ๆ ของระบบที่จัดเก็บไว้ (data)<br>มาแปลงให้มีค่าหรือเข้าใจง่ายมากขึ้น (information)</p><p><strong>ตัวอย่างของระบบ Observability เช่น</strong></p><ul><li>Unstructured logging</li><li>Alert ในสิ่งที่เราไม่รู้</li><li>มี dashboard เพื่อแสดง information ต่าง ๆ ของระบบ ตาม flow การทำงานของระบบ</li></ul><p>ช่วยทำให้เราเข้าใจการทำงานของระบบมากขึ้น<br>รวมทั้งยังช่วยบอกหรือแจ้งจุดเกิดปัญหาได้<br>ไม่ต้องเสียเวลาไปค้นหาให้วุ่นวาย</p><p><strong>โดยรวมแล้ว คำว่าคำว่า Cloud Native ไม่ใช่แนวคิดที่ต้องประหลาดใจอะไร</strong></p><p>เพราะว่ามันเป็นแนวทางที่หลีกเลี่ยงไม่ได้อยู่แล้ว<br>เพราะว่ามาเพื่อสนองต่อความต้องการ และ การพัฒนาการของเทคโนโลยี<br>ที่มีอย่างต่อเนื่องมากมายนั่นเอง</p><p><strong>ไว้จะสรุปบทอื่น ๆ ต่อไป</strong><br>ซึ่งจะเริ่มลง programming ด้วยภาษา Go<br>เป็นการขยายจากบทแรกนั่นเอง</p><figure><a href=\"https://learning.oreilly.com/library/view/cloud-native-go/9781492076322/\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/05/cloud0native-go.jpeg\" alt=\"\" width=\"229\" height=\"300\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/05/cloud0native-go.jpeg 381w, https://www.somkiat.cc/wp-content/uploads/2021/05/cloud0native-go-229x300.jpeg 229w\" sizes=\"(max-width: 229px) 100vw, 229px\"></a></figure></div><div><p><img alt=\"\" src=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=90&amp;d=mm&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/e5cb9aad7bf4f0e43462bd51d6ff7021?s=180&amp;d=mm&amp;r=g 2x\" height=\"90\" width=\"90\"></p><h4>Article by <a href=\"https://www.facebook.com/somkiatspns\">Somkiat Puisungnoen</a></h4><p>To be Craftmanship</p></div></div></article></div></div>","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"88f7ff37a3698713a88bb35fde204614105276117f50f973d6806b1ed59e5473","category":"Thai"}