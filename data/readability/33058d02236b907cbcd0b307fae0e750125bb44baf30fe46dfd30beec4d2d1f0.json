{"title":"Rookie coding mistake prior to Gab hack came from site’s CTO","link":"https://arstechnica.com/?p=1746422","date":1614712315000,"content":"<div id=\"readability-page-1\" class=\"page\"><div><h4>REVISIONIST HISTORY —</h4><h2 itemprop=\"description\">Site executive introduces, then removes, insecure code, then hides the evidence.</h2></div><div itemprop=\"articleBody\"><figure><img src=\"https://cdn.arstechnica.net/wp-content/uploads/2021/03/gab-silicon-valley-800x450.jpg\" alt=\"Rookie coding mistake prior to Gab hack came from site’s CTO\"><figcaption><p>Gab.com</p></figcaption></figure><p>Over the weekend, word emerged that a hacker <a href=\"https://arstechnica.com/information-technology/2021/03/gab-the-far-right-website-has-been-hacked-and-70gb-of-data-leaked/\">breached far-right social media website Gab</a> and downloaded 70 gigabytes of data by exploiting a garden-variety security flaw known as an SQL injection. A quick review of Gab’s open source code shows that the critical vulnerability—or at least one very much like it—was introduced by the company’s chief technology officer.</p><p>The change, which in the parlance of software development is known as a “git commit,” was made sometime in February from the account of Fosco Marotto, a former Facebook software engineer who in November <a href=\"https://web.archive.org/web/20210207211220/https://www.breitbart.com/tech/2020/11/18/free-speech-platform-gab-announces-facebook-vet-as-technical-chief/\">became Gab’s CTO</a>. On Monday, Gab removed the <a href=\"https://code.gab.com/gab/social/gab-social/-/commit/fb3b7545705153022c24bb072fbdb3925b8cbfeb\">git commit</a> from its website. Below is an image showing the February software change, <a href=\"https://archive.vn/oxbck\">as shown</a> from a site that provides saved commit snapshots.</p><figure><img src=\"https://cdn.arstechnica.net/wp-content/uploads/2021/03/marotto-git-commit.jpg\" width=\"679\" height=\"976\"><figcaption></figcaption></figure><p>The commit shows a software developer using the name Fosco Marotto introducing precisely the type of rookie mistake that could lead to the kind of breach reported this weekend. Specifically, line 23 strips the code of “reject” and “filter,” which are API functions that implement <a href=\"https://en.wikipedia.org/wiki/Programming_idiom\">programming idioms</a> that protect against SQL injection attacks.</p><h2>Developers: Sanitize user input</h2><p>These idioms “sanitize” the inputs that website visitors enter into search boxes and other web fields to ensure that any malicious commands are stripped out before the text is passed to backend servers. In their place, the developer added a call to the Rails function that contains the “find_by_sql” method, which accepts unsanitized inputs directly in a query string. Rails is a widely used website development toolkit.</p><p>“Sadly Rails documentation doesn't warn you about this <a href=\"https://apidock.com/rails/ActiveRecord/Querying/find_by_sql\">pitfall</a>, but if you know anything at all about using SQL databases in web applications, you'd have heard of SQL injection, and it's not hard to come across warnings that find_by_sql method is <a href=\"https://railsless.blogspot.com/2013/07/how-to-avoid-sql-injection-in-rails.html\">not safe</a>,” Dmitry Borodaenko, a former production engineer at Facebook who brought the commit to my attention wrote in an email. “It is not 100% confirmed that this is the vulnerability that was used in the Gab data breach, but it definitely could have been, and this code change is reverted in the <a href=\"https://git.rip/gab/gab-social/-/commit/74b3700f58cc1e811955ff376d8809c1b88acc9f\">most recent commit</a> that was present in their GitLab repository before they took it offline.”</p><p>Marotto didn’t respond to an email seeking comment for this post. Attempts to contact Gab directly didn't succeed.</p><h2>Revisionist history</h2><p>Besides the commit raising questions about Gab’s process for developing secure code, the social media site is also facing criticism for removing the commits from its website. Critics say the move violates terms of the <a href=\"https://en.wikipedia.org/wiki/Affero_General_Public_License\">Affero General Public License</a>, which governs Gab’s <a href=\"https://github.com/tootsuite/mastodon/blob/master/LICENSE\">reuse of Mastodon</a>, an <a href=\"https://en.wikipedia.org/wiki/Mastodon_(software)\">open source software package</a> for hosting social networking platforms.</p><p><a href=\"https://twitter.com/micahflee/status/1366608002598514690?s=19\">Critics say</a> the removal violates terms that require forked source code be directly linked from the site. The requirements are intended to provide transparency and to allow other open source developers to benefit from the work of their peers at Gab.</p><p>Gab had long provided commits at <a href=\"https://code.gab.com/\">https://code.gab.com/</a>. Then, on Monday, the site suddenly removed all commits—including the ones that created and then fixed the critical SQL injection vulnerability. In their place, Gab provided source code in the form of a Zip archive file that was protected by the password “JesusChristIsKingTrumpWonTheElection” (minus the quotation marks).</p><p>Representatives from the Mastodon project didn’t immediately respond to an email asking if they shared the critics’ concerns.</p><p>Besides questions about secure coding and license compliance, the Gab git commits also appear to show company developers struggling to <a href=\"https://twitter.com/donk_enby/status/1366151274098552833\">fix their vulnerable code</a>. The image below shows someone using the username “developer” trying unsuccessfully to fully fix the code containing the SQL injection vulnerability.</p><figure><img src=\"https://cdn.arstechnica.net/wp-content/uploads/2021/03/developer-change.jpeg\" width=\"1362\" height=\"1203\"></figure><p>Thread participants respond by sarcastically pointing out the difficulty the developer seemed to be having.</p><p>Gab’s security breach and behind-the-scenes handling of code before and after the incident provide a case study for developers on how <em>not</em> to maintain the security and code transparency of a website. The lesson is all the more weighty given that the submission used the account of Gab’s CTO, who among all people should have known better.</p></div></div>","author":"Dan Goodin","siteTitle":"Ars Technica","siteHash":"5b0ddf6e8923e49262a7894cfd77962733e43fbcc565a103b48373820b310636","entryHash":"33058d02236b907cbcd0b307fae0e750125bb44baf30fe46dfd30beec4d2d1f0","category":"Tech"}