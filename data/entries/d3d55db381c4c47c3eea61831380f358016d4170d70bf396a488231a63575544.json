{"title":"[Redis] แจ้งเตือน Key expired โดย Key space notifications ผ่าน Nodejs กัน","link":"https://thanapon.info/nodejs-keyevent-notification/","date":1602594783000,"content":"<p>ก่อนอื่นขอเกริ่นก่อนนะครับ พอดีว่าที่ทำงานผมมีโปรเจคหนึ่งที่กำลังทำอยู่เกี่ยวกับการซื้อขายแต่ โจทย์มีอยู่ว่า หลังจากการซื้อขายนั้นเงินจะยังไม่ถูกโอนไปยังคนขายจะต้องรอการยืนยันบางอย่างก่อนแล้วของที่ผู้ขายจะถูกจองไว้เป็นเวลา 2 วัน ถ้าหากสองวันนั้นไม่มีการยืนยันตัว transaction นั้นก็จะถูกยกเลิกไป แล้วของที่อยู่ในสถานะการจองก็จะถูกยกเลิกเหมือนกัน</p>\n<p>หลังจากที่ค้นหาข้อมูลวิธีการทำให้ง่ายที่สุดตามสไตล์คนขี้เกียจแล้วก็ได้ไปเจอ feature Key space notifications ที่เจ๋งสุดๆของ Redis เข้าให้โดยหลักการทำงานก็จะเป็น Publish/Subscribe โดยที่หลักจากที่ key ของเราหมดอายุมันก็จะส่ง event Expired มาที่ Application ของเราจาก Topic/Channel ที่เราไป subscribe นั้นเอง</p>\n<h2>เริ่มต้นสำหรับคนที่ไม่มี Redis อย่างผมก็ต้องลง Redis ผ่าน docker ก่อนนะครับ</h2>\n<pre>$ docker run -d --name redis-notification -p 6379:6379 redis</pre>\n<p>ซึ่งหลังจากที่รัน docker แล้วผมได้ทำการสร้าง project ขึ้นมาใหม่จาก express-generator ขอใช้ชื่อว่า nodejs-redis-keyspace-notifications ละกันครับ</p>\n<p>จากนั้นติดตั้ง package ioRedis ซึ่งเป็น redis client สำหรับเชื่อมต่อกับ service Redis ของเรา</p>\n<pre>$ npm install ioredis</pre>\n<p>เพิ่ม configuration สำหรับ Redis เข้าไปที่ app.js</p>\n\n\n<div><pre><code>// Redis configuration\nconst ioRedis = require('ioredis')\nconst host = 'localhost'\nconst port = 6379\nconst db = 0\nconst password = ''/* Setup redis client and set key-space-notification event when key expired */\nconst redis = new ioRedis({host, port, db, password})\nredis.on('ready', ()=&gt; {\n    redis.config('SET', 'notify-keyspace-events', 'Ex')\n})</code></pre></div>\n\n\n\n<blockquote><p>SET notify-keyspace-events EX เป็นการกำหนดให้ service redis enable feature notify-keyspace-events ซึ่ง parameter E หมายถึงการ กำหนด Keyevent event ให้ publish ข้อความออกมาโดยเราจะต้องไป subscribe topic = “__keyevent@&lt;db&gt;__ prefix” ส่วน parameter x คือ expired event จะถูกสร้างขึ้นหลังจากที่ key นั้นๆ ของเรา expired ไปแล้ว</p></blockquote>\n\n\n\n<p>หลังจากเรา config ค่าสำหรับ client ที่จะไปเชื่อมต่อ Service Redis เสร็จแล้วให้เรา Client สำหรับ subscribe topic Expired ที่ถูก publish มาจาก Redis ของเรา</p>\n\n\n\n<div><pre><code>const subscriber = new ioRedis({ host, port, db, password })\nsubscriber.subscribe(\"__keyevent@0__:expired\")\nsubscriber.on('message',async (channel, message) =&gt; {\n    // Do somethings\n    console.log(message);\n})</code></pre></div>\n\n\n\n<p>เป็นอันเสร็จสิ้นสำหรับการ config จากนั้นทดสอบรัน application ของเราดูครับ</p>\n\n\n\n<h2>ทดสอบรันก่อน~~</h2>\n\n\n\n<div><figure><img src=\"https://miro.medium.com/max/1132/1*sY8jBIyCWydyKwoWz7XV6A.png\" /></figure></div>\n\n\n\n<p>รันผ่านแล้วสามารถเชื่อมต่อกับ Service Redis ได้แล้ว จากนั้นลอง set คีย์พร้อมกับกำหนด expired time เข้าไปสัก 5 วินาทีครับ</p>\n\n\n\n<div><figure><img src=\"https://miro.medium.com/max/539/1*fE_xmUjuq49SS5bUUfIQCg.png\" /></figure></div>\n\n\n\n<p>หลังจากผ่านไป 5 วินาที Service Redis ก็ส่ง event มาด้วย เป็นอันว่า application ของเราทำงานโดยไม่พบ <em>BUG</em> ครับ 55555</p>\n\n\n\n<div><figure><img src=\"https://miro.medium.com/max/1056/1*15K5WABDaKC4vZ_0munghg.png\" /></figure></div>\n\n\n\n<p>เป็นอันว่าโปรเจคที่ทำงานของผมก็เดินหน้าต่อไปได้แล้วครับ 5555 ขอบคุณทุกท่านที่เข้ามาอ่านกันนะครับ สำหรับวันนี้ขอบคุณและสวัสดีครับ</p>\n\n\n\n<p>ส่วนตรงนี้เป็น github ของตัว project นะครับพี่ๆน้องๆ สามารถ clone มาลองเล่นดูกันได้ครับ</p>\n\n\n\n<blockquote><p><a href=\"https://github.com/toygame/nodejs-redis-keyspace-notifications\">nodejs-redis-keyspace-notifications</a></p><cite>https://github.com/toygame/nodejs-redis-keyspace-notifications</cite></blockquote>\n\n\n\n<blockquote><p><a href=\"https://redis.io/topics/notifications\">redis.io/topics/notifications</a></p><cite>Keyspace notifications allow clients to subscribe to Pub/Sub channels in order to receive events affecting the Redis data set in some way.</cite></blockquote>\n\n\n\n<blockquote><p><a href=\"https://github.com/luin/ioredis\">github.com/luin/ioredis</a></p><cite>ioredis is a robust, full-featured Redis client that is used in the world’s biggest online commerce company Alibaba and many other awesome companies.</cite></blockquote>\n\n\n\n<p><a href=\"https://redis.io/topics/notifications\"></a></p>\n<p>The post <a href=\"https://thanapon.info/nodejs-keyevent-notification/\">[Redis] แจ้งเตือน Key expired โดย Key space notifications ผ่าน Nodejs กัน</a> appeared first on <a href=\"https://thanapon.info\">Thanapon</a>.</p>","author":"thanapon.tap","siteTitle":"Thanapon","siteHash":"6a039c2f54d76e4c49227d80968f2a30de5427cc57525c047c383ea3563cde5f","entryHash":"d3d55db381c4c47c3eea61831380f358016d4170d70bf396a488231a63575544","category":"Thai"}