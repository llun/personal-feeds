{"title":"New – AWS Step Functions Workflow Studio – A Low-Code Visual Tool for Building State Machines","link":"https://aws.amazon.com/blogs/aws/new-aws-step-functions-workflow-studio-a-low-code-visual-tool-for-building-state-machines/","date":1623950320000,"content":"<p><a href=\"https://aws.amazon.com/step-functions\">AWS Step Functions</a> allow you to build scalable, distributed applications using state machines. Until today, building workflows on <span>Step Functions</span> required you to learn and understand <a href=\"https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html\">Amazon State Language</a> (ASL). Today, we are launching <span>Workflow Studio</span>, a low-code visual tool that helps you learn <span>Step Functions</span> through a guided interactive interface and allows you to prototype and build workflows faster.</p> \n<p>In December 2016, when <span>Step Functions</span> was launched, I was in the middle of a migration to serverless. My team moved all the business logic from applications that were built for a traditional environment to a serverless architecture. Although we tried to have functions that did one thing and one thing only, when we put all the state management from our applications into the functions, they became very complex. When I saw that <span>Step Functions</span> was launched, I realized they would reduce the complexity of the serverless application we were building. The downside was that I spent a lot of time learning and writing state machines using ASL, learning how to invoke different AWS services, and performing the flow operations the state machine required. It took weeks of work and lots of testing to get it right.</p> \n<p><span>Step Functions</span> is amazing for visualizing the processes inside your distributed applications, but developing those state machines is not a visual process. <span>Workflow Studio</span> makes it easy for developers to build serverless workflows. It empowers developers to focus on their high-value business logic while reducing the time spent writing configuration code for workflow definitions and building data transformations.</p> \n<p><span>Workflow Studio</span> is great for developers who are new to <span>Step Functions</span>, because it reduces the time to build their first workflow and provides an accelerated learning path where developers learn by doing. <span>Workflow Studio</span> is also useful for developers who are experienced in building workflows, because they can now develop them faster using a visual tool. For example, you can use <span>Workflow Studio</span> to do prototypes of the workflows and share them with your stakeholders quickly. Or you can use <span>Workflow Studio</span> to design the boilerplate of your state machine. When you use <span>Workflow Studio</span>, you don’t need to have all the resources deployed in your AWS account. You can build the state machines and start completing them with the different actions as they get ready.</p> \n<p><span>Workflow Studio</span> simplifies the building of enterprise applications such as ecommerce platforms, financial transaction processing systems, or e-health services. It abstracts away the complexities of building fault-tolerant, scalable applications by assembling AWS services into workflows. Because <span>Workflow Studio</span> exposes many of the capabilities of AWS services in a visual workflow, it’s easy to sequence and configure calls to AWS services and APIs and transform the data flowing through a workflow.</p> \n<p><span><strong>Build a workflow using <span>Workflow Studio</span><br /> </strong></span>Imagine that you need to build a system that validates data when an account is created. If the input data is correct, the system saves the record in persistent storage and an email is sent to the administrator to confirm the account was created successfully. If the account cannot be created due to a validation error, the data is not stored and an email is sent to notify the administrator that there was a problem with the creation of the account.</p> \n<p>There are many ways to solve this problem, but if you want to make the application with the least amount of code, and take advantage of all the managed services that AWS provides, you should use <span>Workflow Studio</span> to design the state machine and build the integrations with all the managed services.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/05/14/03_architecture_diagram.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/05/14/03_architecture_diagram.png\" /></a></p> \n<p>Let me show you how easy is to create a state machine using <span>Workflow Studio</span>. To get started, go to the <span>Step Functions</span> console and create a state machine. You will see an option to start designing the new state machine visually with <span>Workflow Studio</span>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/14/01_create.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/14/01_create-1024x483.png\" /></a></p> \n<p>You can start creating state machines in <span>Workflow Studio</span>. In the left pane, the States Browser, you can view and search the available actions and flow states. Actions are operations you can perform using AWS services, like invoking an <a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a> function, making a request with <a href=\"http://aws.amazon.com/apigateway\">Amazon API Gateway</a>, and sending a message to an <a href=\"https://aws.amazon.com/sns/\">Amazon Simple Notification Service (SNS)</a> topic. Flows are the state types you can use to make a workflow appropriate for your use case.</p> \n<p>Here are some of the available flow states:</p> \n<ul> \n <li><strong>Choice</strong>: Adds if-then-else logic.</li> \n <li><strong>Parallel</strong>: Adds parallel branches.</li> \n <li><strong>Map</strong>: Adds a for-each loop.</li> \n <li><strong>Wait</strong>: Delays for a specific time.</li> \n</ul> \n<p>In the center of the page, you can see the state machine you are currently working on.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/14/02-workflow-designer_new2.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/14/02-workflow-designer_new2-1024x604.png\" /></a></p> \n<p>To build the account validator workflow, you need:</p> \n<ul> \n <li>One task that invokes a <span>Lambda</span> function that validates the data provided to create the account.</li> \n <li>One task that puts an item into a <span>DynamoDB</span> table.</li> \n <li>Two tasks that put a message to an <span>SNS</span> topic.</li> \n <li>One choice flow state, to decide which action to take, depending on the results of a <span>Lambda</span> function.</li> \n</ul> \n<p>When creating the workflow, you don’t need to have all the AWS resources in advance to start working on the state machine. You can build the state machine and then you can add the definitions to the resources later. Or, as we are going to do in this blog post, you can have all your AWS resources deployed in your AWS account before you start working on your state machine. You can deploy the required resources into your AWS account from <a href=\"https://github.com/mavi888/step-functions-blog-post\">this</a> <a href=\"https://github.com/awslabs/serverless-application-model\">Serverless Application Model</a> template. After you create and deploy those resources, you can continue with the other steps in this post.</p> \n<p><strong>Configure the <span>Lambda</span> function<br /> </strong>The first step in your workflow is the <span>Lambda</span> function. To add it to your state machine, just drag an Invoke action from the Actions list into the center of <span>Workflow Studio</span>, as shown in step 1. You can edit the configuration of your function in the right pane. For example, you can change the name (as shown in step 2). You can also edit which <span>Lambda</span> function should be invoked from the list of functions deployed in this account, as shown in step 3. When you’re done, you can edit the output for this task, as shown in step 4.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/17/04_lambda_new.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/17/04_lambda_new-1024x509.png\" /></a></p> \n<p>Configuring the output of the task is very important, because these values will be passed to the next state as input. We will construct a result object with just the information we need (in this case, if the account is valid). First, clear <strong>Filter output with OutputPath,</strong> as shown in step 1. Then you can select <strong>Transform result with Result Selector</strong>, and add the JSON shown in step 2. Then, to combine the input of this current state with the output, and send it to the next state as input, select <strong>Combine input and result with ResultPath, </strong>as shown in step 3. We need the input of this state, because the input is the account information. If the validation is successful, we need to store that data in a <span>DynamoDB</span> table.</p> \n<p>If need help understanding what each of the transformations does, choose the <strong>Info</strong> links in each of the transformations.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/14/05_lambda-output_new.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/14/05_lambda-output_new-1007x1024.png\" /></a></p> \n<p><strong>Configure the choice state<br /> </strong>After you configure the <span>Lambda</span> function, you need to add a choice state. A choice will validate the input using choice rules. Based on the result of applying those rules, the state machine will direct the execution to a different path.</p> \n<p>The following figure shows the workflow for adding a choice state. In step 1, you drag it from the flow menu. In step 2, you enter a name for it. In step 3, you can define the rules. For this use case, you will have one rule with a specific condition.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/14/06_choice_new4.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/14/06_choice_new4-1024x521.png\" /></a></p> \n<p>The condition for this rule compares the results of the output of the previous state against a boolean constant. If the previous state operation returns a value of <strong>true,</strong> the rule is executed. This is your happy path. In this example, you want to validate the result of the <span>Lambda</span> function. If the function validates the input data, it returns validated is equals to true, as shown here.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/05/14/07_choice_rule.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/05/14/07_choice_rule-1024x298.png\" /></a></p> \n<p>If the rule doesn’t apply, the choice state makes the default branch run. This is your error path.</p> \n<p><strong>Configure the error path<br /> </strong>When there is an error, you want to send an email to let the administrator know that the account couldn’t be created. You should have created an <span>SNS</span> topic earlier in the post. Make sure that the email address you configured in the <span>SNS</span> topic accepts the email subscription for this topic.</p> \n<p>To add the <span>SNS</span> task of publishing a message, first search for SNS:Publish task<strong> </strong>as shown in step 1, and then drag it to the state machine, as shown in step 2. Drag a Fail state flow to the state machine, as shown in step 3, so that when this branch of execution is complete, the state machine is in a fail state.</p> \n<p>One nice feature of <span>Workflow Studio</span> is that you can drag the different states around in the state machine and place them in different parts of the worklow.</p> \n<p>Now you can configure the <span>SNS</span> task for publishing a message. First, change the state name, as shown in step 4. Choose the topic from the ones deployed in your AWS account, as shown in step 5. Finally, change the message that will be sent in the email to something appropriate for your use case, as shown in step 6.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/14/08_failed_new.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/14/08_failed_new-1024x580.png\" /></a></p> \n<p><strong>Configure the happy path<br /> </strong>For the happy path, you want to store the account information in a <span>DynamoDB</span> table and then send an email using the <span>SNS</span> topic you deployed earlier. To do that, add the DynamoDB:PutItem task, as shown in step 1, and the SNS:Publish task, as shown in step 2, into the state machine. You configure the SNS:Publish task in a similar way to the error path. You just send a different message. For that, you can duplicate the state from the error path, drag it to the right place, and just modify it with the new message.</p> \n<p>The DynamoDB:PutItem task puts an item into a <span>DynamoDB</span> table. This is a very handy task because we don’t need to execute this operation inside a <span>Lambda</span> function. To configure this task, you first change its name, as shown in step 3. Then, you need to configure the API parameters, as shown in step 4, to put the right data into the <span>DynamoDB</span> table.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/17/09_success_new.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/06/17/09_success_new-1024x484.png\" /></a></p> \n<p>These are the API parameters to use for this particular item (an account):</p> \n<pre><code>{\n  \"TableName\": \"&lt;THE NAME OF YOUR TABLE&gt;\",\n  \"Item\": {\n    \"id\": {\n      \"S.$\": \"$.Name\"\n    },\n    \"mail\": {\n      \"S.$\": \"$.Mail\"\n    },\n    \"work\": {\n      \"S.$\": \"$.Work\"\n    }\n  }\n}\n</code></pre> \n<p><strong>Save and execute the state machine<br /> </strong><span>Workflow Studio</span> created the ASL definition of the state machine for you, but you can always edit the ASL definition and return to the visual editor whenever you want to edit the state machine.</p> \n<p>Now that your state machine is ready, you can run the first execution. Save it and start a new execution. When you start a new execution, a message will be displayed, asking for the input event to the state machine. Make sure that the attributes for this event are named <strong>Name, Mail and Work,</strong> because the execution of the state machine depends on those.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/05/17/10_start_execution.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/05/17/10_start_execution-1024x709.png\" /></a> After you run your state machine, you see a visualization for the execution. It shows you all the steps that the execution ran. In each step, you see the step input and step output. This is very useful for debugging and fine-tuning the state machine.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/05/17/11_done.png\"><img src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2021/05/17/11_done-1024x516.png\" /></a></p> \n<p><span><strong>Available Now<br /> </strong></span></p> \n<p>There are a lot of great features on our roadmap for <span>Workflow Studio</span>. Although the details may change, we are currently working to give you the power to visually create, run, and even debug workflow executions. Stay tuned for more information, and please feel free to send us feedback.</p> \n<p><span>Workflow Studio</span> is available now in all the AWS Regions where <span>Step Functions</span> is available.</p> \n<p><a href=\"https://console.aws.amazon.com/states/home?/statemachines/\">Try it and learn more</a>.</p> \n<p>— <a href=\"https://twitter.com/mavi888uy\">Marcia</a></p>","author":"Marcia Villalba","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"005685c1ddac0b102ba6c956e4937ca35ab86d80708aba4550a3df2a410e864a","category":"Tech"}