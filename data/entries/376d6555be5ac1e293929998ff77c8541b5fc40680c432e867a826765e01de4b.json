{"title":"เกมเสี่ยงโชคและความคาดหวังที่ผิดเพี้ยน","link":"https://neizod.github.io/2021/05/16/randomness-in-game-and-unexpected-expectation.html","date":1621181368000,"content":"<p>สิ่งหนึ่งที่มนุษย์เรามักเข้าใจคลาดเคลื่อนเมื่อต้องเผชิญหน้ากับการสุ่มคือ <a href=\"//en.wikipedia.org/wiki/Probability\">ความน่าจะเป็น (probability)</a> กับ<a href=\"//en.wikipedia.org/wiki/Expected_value\">ความคาดหวัง (expectation)</a> เป็นคนละเรื่องกัน ยกตัวอย่างเช่นถ้าเรามีลูกเต๋าสมดุลอยู่ลูกหนึ่ง ความน่าจะเป็นที่ทอยลูกเต๋าแล้วจะได้หน้าหนึ่งที่ต้องการคือ $\\frac16$ ส่วนความคาดหวังที่ทอยหนึ่งครั้งแล้วจะได้หน้านั้นก็คือ $\\frac16$ ครั้ง นี่อาจทำให้เราเข้าใจว่าเมื่อทอยเต๋าไป $6$ ครั้งแล้ว เรา<em>ต้อง</em>ได้เต๋าหน้านั้น $6 \\cdot \\frac16 = 1$ ครั้งแน่ๆ แต่อันที่จริงแล้วนั่นคือค่าคาดหวังต่างหาก ความน่าจะเป็นจริงๆ ที่เราจะทอยเต๋า $6$ ครั้งแล้วออกหน้าที่ต้องการเป็นจำนวน $1$ ครั้งพอดีคือ ${6 \\choose 1}(\\frac16)^1(\\frac56)^5 \\approx 40\\%$ เท่านั้น</p>\n\n<p>สาเหตุที่เรามีความเข้าใจผิดเพี้ยนไป นอกจากจะมาจากความยากของศาสตร์ดังกล่าวในตัวมันเองแล้ว ยังอาจเกิดเพราะ<a href=\"//en.wikipedia.org/wiki/Cognitive_bias\">ความเอนเอียงทางการรู้คิด (cognitive bias)</a> ที่ทำให้เรา<a href=\"//en.wikipedia.org/wiki/Negativity_bias\">มักจดจำและให้น้ำหนักกับเหตุการณ์เลวร้าย</a>มากกว่าเหตุการณ์ที่งดงามตามสมควรแก่เหตุอีกด้วย ดังจะเห็นได้จากเกมอย่าง <a href=\"//en.wikipedia.org/wiki/XCOM\">XCOM</a> ที่ใช้การสุ่มเพื่อกำหนดว่าเราจะยิงโดนศัตรูหรือไม่ ซึ่งเรามักเห็นคำบ่นทำนองนี้อยู่บ่อยๆ</p>\n\n<blockquote>\n  \n\n  <p>โอกาสยิงโดนตั้ง $99\\%$ ยังจะพลาดอีก!</p>\n</blockquote>\n\n<p>ในเมื่อแก้ที่มนุษย์ไม่ได้ บางเกมจึงเลือกที่จะโอนอ่อนต่อพฤติกรรมอันไม่สมเหตุสมผลอันนี้ของมนุษย์เอาซะเลย เช่นในเกมชุด <a href=\"//en.wikipedia.org/wiki/Civilization_(series)\">Civilization</a> ที่เมื่อผู้เล่นโจมตีพลาดติดกันหลายครั้งจนครบค่าคาดหวังที่ควรจะโจมตีโดน การโจมตีครั้งนั้นจะกลายเป็นโจมตีโดนโดยอัตโนมัติ<sup><a href=\"#fn:1\">1</a></sup> เช่น การโจมตีครั้งหนึ่งที่มีความน่าจะเป็นที่จะโจมตีโดนอยู่ที่ $\\frac13$ หากผู้เล่นโจมตีพลาดติดกันมาแล้ว $2$ ครั้ง การโจมตีครั้งถัดไปจะการันตีว่าโจมตีโดนอย่างแน่นอน<sup><a href=\"#fn:2\">2</a></sup></p>\n\n<p>แล้วค่าคาดหวังของการโจมตีโดนจะมีหน้าตาเปลี่ยนไปเป็นอย่างไรหละ? ก่อนอื่นมานิยามกติกาชุดใหม่นี้ให้รัดกุมก่อน เพื่อให้วิเคราะห์ได้อย่างเป็นระเบียบต่อไป</p>\n\n<blockquote>\n  <p>เกมหนึ่งใช้ลูกเต๋า $k$ หน้าในการเล่น โดยมีเพียงหน้าเดียวในนั้นที่เมื่อทอยออกแล้วจะได้รางวัล อย่างไรก็ตามหากทอยเต๋าติดกันมา $k-1$ ครั้งแล้วยังไม่ได้รางวัลเลยซักครั้ง การทอยเต๋าครั้งหน้าจะถือว่าได้รับรางวัลทันที เกมนี้มีค่าคาดหวังที่จะได้รางวัลเป็นสัดส่วนเท่าไหร่ต่อการทอยเต๋าทั้งหมด (เพื่อความสะดวก สนใจเฉพาะกรณีที่ทอยเต๋าเป็นจำนวนมากเข้าใกล้อนันต์ครั้งก็ได้)</p>\n</blockquote>\n\n<p>เราอาจมองกระบวนการทั้งหมดเป็น<a href=\"//en.wikipedia.org/wiki/Markov_chain\">ลูกโซ่มาร์คอฟ</a>ที่มี $k$ สถานะ<sup><a href=\"#fn:3\">3</a></sup> โดยแต่ละสถานะจะจำไว้ว่าเคยโยนลูกเต๋าที่ทำให้ไม่ได้รางวัลติดกันมาแล้วกี่ครั้ง ซึ่งจะเห็นว่าการเปลี่ยนจากสถานะ $k-1$ ไปยังสถานะ $0$ มีความน่าจะเป็นเท่ากับ $1$ ส่วนการเปลี่ยนจากสถานะ $i$ อื่นๆ ไปยังสถานะ $0$ มีความน่าจะเป็นอยู่ที่ $\\frac1k$ และการเปลี่ยน​ไปยังสถานะ $i+1$ มีความน่าจะเป็น $\\frac{k-1}k$ นั่นเอง</p>\n\n<blockquote>\n  <p><img src=\"/images/math/generous-dice-markov-chain.png\" /></p>\n\n  <p>ตัวอย่างลูกโซ่มาร์คอฟของการทอย<a href=\"//en.wikipedia.org/wiki/Four-sided_die\">ลูกเต๋าสี่หน้า</a>ในเกมนี้</p>\n</blockquote>\n\n<p>หรือเขียนเป็น<a href=\"//en.wikipedia.org/wiki/Stochastic_matrix\">เมทริกซ์การเปลี่ยนสถานะ</a>ที่มีมิติ $k \\times k$ ได้คือ</p>\n\n\\[M = \\begin{bmatrix}\n\\frac1k &amp; \\frac{k-1}k &amp; 0 &amp; 0 &amp; \\cdots &amp; 0 \\\\\n\\frac1k &amp; 0 &amp; \\frac{k-1}k &amp; 0 &amp;        &amp; 0 \\\\\n\\frac1k &amp; 0 &amp; 0 &amp; \\frac{k-1}k &amp;        &amp; 0 \\\\\n\\vdots  &amp;   &amp;   &amp;             &amp; \\ddots &amp; \\vdots \\\\\n\\frac1k &amp; 0 &amp; 0 &amp; 0           &amp;        &amp;\\frac{k-1}k \\\\\n1       &amp; 0 &amp; 0 &amp; 0           &amp; \\cdots &amp; 0 \\\\\n\\end{bmatrix}\\]\n\n<p>ให้ $\\vec{u}_0$ เป็นเวกเตอร์ที่เก็บการกระจายตัวของสถานะตอนเริ่มต้นเกม ดังนั้นการกระจายตัวของสถานะหลังจากทอยเต๋าไปแล้ว $n$ รอบ (เขียนแทนด้วย $\\vec{u}_n$) สามารถคำนวณได้จาก</p>\n\n\\[\\vec{u}_0 \\cdot M^n = \\vec{u}_n\\]\n\n<p>จะเห็นว่าเมื่อ $n \\to \\infty$ แล้ว $\\vec{u}_n$ จะลู่เข้าค่าคงที่ค่าหนึ่ง เราเรียกสถานะนี้ว่าสภาวะคงตัวและเขียนแทนด้วย $\\vec{v}$ นอกจากนี้เราจะได้อีกว่า</p>\n\n\\[\\vec{v} \\cdot M = \\vec{v}\\]\n\n<p>หรือก็คือ $\\vec{v}$ เป็น<a href=\"//en.wikipedia.org/wiki/Eigenvalues_and_eigenvectors\">เวกเตอร์ลักษณะเฉพาะ</a>ของ $M$ ที่จับคู่กับค่าลักษณะเฉพาะที่เท่ากับหนึ่ง และเราสามารถแก้สมการหาค่าดังกล่าวได้คือ</p>\n\n\\[\\begin{align}\n\\vec{v} &amp;= \\begin{bmatrix}v_0 &amp; v_1 &amp; v_2 &amp; \\cdots &amp; v_{k-1}\\end{bmatrix} \\\\\nv_i &amp;= \\frac1k \\cdot \\frac1{1-\\left(1-\\frac1k\\right)^k} \\cdot \\left(\\frac{k-1}{k}\\right)^i\n\\end{align}\\]\n\n<p>ซึ่งคำตอบนี้ตีความได้ว่า หลังจากทอยเต๋าไปเป็นจำนวนมากครั้งจนเข้าสู่สภาวะคงตัวแล้ว การกระจายตัวของสถานะจะมีหน้าตาเป็นเวกเตอร์ $\\vec{v}$ และเมื่อทอยเต๋าเพิ่มอีกหนึ่งครั้งจากสถานะดังกล่าว จะมีการทอยเป็นสัดส่วนเท่ากับ $v_0 = 1/k(1-(1-\\frac1k)^k)$ ที่ได้รางวัล ซึ่งก็คือค่าคาดหวังใหม่ที่เราต้องการหานั่นเอง</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>หน้าลูกเต๋า</th>\n      <th>รางวัลต่อการทอย (กติกาเดิม)</th>\n      <th>รางวัลต่อการทอย (กติกาใหม่)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>1</td>\n      <td>$\\frac11 = 100\\%$</td>\n      <td>$\\frac11 = 100\\%$</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>$\\frac12 = 50\\%$</td>\n      <td>$\\frac23 \\approx 67\\%$</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>$\\frac13 \\approx 33\\%$</td>\n      <td>$\\frac9{19} \\approx 47\\%$</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>$\\frac14 = 25\\%$</td>\n      <td>$\\frac{64}{175} \\approx 37\\%$</td>\n    </tr>\n    <tr>\n      <td>5</td>\n      <td>$\\frac15 = 20\\%$</td>\n      <td>$\\frac{625}{2101} \\approx 30\\%$</td>\n    </tr>\n    <tr>\n      <td>6</td>\n      <td>$\\frac16 \\approx 17\\%$</td>\n      <td>$\\frac{7776}{31031} \\approx 25\\%$</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>ตัวเลขที่วิเคราะห์ออกมาก็สวยดี แต่นี่ก็เป็นเพียงแค่มุมมองหนึ่งทางคณิตศาสตร์เท่านั้น เพราะหากย้อนกลับไปมองปัญหาตั้งแต่ต้นทางแล้ว จะพบว่าการโจมตีแต่ละครั้งในเกมเหล่านั้นมีล้วนเป็นตัวตัดสินชี้เป็นชี้ตายของการต่อสู้ เพราะหากเราเป็นฝ่ายเปิดยิงก่อนแล้วดันพลาด ศัตรูย่อมอาศัยโอกาสดังกล่าวเคลื่อนพลไปยังตำแหน่งที่ดีกว่า เพื่อยิงสวนกลับมาด้วยความแม่นยำที่เรียกว่าทำให้เราปิดเกมไปนอนพักได้เลย</p>\n\n<p>หรืออันที่จริงแล้ว ข้อมูลความน่าจะเป็นที่จะโจมตีเข้าเป้านั้นไม่ใช่สิ่งที่ตอบโจทย์ตั้งแต่แรก แต่ควรเป็นข้อมูลว่าหากการโจมตีครั้งนี้ไม่สำเร็จ เรายังมีโอกาสได้ไปต่อจากความผิดพลาดนี้มากน้อยแค่ไหน ซึ่งอาจสะท้อนออกมาจากการที่เกมแสดงตัวเลขความน่าจะเป็นของการโจมตีให้น้อยกว่าความเป็นจริงตั้งแต่แรก เพื่อสะกิดให้เรากลับไปทบทวนการโจมตีตอนที่เห็นว่าแผนมีโอกาสสำเร็จเพียง $50\\%$ ทั้งที่ในความจริงแล้วมันอาจมีโอกาสสำเร็จมากถึง $80\\%$ ก็ได้ แต่เพราะว่าเราไม่สามารถยอมรับความล้มเหลวได้แม้มันจะมีโอกาสน้อยนิดเพียง $1\\%$ ก็ตาม ซึ่งก็คล้ายกับวิธีที่เกมชุด <a href=\"//en.wikipedia.org/wiki/Fire_Emblem\">Fire Emblem</a> เลือกใช้นั่นเอง</p>\n\n<div>\n  <ol>\n    <li>\n      <p><a href=\"//youtu.be/MtzCLd93SyU?t=1446\">วิดีโอ</a>จาก GDC นาทีที่ 24:06-22:44 <a href=\"#fnref:1\">↩</a></p>\n    </li>\n    <li>\n      <p><a href=\"//youtu.be/dwI5b-wRLic?t=933\">วิดีโอ</a>จาก GMTK นาทีที่ 15:33-15:41 <a href=\"#fnref:2\">↩</a></p>\n    </li>\n    <li>\n      <p>ตอนคิดเองใช้วิธีหาค่าเฉลี่ยว่าต้องโยนเต๋ากี่ครั้ง แต่คำตอบแบบลูกโซ่มาร์คอฟของ <a href=\"//facebook.com/nat.sothanaphan\">Nat Sothanaphan</a> นั้นสวยงามจัดจนต้องเอามาเล่าแทน 55555 <a href=\"#fnref:3\">↩</a></p>\n    </li>\n  </ol>\n</div>","author":"","siteTitle":"neizod's speculation","siteHash":"939338c5557b1743f2c128736c6006e145dcabc81da9970f1c0dc8ae2feb0830","entryHash":"376d6555be5ac1e293929998ff77c8541b5fc40680c432e867a826765e01de4b","category":"Thai"}