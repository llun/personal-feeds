{"title":"New –  AWS Systems Manager Consolidates Application Management","link":"https://aws.amazon.com/blogs/aws/new-aws-systems-manager-consolidates-application-management/","date":1608050154000,"content":"<p>A desire for consolidated, and simplified operational oversight isn’t limited to just cloud infrastructure. Increasingly, customers ask us for a “single pane of glass” approach for also monitoring and managing their application portfolios.</p> \n<p>These customers tell us that detection and investigation of application issues takes additional time and effort, due to the typical use of multiple consoles, tools, and sources of information such as resource usage metrics, logs, and more, to enable their DevOps engineers to obtain context about the application issue under investigation. Here, an “application” means not just the application code but also the logical group of resources that act as a unit to host the application, along with ownership boundaries for operators, and environments such as development, staging, and production.</p> \n<p>Today, I’m pleased to announce a new feature of <a href=\"https://aws.amazon.com/systems-manager/\" title=\"Systems Manager\">AWS Systems Manager</a>, called <span title=\"\">Application Manager</span>. <span title=\"\">Application Manager</span> aggregates operational information from multiple <a href=\"https://aws.amazon.com/\" title=\"\">AWS</a> services and <span title=\"\">Systems Manager</span> capabilities into a single console, making it easier to view operational data for your applications.</p> \n<p>To make it even more convenient, the service can automatically discover your applications. Today, auto-discovery is available for applications running in <a href=\"https://aws.amazon.com/cloudformation/\" title=\"\">AWS CloudFormation</a> stacks and <a href=\"https://aws.amazon.com/eks/\" title=\"\">Amazon Elastic Kubernetes Service (EKS)</a> clusters, or launched using <a href=\"https://aws.amazon.com/launchwizard/\" title=\"\">AWS Launch Wizard</a>. Applications can also be discovered from Resource Groups.</p> \n<p>A particular benefit of automated discovery is that application components and resources are automatically kept up-to-date on an ongoing basis, but you can also always revise applications as needed by adding or deleting components manually.</p> \n<p>With applications discovered and consolidated into a single console, you can more easily diagnose operational issues and resolve them with minimal time and effort. Automated runbooks targeting an application component or resource can be run to help remediate operational issues. For any given application, you can select a resource and explore relevant details without needing to leave the console.</p> \n<p>For example, the application can surface <a href=\"https://aws.amazon.com/cloudwatch/\" title=\"\">Amazon CloudWatch</a> logs, operational metrics, <a href=\"https://aws.amazon.com/cloudtrail/\" title=\"\">AWS CloudTrail</a> logs, and configuration changes, removing the need to engage with multiple tools or consoles. This means your on-call engineers can understand issues more quickly and reduce the time needed to resolve them.</p> \n<p><span style=\"text-decoration: underline;\"><strong>Exploring an Application with <span title=\"\">Application Manager</span></strong></span><br /> I can access <span title=\"\">Application Manager</span> from the <span title=\"\">Systems Manager</span> home page. Once open, I get an overview of my discovered applications and can see immediately that there are some alarms, without needing to switch context to the <a href=\"https://aws.amazon.com/cloudwatch/\" title=\"\">Amazon CloudWatch</a> console, and some operations items (“OpsItems”) that I might need to pay attention to. I can also switch to the <strong>Applications</strong> tab to view the collections of applications, or I can click the buttons in the <strong>Applications</strong> panel for the collection I’m interested in.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2020/12/10/appmanager_overview.png\"><img class=\"alignnone size-full wp-image-45770\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2020/12/10/appmanager_overview.png\" alt=\"Screenshot of the &lt;span title=&quot;&quot;&gt;Application Manager&lt;/span&gt; overview page\" width=\"901\" height=\"522\" /></a></p> \n<p>In the screenshot below, I’ve navigated to a sample application and again, have indicators showing that alarms have raised. The various tabs enable me to drill into more detail to view resources used by the application, config resource and rules compliance, monitoring alarms, logs, and automation runbooks associated with the application.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2020/12/11/appmanager_app.png\"><img class=\"alignnone wp-image-45818 size-full\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2020/12/11/appmanager_app.png\" alt=\"Screenshot of application components and overview\" width=\"900\" height=\"519\" /></a></p> \n<p>Clicking on the <strong>Alarm</strong> indicator takes me into the <strong>Monitoring</strong> tab, and it shows that the <strong>ConsumedWriteCapacityUnits</strong> alarm has been raised. I can change the timescale to zero in on when the event occurred, or I can use the <strong>View recent alarms dashboard</strong> link to jump into the <a href=\"https://aws.amazon.com/cloudwatch/\" title=\"\">Amazon CloudWatch</a> Alarms console to view more detail.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2020/12/11/appmanager_app_alarms.png\"><img class=\"alignnone size-full wp-image-45819\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2020/12/11/appmanager_app_alarms.png\" alt=\"Screenshot of alarms on the &lt;span title=&quot;&quot;&gt;Application Manager&lt;/span&gt; Monitoring tab\" width=\"900\" height=\"397\" /></a></p> \n<p>The <strong>Logs</strong> tab shows me a consolidated list of log groups for the application, and clicking a log group name takes me directly to the <span title=\"\">CloudWatch Logs</span> where I can inspect the log streams, and take advantage of Log Insights to dive deeper by querying the log data.</p> \n<p><strong>OpsItems</strong> shows me operational issues associated with the resources of my application, and enables me to indicate the current status of the issue (<strong>open</strong>, <strong>in progress</strong>, <strong>resolved</strong>). Below, I am marking investigation of a stopped <a href=\"https://aws.amazon.com/ec2/\" title=\"\">EC2</a> instance as <strong>in progress</strong>.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2020/12/14/appmanager_app_opsitems.png\"><img class=\"alignnone size-full wp-image-45853\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2020/12/14/appmanager_app_opsitems.png\" alt=\"Screenshot of &lt;span title=&quot;&quot;&gt;Application Manager&lt;/span&gt; OpsItems tab\" width=\"900\" height=\"493\" /></a></p> \n<p>Finally, <strong>Runbooks</strong> shows me automation documents associated with the application and their execution status. Below, it’s showing that I ran the <strong>AWS-RestartEC2Instance</strong> automation document to restart the <a href=\"https://aws.amazon.com/ec2/\" title=\"\">EC2</a> instance that was stopped, and I would now resolve the issue logged in the <strong>OpsItems</strong> tab.</p> \n<p><a href=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2020/12/14/appmanager_app_runbooks.png\"><img class=\"alignnone size-full wp-image-45854\" src=\"https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2020/12/14/appmanager_app_runbooks.png\" alt=\"Screenshot of &lt;span title=&quot;&quot;&gt;Application Manager&lt;/span&gt;'s Runbooks tab\" width=\"899\" height=\"262\" /></a></p> \n<p>Consolidating this information into a single console gives engineers a single starting location to monitor and investigate issues arising with their applications, and automatic discovery of applications and resources makes getting started simple. <a href=\"https://aws.amazon.com/systems-manager/\" title=\"Systems Manager\">AWS Systems Manager</a> <span title=\"\">Application Manager</span> is available today, at no extra charge, in all AWS Commercial Regions, <span title=\"\">AWS GovCloud (US)</span>, and AWS China Regions.</p> \n<p><strong>Learn more about <span title=\"\">Application Manager</span> and get started at <a href=\"https://aws.amazon.com/systems-manager/\" title=\"Systems Manager\">AWS Systems Manager</a>.</strong></p> \n<a href=\"https://twitter.com/bellevuesteve\" title=\"Steve on Twitter\">— Steve</a>","author":"Steve Roberts","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"b9309fc79b1b9e5e9580abc0e4243979211127016d42b2144fdd8a08191c47b5","category":"Tech"}