{"title":"Announcing HashiCorp Terraform 0.15 General Availability","link":"https://www.hashicorp.com/blog/announcing-hashicorp-terraform-0-15-general-availability","date":1618416000000,"content":"<p>We’re pleased to announce the release of <a href=\"https://www.terraform.io/\">HashiCorp Terraform 0.15</a>. It is immediately available for download as well as for use in <a href=\"https://app.terraform.io/signup/account?utm_campaign=intro_tf_cloud_remote&amp;utm_source=blog_0.12\">Terraform Cloud</a>.</p>\n<p>The Terraform 0.15 release marks the beginning of the pre-release period leading up to Terraform 1.0. Terraform 0.15 includes a number of improvements that solidify Terraform workflows and ensure the stability of Terraform’s feature set for the long term.</p>\n<h2><a href=\"#terraform-0-15-highlights\">»</a><a></a>Terraform 0.15 Highlights</h2>\n<h3><a href=\"#remote-state-data-source-compatibility\">»</a><a></a>Remote State Data Source Compatibility</h3>\n<p>In order to help our practitioners adopt new versions of Terraform into their workflows without having to immediately upgrade existing Terraform codebases, we’ve relaxed the remote state data source parser requirements. (Note: This feature has been backported into the 0.14.0, 0.13.6, and 0.12.30 releases). These versions of Terraform and above will be able to access remote state data sources in versions of Terraform up to 1.0.x at the time of release.</p>\n<h3><a href=\"#state-file-format-stability\">»</a><a></a>State File Format Stability</h3>\n<p>Announced as part of Terraform 0.14, but originally ported from our work on 0.15, Terraform state is cross-compatible between versions 0.14.x, 0.15.x, and 1.0.x (when released). This flexibility will let customers more easily move between versions of Terraform.</p>\n<h3><a href=\"#unified-console-support\">»</a><a></a>Unified Console Support</h3>\n<p>Terraform 0.15 makes a significant foundational improvement by unifying the console experience across all supported platforms, bringing with it consistent UTF-8 support and a move to virtual terminal sequences on Microsoft Windows, as shown here:</p><img src=\"https://www.datocms-assets.com/2885/1618349872-tf-console-unified.png\" /><h3><a href=\"#provider-based-sensitivity-and-sensitive-functions\">»</a><a></a>Provider-Based Sensitivity and Sensitive Functions</h3>\n<p>Terraform 0.15 extends value sensitivity to provider attributes, allowing provider developers to help protect values from being printed to the console. Terraform will redact these values wherever they appear. This release also ships with a new <code>sensitive</code> function (and a matching <code>nonsensitive</code> function) to further help practitioners manage Terraform’s behavior around sensitive values.</p><pre><code># This attribute will retain its sensitivity if referenced elsewhere \n# in the configuration\nresource “aws_db_instance” “mydb” {\npassword = value\n...\n}</code></pre><pre><code># The sensitive function will redact the value during Terraform plan output. \n# Any references to the attribute marked sensitive will also be redacted.\n# It is important to note that  some use cases will force the value to be \n# exposed and may result in an error. \n\nresource \"example_resource\" \"my_resource\" {\npassword = sensitive(data.resource.name.id)\n...\n}</code></pre><h3><a href=\"#structured-logging-levels\">»</a><a></a>Structured Logging Levels</h3>\n<p>Terraform 0.15 ships with improved logging behavior. Provider developers using the latest SDK (v.2.4+) can now reliably target messages to specific log levels. Additionally, Terraform CLI and provider logging levels can both be controlled independently using <code>TF_LOG_CORE=level</code> and <code>TF_LOG_PROVIDER=level</code>.</p>\n<p>Terraform 0.15 also marks the conclusion of several ongoing deprecation cycles. This includes a number of removals, so please see the <a href=\"https://www.terraform.io/upgrade-guides/0-15.html\">upgrade guide</a> and <a href=\"https://github.com/hashicorp/terraform/blob/v0.15/CHANGELOG.md\">changelog</a> for more details.</p>\n<p>For a hands-on tutorial and to learn more about error logging in Terraform, visit the <a href=\"https://learn.hashicorp.com/tutorials/terraform/troubleshooting-workflow?utm_source=WEBSITE&amp;utm_medium=WEB_BLOG&amp;utm_offer=ARTICLE_PAGE\">Troubleshooting Terraform</a> guide on <a href=\"https://learn.hashicorp.com/terraform?utm_source=WEBSITE&amp;utm_medium=WEB_BLOG&amp;utm_offer=ARTICLE_PAGE\">HashiCorp Learn</a>.</p>\n<h2><a href=\"#getting-started\">»</a><a></a>Getting Started</h2>\n<p>We have many resources available for Terraform 0.15 for new and existing users. To learn more about the new functionality of Terraform 0.15 you can:</p>\n<ul>\n<li><a href=\"https://www.terraform.io/docs/cli-index.html\">Review the documentation</a></li>\n<li><a href=\"https://learn.hashicorp.com/terraform\">Try our HashiCorp Learn tutorials</a>, including the new <a href=\"https://learn.hashicorp.com/tutorials/terraform/troubleshooting-workflow?utm_source=WEBSITE&amp;utm_medium=WEB_BLOG&amp;utm_offer=ARTICLE_PAGE\">Troubleshooting Terraform Guide</a>, with Terraform 0.15</li>\n<li>Join the <a href=\"https://www.hashicorp.com/events/webinars/terraform-0-15-building-the-defacto-roadmap-to-stability-usability-and-scalability\">Announcing Terraform 0.15</a> webinar on April 21</li>\n</ul>\n<p>To get started using Terraform 0.15:</p>\n<ul>\n<li><a href=\"https://www.terraform.io/downloads.html\">Download</a> the Terraform 0.15 release.</li>\n<li>If you are upgrading from a previous release, read the <a href=\"https://www.terraform.io/upgrade-guides/0-15.html\">upgrade guide</a> to learn about the required upgrade steps.</li>\n</ul>\n<p>For more details, please see <a href=\"https://github.com/hashicorp/terraform/blob/v0.15/CHANGELOG.md\">the full changelog</a>. This release also includes a number of code contributions from the community and wouldn't have been possible without all of the great community feedback we've received via GitHub issues and elsewhere. Thank you!</p>\n<p>HashiCorp Terraform 0.15 is the next step on our way to solidifying the Terraform ecosystem and empowering collaborative workflows at organizations of all sizes. You can download Terraform 0.15 <a href=\"https://www.terraform.io/downloads.html\">here</a> and sign up for a Terraform Cloud account <a href=\"https://app.terraform.io/signup?utm_source=blog_0.15&amp;utm_campaign=intro_tf_cloud_remote\">here</a>.</p>","author":"Petros Kolyvas","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"caf097c3adc2a520af18d87d068c1e26cc431f7c650e65cdbab86dc7802fa61c","category":"Tech"}