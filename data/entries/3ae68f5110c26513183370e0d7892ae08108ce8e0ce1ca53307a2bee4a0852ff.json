{"title":"การจัดการ Transaction แบบง่าย ๆ กับ Spring Data JPA","link":"https://www.somkiat.cc/manage-transaction-in-spring-app/","date":1618490329000,"content":"<p>เห็นคำถามในกลุ่ม <a href=\"https://www.facebook.com/groups/687453848266156/permalink/1498946413783558/\" target=\"_blank\">Spring Developer Thailand</a><br />เรื่องการจัดการ transaction ในการบันทึกข้อมูลลง database<br />ผ่าน repository layer ว่าทำอย่างไร ?<br />ก่อนที่จะรู้ว่าต้องทำอย่างไร <br />ควรต้องเข้าใจพฤติกรรมการทำงานพื้นฐานกันก่อน</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>เริ่มต้นผมลองสร้าง project ด้วย</strong></p>\n\n\n\n<ul><li>Spring Boot</li><li>Spring Data JPA ใชสำหรับจัดการกับ database</li><li>H2 คือ in-memory database</li></ul>\n\n\n\n<p>จากนั้นทำการสร้าง Repository 3 ตัวตามคำถามจาก link ในกลุ่ม<br />ในส่วนของการจัดการบันทึกข้อมูลทั้ง 3 repository<br />จะทำงานใน Service Layer แบบปกติ ดังนี้</p>\n\n\n\n\n\n\n<p><strong>จากนั้นทำการ config เรื่องการแสดง logging ของ Transaction และคำสั่ง SQL </strong></p>\n\n\n\n<p>เพื่อดูการทำงานของระบบ</p>\n\n\n\n\n\n\n<p><strong>จากนั้นลอง run และดูผล</strong></p>\n\n\n\n<p>จะเห็นได้ว่า จะทำการ commit ในแต่ละ repository<br />นั่นคือเกิด 3 transaction</p>\n\n\n\n\n\n\n<p><strong>แต่ถ้าเราต้องการให้ทั้ง 3 repositry ให้อยู่ใน Transaction เดียวกัน</strong></p>\n\n\n\n<p>ให้ทำการจัดการในส่วนของ Service Layer ด้วยการใส่ @Transactional  ไปดังนี้</p>\n\n\n\n\n\n\n<p>ผลการทำงานจาก log จะเป็นดังนี้<br />ซึ่งเป็นไปตามที่ต้องการคือ อยู่ใน transaction เดียวกัน<br />ดังนั้นถ้ามี repository ใด ที่ fail ขึ้นมา<br />จะทำการ rollback transaction ให้เอง</p>\n\n\n\n\n\n\n<p>จะเห็นว่า เราสามารถจัดการ transaction พื้นฐานใน Service Layer ได้แล้ว</p>","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"3ae68f5110c26513183370e0d7892ae08108ce8e0ce1ca53307a2bee4a0852ff","category":"Thai"}