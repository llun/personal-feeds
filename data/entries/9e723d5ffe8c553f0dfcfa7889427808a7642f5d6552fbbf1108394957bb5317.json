{"title":"[Golang] มาลองใช้งาน Dockertest สำหรับการทดสอบ","link":"https://www.somkiat.cc/golang-integration-test-with-dockertest/","date":1612084260000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2021/01/dockertest-150x150.png\" class=\"attachment-post-thumbnail size-post-thumbnail wp-post-image\" alt=\"\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/01/dockertest-150x150.png 150w, https://www.somkiat.cc/wp-content/uploads/2021/01/dockertest-75x75.png 75w\" sizes=\"(max-width: 150px) 100vw, 150px\" /></p><!-- wp:image {\"id\":21377,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/01/dockertest-1024x684.png\" alt=\"\" class=\"wp-image-21377\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>ในการทดสอบระดับ integration กับ Database ต่าง ๆ นั้น<br>บ่อยครั้งการจะทำการจำลองหรือ mock database <br>ทั้งผ่าน interface หรืออาจจะใช้งาน SQLMock ก็ได้<br>หรือบางคนใช้งาน Docker อยู่แล้ว <br>ก็เขียน script หรือ Make file มาใช้งาน<br>แต่เจอว่า มี package ชื่อว่า <strong><a href=\"https://github.com/ory/dockertest\" target=\"_blank\" rel=\"noreferrer noopener\">Dockertest</a></strong><br>มาช่วยให้การทดสอบกับ database ผ่าน Docker container ได้สะดวกขึ้น<br>มาลองทำความรู้จักกันหน่อย</p>\n<!-- /wp:paragraph -->\n\n\n<span id=\"more-21376\"></span>\n\n\n<!-- wp:paragraph {\"fontSize\":\"medium\"} -->\n<p class=\"has-medium-font-size\"><strong>Dockertest เป็น package เล็ก ๆ </strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>ที่ช่วยให้เราสามารถสร้างและลบ Docker container ด้วย code ได้เลย<br>เช่นการสร้าง Database container ต่าง ๆ ขึ้นมา<br>ก่อนที่จะทำการทดสอบตาม test case และ test scenario ที่ต้องการ<br></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph {\"fontSize\":\"medium\"} -->\n<p class=\"has-medium-font-size\"><strong>การใช้งานก็ไม่ยาก เขียนใน test ได้เลย</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>โดยแยกส่วนการทำงานนิดหน่อย</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>ทำการ initial database ผ่าน <a href=\"https://golang.org/pkg/testing/#hdr-Main\" target=\"_blank\" rel=\"noreferrer noopener\">TestMain</a> สำหรับการ setup และ teardown ของแต่ละ test case</li><li>เขียน test case เพื่อใช้งาน</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph {\"fontSize\":\"medium\"} -->\n<p class=\"has-medium-font-size\"><strong>ขั้นตอนที่ 1 ทำการ initial container ก่อน</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:shortcode -->\n[gist id=\"55d5d2e5b91a091337dcf55b1226004a\" file=\"1.go\"]\n<!-- /wp:shortcode -->\n\n<!-- wp:paragraph {\"fontSize\":\"medium\"} -->\n<p class=\"has-medium-font-size\"><strong>ขั้นตอนที่ 2 ทำการทดสอบกับ container</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:shortcode -->\n[gist id=\"55d5d2e5b91a091337dcf55b1226004a\" file=\"2.go\"]\n<!-- /wp:shortcode -->\n\n<!-- wp:paragraph -->\n<p><strong>เพียงเท่านี้ก็สามารถทดสอบระบบงานบน Docker container แบบง่าย ๆ ได้แล้ว</strong><br>ใช้ resource เยอะตาม Docker นั่นเอง<br>เป็นอีกทางเลือกที่น่าสนใจ</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>มีแนวคิดคล้าย ๆ กันที่เคยแนะนำไปแล้วคือ <strong><a href=\"https://www.somkiat.cc/go-integration-test-with-testcontainer/\" target=\"_blank\" rel=\"noreferrer noopener\">Testing with testcontainer</a></strong></p>\n<!-- /wp:paragraph -->","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"9e723d5ffe8c553f0dfcfa7889427808a7642f5d6552fbbf1108394957bb5317","category":"Thai"}