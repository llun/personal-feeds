{"title":"Code Jam 2021 รอบคัดเลือก","link":"https://neizod.github.io/2021/03/28/code-jam-2021-qualification.html","date":1616874978000,"content":"<p>เขียจอธิบาย แกะโค้ดกันไปเองก่อนละกันนะ (เสียจัยที่ชวด 101 คะแนน)</p>\n\n<h2 id=\"reversort\">Reversort</h2>\n\n<div class=\"language-c++ highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">#include &lt;iostream&gt;\n</span><span class=\"k\">using</span> <span class=\"k\">namespace</span> <span class=\"n\">std</span><span class=\"p\">;</span>\n\n<span class=\"kt\">int</span> <span class=\"n\">xs</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">];</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">count_reversort</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">i</span><span class=\"p\">;</span>\n        <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span> <span class=\"o\">!=</span> <span class=\"n\">xs</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">])</span> <span class=\"p\">{</span>\n            <span class=\"n\">j</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        <span class=\"kt\">int</span> <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">+</span><span class=\"n\">j</span><span class=\"o\">-</span><span class=\"n\">i</span><span class=\"p\">);</span>\n        <span class=\"n\">count</span> <span class=\"o\">+=</span> <span class=\"n\">size</span><span class=\"p\">;</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">k</span><span class=\"o\">&lt;</span><span class=\"n\">size</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">;</span> <span class=\"n\">k</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">swap</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"n\">k</span><span class=\"p\">],</span> <span class=\"n\">xs</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"o\">-</span><span class=\"n\">k</span><span class=\"p\">]);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">count</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">tests</span><span class=\"p\">;</span>\n    <span class=\"n\">cin</span> <span class=\"o\">&gt;&gt;</span> <span class=\"n\">tests</span><span class=\"p\">;</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">t</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">t</span><span class=\"o\">&lt;</span><span class=\"n\">tests</span><span class=\"p\">;</span> <span class=\"n\">t</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">;</span>\n        <span class=\"n\">cin</span> <span class=\"o\">&gt;&gt;</span> <span class=\"n\">n</span><span class=\"p\">;</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">n</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">cin</span> <span class=\"o\">&gt;&gt;</span> <span class=\"n\">xs</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n        <span class=\"p\">}</span>\n        <span class=\"kt\">int</span> <span class=\"n\">answer</span> <span class=\"o\">=</span> <span class=\"n\">count_reversort</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">);</span>\n        <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Case #%i: %i</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">answer</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h2 id=\"moons-and-umbrellas\">Moons and Umbrellas</h2>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">gets</span><span class=\"p\">.</span><span class=\"nf\">to_i</span><span class=\"p\">.</span><span class=\"nf\">times</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"nb\">test</span><span class=\"o\">|</span>\n  <span class=\"n\">cj</span><span class=\"p\">,</span> <span class=\"n\">jc</span><span class=\"p\">,</span> <span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"nb\">gets</span><span class=\"p\">.</span><span class=\"nf\">split</span>\n  <span class=\"n\">ans</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n  <span class=\"n\">pattern</span><span class=\"p\">.</span><span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"s2\">\"?\"</span><span class=\"p\">).</span><span class=\"nf\">split</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">).</span><span class=\"nf\">each_cons</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"o\">|</span>\n    <span class=\"n\">ans</span> <span class=\"o\">+=</span> <span class=\"n\">cj</span><span class=\"p\">.</span><span class=\"nf\">to_i</span> <span class=\"k\">if</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span> <span class=\"o\">==</span> <span class=\"s2\">\"CJ\"</span>\n    <span class=\"n\">ans</span> <span class=\"o\">+=</span> <span class=\"n\">jc</span><span class=\"p\">.</span><span class=\"nf\">to_i</span> <span class=\"k\">if</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span> <span class=\"o\">==</span> <span class=\"s2\">\"JC\"</span>\n  <span class=\"k\">end</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"Case #</span><span class=\"si\">#{</span><span class=\"nb\">test</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s2\">: </span><span class=\"si\">#{</span><span class=\"n\">ans</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<h2 id=\"reversort-engineering\">Reversort Engineering</h2>\n\n<div class=\"language-haskell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kr\">import</span> <span class=\"nn\">Text.Printf</span>\n\n<span class=\"n\">triangularNumber</span> <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">n</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">`</span><span class=\"n\">div</span><span class=\"p\">`</span> <span class=\"mi\">2</span>\n\n<span class=\"n\">findOrder</span> <span class=\"mi\">1</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">findOrder</span> <span class=\"n\">n</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">findOrder</span> <span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">-</span><span class=\"n\">k</span><span class=\"p\">)</span>\n    <span class=\"kr\">where</span> <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">-</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n\n<span class=\"n\">getSample</span> <span class=\"kt\">[]</span> <span class=\"n\">out</span>     <span class=\"o\">=</span> <span class=\"n\">out</span>\n<span class=\"n\">getSample</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">xs</span><span class=\"p\">)</span> <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">getSample</span> <span class=\"n\">xs</span> <span class=\"o\">$</span> <span class=\"p\">(</span><span class=\"n\">reverse</span> <span class=\"p\">(</span><span class=\"n\">take</span> <span class=\"n\">x</span> <span class=\"n\">zs</span><span class=\"p\">))</span> <span class=\"o\">++</span> <span class=\"p\">(</span><span class=\"n\">drop</span> <span class=\"n\">x</span> <span class=\"n\">zs</span><span class=\"p\">)</span>\n    <span class=\"kr\">where</span> <span class=\"n\">zs</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"n\">length</span> <span class=\"n\">xs</span><span class=\"p\">)</span> <span class=\"o\">:</span> <span class=\"n\">out</span>\n\n<span class=\"n\">findReversort</span> <span class=\"n\">n</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"kr\">if</span> <span class=\"n\">c</span> <span class=\"o\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">||</span> <span class=\"n\">c</span> <span class=\"o\">&gt;</span> <span class=\"p\">(</span><span class=\"n\">triangularNumber</span> <span class=\"n\">n</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">1</span>\n    <span class=\"kr\">then</span> <span class=\"kt\">Nothing</span>\n    <span class=\"kr\">else</span> <span class=\"kt\">Just</span> <span class=\"o\">$</span> <span class=\"n\">getSample</span> <span class=\"p\">(</span><span class=\"n\">reverse</span> <span class=\"p\">(</span><span class=\"n\">findOrder</span> <span class=\"n\">n</span> <span class=\"n\">c</span><span class=\"p\">))</span> <span class=\"kt\">[]</span>\n\n<span class=\"n\">test</span> <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"kr\">do</span>\n    <span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"n\">c</span><span class=\"p\">]</span> <span class=\"o\">&lt;-</span> <span class=\"n\">getInts</span>\n    <span class=\"kr\">let</span> <span class=\"n\">answer</span> <span class=\"o\">=</span> <span class=\"kr\">case</span> <span class=\"n\">findReversort</span> <span class=\"n\">n</span> <span class=\"n\">c</span> <span class=\"kr\">of</span>\n                      <span class=\"kt\">Nothing</span> <span class=\"o\">-&gt;</span> <span class=\"s\">\"IMPOSSIBLE\"</span>\n                      <span class=\"kt\">Just</span> <span class=\"n\">xs</span> <span class=\"o\">-&gt;</span> <span class=\"n\">unwords</span> <span class=\"p\">(</span><span class=\"n\">map</span> <span class=\"n\">show</span> <span class=\"n\">xs</span><span class=\"p\">)</span>\n    <span class=\"n\">printf</span> <span class=\"s\">\"Case #%d: %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span> <span class=\"n\">t</span> <span class=\"n\">answer</span>\n\n<span class=\"n\">getInts</span> <span class=\"o\">=</span> <span class=\"kr\">do</span>\n    <span class=\"n\">xs</span> <span class=\"o\">&lt;-</span> <span class=\"n\">getLine</span>\n    <span class=\"n\">return</span> <span class=\"p\">[</span><span class=\"n\">read</span> <span class=\"n\">x</span> <span class=\"o\">|</span> <span class=\"n\">x</span> <span class=\"o\">&lt;-</span> <span class=\"n\">words</span> <span class=\"n\">xs</span><span class=\"p\">]</span>\n\n<span class=\"n\">getInt</span> <span class=\"o\">=</span> <span class=\"kr\">do</span>\n    <span class=\"n\">x</span> <span class=\"o\">&lt;-</span> <span class=\"n\">getLine</span>\n    <span class=\"n\">return</span> <span class=\"o\">$</span> <span class=\"n\">read</span> <span class=\"n\">x</span>\n\n<span class=\"n\">main</span> <span class=\"o\">=</span> <span class=\"kr\">do</span>\n    <span class=\"n\">loop</span> <span class=\"o\">&lt;-</span> <span class=\"n\">getInt</span>\n    <span class=\"n\">sequence_</span> <span class=\"p\">[</span><span class=\"n\">test</span> <span class=\"n\">t</span> <span class=\"o\">|</span> <span class=\"n\">t</span> <span class=\"o\">&lt;-</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">..</span><span class=\"n\">loop</span><span class=\"p\">]]</span>\n</code></pre></div></div>\n\n<h2 id=\"median-sort\">Median Sort</h2>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">tri_split</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"nb\">divmod</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">r</span><span class=\"o\">*</span><span class=\"p\">[</span><span class=\"n\">q</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">[</span><span class=\"n\">q</span><span class=\"p\">]</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">ask</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">):</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">())</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">answer</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">):</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">xs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">())</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">interact_median_sort</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"n\">xs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n    <span class=\"n\">ans</span> <span class=\"o\">=</span> <span class=\"n\">ask</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">xs</span><span class=\"p\">)</span>\n    <span class=\"n\">xs</span><span class=\"p\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">ans</span><span class=\"p\">)</span>\n    <span class=\"n\">xs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ans</span><span class=\"p\">]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">i</span>\n        <span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">right</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span>\n        <span class=\"k\">while</span> <span class=\"n\">size</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">sizes</span> <span class=\"o\">=</span> <span class=\"n\">tri_split</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">size</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"ow\">and</span> <span class=\"n\">right</span> <span class=\"o\">==</span> <span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"n\">sizes</span> <span class=\"o\">=</span> <span class=\"n\">sizes</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"n\">lo</span> <span class=\"o\">=</span> <span class=\"n\">left</span> <span class=\"o\">+</span> <span class=\"n\">sizes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">hi</span> <span class=\"o\">=</span> <span class=\"n\">right</span> <span class=\"o\">-</span> <span class=\"n\">sizes</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n            <span class=\"n\">ans</span> <span class=\"o\">=</span> <span class=\"n\">ask</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">[</span><span class=\"n\">lo</span><span class=\"p\">],</span> <span class=\"n\">xs</span><span class=\"p\">[</span><span class=\"n\">hi</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">ans</span> <span class=\"o\">==</span> <span class=\"n\">xs</span><span class=\"p\">[</span><span class=\"n\">lo</span><span class=\"p\">]:</span>\n                <span class=\"n\">right</span> <span class=\"o\">=</span> <span class=\"n\">lo</span>\n                <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">sizes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"k\">elif</span> <span class=\"n\">ans</span> <span class=\"o\">==</span> <span class=\"n\">xs</span><span class=\"p\">[</span><span class=\"n\">hi</span><span class=\"p\">]:</span>\n                <span class=\"n\">left</span> <span class=\"o\">=</span> <span class=\"n\">hi</span>\n                <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">sizes</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">left</span> <span class=\"o\">=</span> <span class=\"n\">lo</span>\n                <span class=\"n\">right</span> <span class=\"o\">=</span> <span class=\"n\">hi</span>\n                <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">sizes</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">xs</span><span class=\"p\">[</span><span class=\"n\">right</span><span class=\"p\">:</span><span class=\"n\">right</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">answer</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">cases</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">input</span><span class=\"p\">().</span><span class=\"n\">split</span><span class=\"p\">()]</span>\n    <span class=\"k\">for</span> <span class=\"n\">case</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">cases</span><span class=\"p\">):</span>\n        <span class=\"n\">interact_median_sort</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div></div>\n\n<h2 id=\"cheating-detection\">Cheating Detection</h2>\n\n<div class=\"language-R highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">neighbor_mean</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"m\">5</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"n\">cs</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nf\">cumsum</span><span class=\"p\">(</span><span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"n\">tail</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">%/%</span><span class=\"m\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">xs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">%/%</span><span class=\"m\">2</span><span class=\"p\">))))</span><span class=\"w\">\n    </span><span class=\"p\">(</span><span class=\"n\">tail</span><span class=\"p\">(</span><span class=\"n\">cs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"n\">cs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">n</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n\n</span><span class=\"n\">partition_sd</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ngroup</span><span class=\"o\">=</span><span class=\"m\">10</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">xs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"p\">(</span><span class=\"n\">score</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">sd</span><span class=\"p\">(</span><span class=\"n\">colSums</span><span class=\"p\">(</span><span class=\"n\">matrix</span><span class=\"p\">(</span><span class=\"n\">score</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ncol</span><span class=\"o\">=</span><span class=\"n\">ngroup</span><span class=\"p\">))))</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n\n</span><span class=\"n\">find_cheater</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"p\">(</span><span class=\"n\">scores</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"n\">colnames</span><span class=\"p\">(</span><span class=\"n\">scores</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"m\">100</span><span class=\"w\">\n    </span><span class=\"n\">scores</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">scores</span><span class=\"p\">[</span><span class=\"n\">order</span><span class=\"p\">(</span><span class=\"n\">rowSums</span><span class=\"p\">(</span><span class=\"n\">scores</span><span class=\"p\">)),</span><span class=\"n\">order</span><span class=\"p\">(</span><span class=\"n\">colSums</span><span class=\"p\">(</span><span class=\"n\">scores</span><span class=\"p\">))]</span><span class=\"w\">\n    </span><span class=\"n\">sd_scores</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">partition_sd</span><span class=\"p\">(</span><span class=\"n\">scores</span><span class=\"p\">)</span><span class=\"w\">\n    </span><span class=\"n\">mu_scores</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">neighbor_mean</span><span class=\"p\">(</span><span class=\"n\">sd_scores</span><span class=\"p\">)</span><span class=\"w\">\n    </span><span class=\"n\">suspect</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nf\">abs</span><span class=\"p\">(</span><span class=\"n\">sd_scores</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">mu_scores</span><span class=\"p\">)</span><span class=\"w\">\n    </span><span class=\"n\">colnames</span><span class=\"p\">(</span><span class=\"n\">scores</span><span class=\"p\">)[</span><span class=\"n\">which</span><span class=\"p\">(</span><span class=\"n\">suspect</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nf\">max</span><span class=\"p\">(</span><span class=\"n\">suspect</span><span class=\"p\">))]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n\n</span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nf\">interactive</span><span class=\"p\">())</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">(</span><span class=\"s2\">\"stdin\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"r\"</span><span class=\"p\">)</span><span class=\"w\">\n    </span><span class=\"n\">cases</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nf\">as.integer</span><span class=\"p\">(</span><span class=\"n\">readLines</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"p\">))</span><span class=\"w\">\n    </span><span class=\"n\">percent</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nf\">as.integer</span><span class=\"p\">(</span><span class=\"n\">readLines</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"p\">))</span><span class=\"w\">\n    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">case</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"n\">cases</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"n\">raw</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">readLines</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"m\">100</span><span class=\"p\">)</span><span class=\"w\">\n        </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">na.omit</span><span class=\"p\">(</span><span class=\"nf\">as.integer</span><span class=\"p\">(</span><span class=\"n\">unlist</span><span class=\"p\">(</span><span class=\"n\">strsplit</span><span class=\"p\">(</span><span class=\"n\">raw</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"\"</span><span class=\"p\">))))</span><span class=\"w\">\n        </span><span class=\"n\">answer</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">find_cheater</span><span class=\"p\">(</span><span class=\"n\">matrix</span><span class=\"p\">(</span><span class=\"n\">input</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ncol</span><span class=\"o\">=</span><span class=\"m\">100</span><span class=\"p\">))</span><span class=\"w\">\n        </span><span class=\"n\">cat</span><span class=\"p\">(</span><span class=\"n\">paste0</span><span class=\"p\">(</span><span class=\"s2\">\"Case #\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">case</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\": \"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">answer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"\\n\"</span><span class=\"p\">))</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>","author":"","siteTitle":"neizod's speculation","siteHash":"939338c5557b1743f2c128736c6006e145dcabc81da9970f1c0dc8ae2feb0830","entryHash":"af4accd925d2a83ca98e76577651600ad6246398a4f9e6a18b7d4b0c319dcdb4","category":"Thai"}