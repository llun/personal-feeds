{"title":"IAM Access Analyzer Update – Policy Validation","link":"https://aws.amazon.com/blogs/aws/iam-access-analyzer-update-policy-validation/","date":1615931531000,"content":"<p><a href=\"https://aws.amazon.com/iam/\" title=\"\">AWS Identity and Access Management (IAM)</a> is an important and fundamental part of AWS. You can create <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html\">IAM policies</a> and <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html\">service control policies</a> (SCPs) that define the desired level of access to specific AWS services and resources, and then attach the policies to IAM principals (<a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users.html\">users</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html\">roles</a>), <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups.html\">groups</a> of users, or to AWS resources. With the fine-grained control that you get with IAM comes the responsibility to use it properly, almost always seeking to establish <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege\">least privilege access</a>. The <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorials.html\">IAM tutorials</a> will help you to learn more, and the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html\">IAM Access Analyzer</a> will help you to identify resources that are shared with an external entity. We recently launched an update to IAM Access Analyzer that allows you to <a href=\"https://aws.amazon.com/blogs/security/validate-access-to-your-s3-buckets-before-deploying-permissions-changes-with-iam-access-analyzer/\">Validate Access to Your S3 Buckets Before Deploying Permissions Changes</a>.</p> \n<p><span style=\"text-decoration: underline;\"><strong>New Policy Validation</strong></span><br /> Today I am happy to announce that we are adding policy validation to IAM Access Analyzer. This powerful new feature will help you to construct IAM policies and SCPs that take advantage of time-tested AWS best practices.</p> \n<p>Designed for use by developers and security teams, validation takes place before policies are attached to IAM principals. Over 100 checks, each designed to designed to improve your security posture and to help you to simplify policy management at scale, are performed. The findings from each check include detailed information and concrete recommendations.</p> \n<p>Validation is accessible from the JSON Policy Editor in the IAM Console, as well as from the command line (<code>aws accessanalyzer validate-policy</code>) and your own code (<code>ValidatePolicy</code>). You can use the CLI and API options to perform programmatic validation as part of your CI/CD workflows.</p> \n<p>In the IAM Console, policy validation takes place in real-time whenever you create or edit a customer-managed policy, with findings broken down by severity; here are some examples:</p> \n<p><strong>Security</strong> – Policy elements that are overly permissive, and that may be a security risk. This includes use of <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_passrole.html\"><code>iam:PassRole</code></a> in conjunction with <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_notresource.html\"><code>NotResource</code></a> or with “*” (<a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_resource.html\">wildcard</a>) as the resource:</p> \n<p><img class=\"aligncenter size-medium\" src=\"https://media.amazonwebservices.com/blog/2021/pv_sec_4.png\" width=\"900\" height=\"614\" /></p> \n<p><strong>Error</strong> – Policy elements that stop the policy from functioning. This includes many types of syntax errors, missing actions, invalid constructs, and so forth:</p> \n<p><img class=\"aligncenter size-medium\" src=\"https://media.amazonwebservices.com/blog/2021/pv_err_2.png\" width=\"900\" height=\"711\" /></p> \n<p><strong>Warning</strong> – Policy elements that don’t conform to AWS best practices, such as references to deprecated global condition keys or invalid users, and the use of ambiguous dates:</p> \n<p><img class=\"aligncenter size-medium\" src=\"https://media.amazonwebservices.com/blog/2021/pv_warn_2.png\" width=\"900\" height=\"711\" /></p> \n<p><strong>Suggestion</strong> – Policy elements that are missing, empty, or redundant:</p> \n<p><img class=\"aligncenter size-medium\" src=\"https://media.amazonwebservices.com/blog/2021/pv_sugg_4.png\" width=\"900\" height=\"616\" /></p> \n<p><span style=\"text-decoration: underline;\"><strong>Things to Know</strong></span><br /> As I noted earlier, we are launching with a set of over 100 checks. We have plans to add more over time, and welcome your suggestions.</p> \n<p>In the Amazon spirit of drinking our own Champagne, we routinely validate the Amazon-managed IAM policies and fine-tune them when appropriate. From time to time we mark existing managed policies as deprecated, issue notifications to our customers via email, and make updated replacements available. To learn more about our process, read <a href=\"http://Deprecated AWS managed policies\">Deprecated AWS Managed Policies</a>.</p> \n<p>As you may know, there are already several open source policy linters available for AWS, including the well-known <a href=\"https://github.com/duo-labs/parliament\">Parliament</a> from <a href=\"https://duo.com/labs/\">Duo Labs</a>. Our customers told us that these tools are useful, but that they wanted an AWS-native validation feature that was active while they were editing policies. A group of developers on the IAM team responded to this feedback and implemented policy validation from the ground up.</p> \n<p>You can use this feature now in all AWS regions at no charge.</p> \n<p>— <a href=\"https://twitter.com/jeffbarr\">Jeff</a>;</p>","author":"Jeff Barr","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"09f50bdceacb284aa73fba78e4622cd6d99c90bdb7e1481945a50c17de323f10","category":"Tech"}