{"title":"Master the macOS command line: How to copy and move files through Terminal","link":"https://www.macworld.com/article/222558/macos-command-line-copying-moving-files-terminal.html","date":1625123700000,"content":"\n<div>\n<section><div></div></section><p>The command line—that hidden world of code behind your Mac’s pretty face—sometimes offers a quicker way to do everyday tasks, plus it’s just a cool way to establish your tech cred. You’ve learned how to <a href=\"http://www.macworld.com/article/2042378/master-the-command-line-navigating-files-and-folders.html\">navigate files and folders</a> as well as <a href=\"https://www.macworld.com/article/2082021/master-the-command-line-deleting-files-and-folders.html\">delete files and folders</a> with the command line and <a href=\"http://www.macworld.com/article/2044790/master-the-command-line-how-to-use-man-pages.html\">get help when you need it from man pages</a>. Here, I’ll show you how to copy and move files, common operations that often come in handy. I’ll also show you how to create directories (that’s Unix-speak for folders), so you can move files to new places.</p>\n\n\n\n<h2>Why bother with the command line?</h2>\n\n\n\n<p>It’s certainly easy to copy and move files in the Finder, but there are a number of reasons why you might want to do this from the command line instead:</p>\n\n\n\n<ul><li>You can copy or move files from one location to another without opening windows in the Finder.</li><li>You can copy or move files that are hidden in the Finder. These files, which can contain settings for certain apps or parts of the Mac, contain a dot (.) before their names, and the Finder doesn’t show them.</li><li>You can copy or move <em>multiple</em> files using wildcards.</li><li>You can rename a file quickly.</li><li>If you’ve lost access to the Finder because your Mac is on the blink, you might be able to use the command line to troubleshoot the problem.</li></ul><h2>The difference between copying and moving files</h2>\n\n\n\n<p>If you’re in the Finder, and you drag a file from, say, your Desktop to your Documents folder, or any other folder on the same disk or volume, you move the file. The file is no longer on the Desktop, and is found only in the Documents folder. However, if you drag a file from your Desktop to an external hard disk, you’ll see that the file remains in its original location; this file has been copied. (You may know that you can copy a file in the Finder, even on the same hard disk, by holding down the Option key when you drag it.)</p>\n\n\n\n<p>The same is the case from the command line. There are two commands for moving and copying: <code><strong>mv</strong></code> and <code><strong>cp</strong></code>. The first does the same as dragging a file to a new location on the same hard disk. The second does what an Option-drag does, or what happens when you drag a file to a different disk or volume.</p>\n\n\n\n<h2>How to copy files and directories</h2>\n\n\n\n<p><strong>Copying files</strong> with the <code><strong>cp</strong></code> command is simple. First, launch Terminal (in your /Applications/Utilities folder). Then, use the following syntax to create your command:</p>\n\n\n\n<p><strong><code>cp source destination </code></strong></p>\n\n\n\n<p>For example, to copy a file named MyFile.rtf from your Desktop folder to your Documents folder, you would type in the following command in Terminal and then press Return:</p>\n\n\n\n<p><code><strong>cp ~/Desktop/MyFile.rtf ~/Documents</strong></code></p>\n\n\n\n<p>You’ll now have a file named MyFile.rtf on your Desktop, and a copy of that file in your Documents folder.</p>\n\n\n\n<p>You’ll remember from <a href=\"http://www.macworld.com/article/2042378/master-the-command-line-navigating-files-and-folders.html\">“Master the command line: Navigating files and folders”</a> that the tilde (~) symbol is a shortcut for your Home folder, which contains your Documents folder. This command takes the file at the precise path you specify as the source argument, and moves it to the directory (folder), which is the destination. Note that if there’s no file there, or if you type the name incorrectly, Terminal will give you a “No such file or directory” error.</p>\n\n\n\n<div><figure><img src=\"https://b2c-contenthub.com/wp-content/uploads/2021/06/terminal-no-file-macos.jpg?quality=50&amp;strip=all&amp;w=1200\" /><figcaption><p>If you type a file path incorrectly, Terminal will let you know with a “No such file or directory” error.</p>\n</figcaption></figure><p>IDG</p></div>\n\n\n\n<p>You can also <strong>copy directories</strong>, including all the files they contain. This uses a special “flag” or “option” with the <code><strong>cp</strong> command</code>: the <strong><code>-R</code></strong> or recursive flag. When you use options with commands, this additional letter—always preceded by a hyphen (-)—tells the command to do something a bit differently. The recursive option tells the <code><strong>cp</strong></code> command to copy every item in the folder: every sub-folder, every file and folder in every sub-folder, and so one, all the way down, to the new location. So you can copy a directory from your Desktop to your Documents folder like this:</p>\n\n\n\n<p><code><strong>cp -R ~/Desktop/MyFolder /Documents</strong></code></p>\n\n\n\n<h2>How to move files</h2>\n\n\n\n<p>You’ve probably guessed that the <code><strong>mv</strong></code> command works in the same way. But there are two ways you can use the <strong><code>mv</code></strong> command. The first moves a file to a different disk or volume; remember, just as in the Finder, copying a file to a different volume won’t delete the original, whereas moving will. So you could issue this command to move a file from your Desktop to a folder on a backup disk:</p>\n\n\n\n<pre><code><strong>mv ~/Desktop/MyFile.rtf /Volumes/Backup/MyFolder</strong></code></pre>\n\n\n\n<p>You can also move directories with the <code><strong>mv</strong></code> command. The syntax is the same, and you don’t need the <code><strong>-R</strong></code> flag as you do with the <strong>cp</strong> command.:</p>\n\n\n\n<p><code><strong>mv ~/Desktop/MyFolder /Volumes/Backup</strong></code></p>\n\n\n\n<h2>How to copy or move multiple files</h2>\n\n\n\n<p>One of the great things about the command line is the way you can use wildcards to simplify commands. For example, if you want to copy all the .rtf files (Rich Text Files) from your Desktop to your Documents folder, you can use the asterisk (*) wildcard:</p>\n\n\n\n<p><code><strong>cp ~/Desktop/*.rtf ~/Documents</strong></code></p>\n\n\n\n<p>You can use the same wildcard with the <code><strong>mv</strong></code> command to move multiple files.</p>\n\n\n\n<h2>How to rename files</h2>\n\n\n\n<p>The <code><strong>mv</strong></code> command also lets you quickly rename files. What you do is essentially move a file to the same location, but change its name. If you specify a name for its destination, the <code><strong>mv</strong></code> command changes the file’s name when it moves the file. You can change a file name like this:</p>\n\n\n\n<p><code><strong>mv ~/Desktop/MyFile.rtf ~/Desktop/MyFile-old.rtf</strong></code></p>\n\n\n\n<p>This is a valuable tool for troubleshooting; you can use this to create a backup copy of a file, such as a preference file, in case you need it again. But you can also use this renaming method simply because you want to rename a file.</p>\n\n\n\n<p>You can also copy a file with <strong><code>cp</code></strong> and change its name. In this case, you need to specify not just a destination directory, but also a name for the file:</p>\n\n\n\n<p><code><strong>cp ~/Desktop/MyFile.rtf ~/Documents/MyFile1.rtf</strong></code></p>\n\n\n\n<h2>How to create directories (a.k.a. folders)</h2>\n\n\n\n<p>Here’s one final command that may come in handy: <code><strong>mkdir</strong></code>, the <em>make directory</em> command. This is very useful when you need to make a bunch of folders in one fell swoop, say for a new project you’re starting. First use the <strong><code>cd</code></strong> (<em>change directories</em>) command to move into the directory where want to create a new directory. Once you’re there, run this command (in the example below, <strong><code>DirectoryName</code></strong> is the name you want. Replace <strong><code>DirectoryName</code></strong> with your desired name):</p>\n\n\n\n<p><strong><code>mkdir DirectoryName</code></strong></p>\n\n\n\n<p>You can use any name for the directory (for instance, “Hot Project” or “TPS Reports”), and you can make multiple directories with a single command:</p>\n\n\n\n<p><strong><code>mkdir MyDirectory1 MyDirectory2 MyDirectory3</code></strong></p>\n\n\n\n<p>With these three simple commands—<strong><code>mv</code></strong>, <code><strong>cp</strong></code>, and <strong><code>mkdir</code></strong>—you’ll be able to copy and move files, as well as create directories to hold files anywhere in your Mac’s file system. As you become proficient with these commands, you’ll see how easy they are to use.</p>\n</div>","author":"Kirk McElhearn","siteTitle":"Macworld","siteHash":"37e84dd5a21fa961d6d6630e269546024dbb7741b2e2fadbe74f47383c70dfbb","entryHash":"efc2440ba8d87ec4bb1e9b733d10b737df168ca6067c042483e5a47299b835a7","category":"Apple"}