{"title":"สรุปจากบทความเกี่ยวกับ Plan-Do-Check-Act สำหรับ DevOps","link":"https://www.somkiat.cc/pdca-devops/","date":1623485522000,"content":"<p><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/06/pdca-150x150.png\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/06/pdca.png\" /></figure>\n\n\n\n<p>อ่านบทความเกี่ยวกับการนำแนวคิด PDCA (Plan-Do-Check-Act)<br />มาใช้กับการจัดการ วางแผนระบบงานในส่วนของ infrastructure หรือ DevOps<br /></p>\n\n\n\n<p><strong><a href=\"https://www.infoq.com/articles/pdca-framework\" target=\"_blank\">Using the Plan-Do-Check-Act Framework to Produce Performant and Highly Available Systems</a></strong></p>\n\n\n\n<p>เนื่องจากระบบงานนั้น ไม่ใช่สนใจแต่การออก feature ใหม่ ๆ ให้ลูกค้าเท่านั้น<br />แต่ระบบงานต้องน่าเชื่อถือ รวมทั้งมี performance ที่ดีด้วย<br />สรุปได้ดังนี้</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>Plan</strong></p>\n\n\n\n<p>เรื่องที่สำคัญมาก ๆ ของการวางแผนคือ NFR (Non-Functional Requirements)<br />ซึ่งส่งผลต่อความน่าเชื่อถือและ performance ของระบบอย่างมาก<br />เพื่อกำหนดเป้าหมายของระบบว่า ต้องเป็นอย่างไร<br /><br /><strong>ยกตัวอย่างเช่น </strong><br />จำนวนผู้ใช้งานพร้อม ๆ กันในกรอบของเวลาที่กำหนด<br />หรือเรื่องของ response time และ error rate เป็นต้น<br />เมื่อได้ค่าต่าง ๆ เหล่านี้แล้ว<br />จะช่วยให้เราสามารถเลือกและออกแบบให้เหมาะสม</p>\n\n\n\n<ul><li>Architecture</li><li>Infrastructure</li><li>Monitoring</li><li>Testing</li><li>CI/CD ของการส่งมอบระบบ</li></ul>\n\n\n\n<p><strong>Do</strong></p>\n\n\n\n<p>เมื่อวางแผนแล้ว สิ่งที่สำคัญมาก ๆ คือ ลงมือทำ<br />เพื่อ validate ว่าสิ่งที่วางแผนและสร้างขึ้นมา มันเป็นไปดังที่หวังหรือไม่<br />ดังนั้นอย่าวางแผนนานจนเกินไป ให้ลงมือทำให้บ่อยและเร็ว<br />ยกตัวอย่างเช่น <br />การทำ performance testing จากการทำสิ่งต่าง ๆ เหล่านี้</p>\n\n\n\n<ul><li>การ upgrade พวก software หรือ hardware</li><li>การ migrate environment</li><li>การ migrate database</li><li>การ refactor ระบบ</li><li>การเปลี่ยนแปลงหรือปรับปรุง feature</li></ul>\n\n\n\n<p>เพื่อดูว่าระบบทำงานได้ตามที่คาดหวังหรือไม่<br />รวมทั้งหาขีดจำกัดการทำงานของระบบรวมทั้งได้ตัวเลขที่วางแผนเอาไว้ด้วย</p>\n\n\n\n<p><strong>Check </strong></p>\n\n\n\n<p>นำผลจากการลงมือทำ <br />มาวัดผลและตรวจสอบจากข้อมูลก่อนลงมือทำว่าผลเป็นอย่างไร<br />เพื่อหาจุดที่สามารถปรับปรุงหรือแก้ไขต่อไปได้ <br />เช่น</p>\n\n\n\n<ul><li>Slow query</li><li>Database index</li><li>Network ช้า</li><li>ไม่คืน resource หรือไม่</li><li>มี alert ของพวก error/exception หรือไม่</li><li>ระบบ monitoring เป็นอย่างไร</li><li>ในมุมมองของผู้ใช้งานเป็นอย่างไร</li></ul>\n\n\n\n<p><strong>Act</strong></p>\n\n\n\n<p>จากนั้นนำผลต่าง ๆ ที่ได้มาทำการวิเคราะห์เพื่อหาจุดแก้ไข ปรับปรุง <br />ว่าในรายละเอียดต้องทำอย่างไร<br />เพื่อให้ไปถึงเป้าหมายที่ตั้งไว้ได้<br />ยกตัวอย่างเช่น</p>\n\n\n\n<ul><li>ต้องทำ caching</li><li>จัดการเรื่องการใช้งานและคืน resource</li><li>การปรับปรุง SQL query</li><li>จำนวนของข้อมูลในการแสดงผลหรือขนาดข้อมูล</li><li>ต้องใช้ CDN</li><li>ปรับปรุง load balance</li><li>เรื่องของ network ทั้ง bandwidth และ routing</li><li>การ replicate database</li><li>การติดตั้ง environement ในหลาย ๆ ที่</li></ul>\n\n\n\n<p>ซึ่งมันคือ Continuous Learning และ Continuous Improvement นั่นเอง<br />เพื่อเรียนรู้และปรับปรุงอยู่ตลอดเวลา<br />สิ่งที่สำคัญคือ <strong>ต้องจับวัดเป็นตัวเลขได้เสมอ</strong></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"946e6ae0dd306e6b7ff72a052918b9cae5e1716df22110e4961e9e6289963785","category":"Thai"}