{"title":"CloudWatch Metric Streams – Send AWS Metrics to Partners and to Your Apps in Real Time","link":"https://aws.amazon.com/blogs/aws/cloudwatch-metric-streams-send-aws-metrics-to-partners-and-to-your-apps-in-real-time/","date":1617213886000,"content":"<p>When we launched <a href=\"https://aws.amazon.com/cloudwatch/\" title=\"\">Amazon CloudWatch</a> back in 2009 (<a href=\"https://aws.amazon.com/blogs/aws/new-aws-load-balancing-automatic-scaling-and-cloud-monitoring-services/\">New Features for Amazon EC2: Elastic Load Balancing, Auto Scaling, and Amazon CloudWatch</a>), it tracked performance metrics (CPU load, Disk I/O, and network I/O) for EC2 instances, rolled them up at one-minute intervals, and stored them for two weeks. At that time it was used to monitor instance health and to drive <a href=\"https://aws.amazon.com/autoscaling\" title=\"\">Auto Scaling</a>. Today, <a href=\"https://aws.amazon.com/cloudwatch/\" title=\"\">CloudWatch</a> is a far more comprehensive and sophisticated service. Some of the most recent additions include <a href=\"https://aws.amazon.com/about-aws/whats-new/2021/01/amazon-ebs-announces-cloudwatch-metrics-with-1-minute-granularity-on-all-ebs-volume-types/\">metrics with 1-minute granularity for all EBS volume types</a>, <a href=\"https://aws.amazon.com/about-aws/whats-new/2020/12/announcing-amazon-cloudwatch-lambda-insights-general-availability/\">CloudWatch Lambda Insights</a>, and the <a href=\"https://aws.amazon.com/about-aws/whats-new/2020/11/amazon-cloudwatch-launches-metrics-explorer/\">Metrics Explorer</a>.</p> \n<p>AWS Partners have used the <a href=\"https://aws.amazon.com/cloudwatch/\" title=\"\">CloudWatch</a> metrics to create all sorts of monitoring, alerting, and cost management tools. In order to access the metrics the partners created polling fleets that called the <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html\"><code>ListMetrics</code></a> and <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html\"><code>GetMetricData</code></a>functions for each of their customers.</p> \n<p>These fleets must scale in proportion to the number of AWS resources created by each of the partners’ customers and the number of <a href=\"https://aws.amazon.com/cloudwatch/\" title=\"\">CloudWatch</a> metrics that are retrieved for each resource. This polling is simply undifferentiated heavy lifting that each partner must do. It adds no value, and takes precious time that could be better invested in other ways.</p> \n<p><span style=\"text-decoration: underline;\"><strong>New Metric Streams</strong></span><br /> <img class=\"alignnone\" style=\"float: right; padding-left: 8px; padding-bottom: 8px;\" src=\"https://media.amazonwebservices.com/blog/2021/ms_menu_2.png\" alt=\"CloudWatch Side Menu (Dashboards, Alarms, Metrics, and more)\" width=\"250\" height=\"448\" />In order to make it easier for AWS Partners and others to gain access to <a href=\"https://aws.amazon.com/cloudwatch/\" title=\"\">CloudWatch</a> metrics faster and at scale, we are launching CloudWatch Metric Streams. Instead of polling (which can result in 5 to 10 minutes of latency), metrics are delivered to a <a href=\"https://aws.amazon.com/kinesis/data-firehose/\">Kinesis Data Firehose</a> stream. This is highly scalable and far more efficient, and supports two important use cases:</p> \n<p><strong>Partner Services </strong>– You can stream metrics to a Kinesis Data Firehose that writes data to an endpoint owned by an AWS Partner. This allows partners to scale down their polling fleets substantially, and lets them build tools that can respond more quickly when key cost or performance metrics change in unexpected ways.</p> \n<p><strong>Data Lake</strong> – You can stream metrics to a Kinesis Data Firehose of your own. From there you can apply any desired data transformations, and then push the metrics into <a href=\"https://aws.amazon.com/s3/\" title=\"\">Amazon Simple Storage Service (S3)</a> or <a href=\"https://aws.amazon.com/redshift/\" title=\"\">Amazon Redshift</a>. You then have the full array of AWS analytics tools at your disposal: <a href=\"https://aws.amazon.com/blogs/aws/s3-glacier-select/\">S3 Select</a>, <a href=\"https://aws.amazon.com/sagemaker/\" title=\"\">Amazon SageMaker</a>, <a href=\"https://aws.amazon.com/emr\" title=\"\">Amazon EMR</a>, <a href=\"https://aws.amazon.com/athena\" title=\"\">Amazon Athena</a>, <a href=\"https://aws.amazon.com/kinesis/data-analytics/\" title=\"\">Amazon Kinesis Data Analytics</a>, and more. Our customers do this to combine billing and performance data in order to measure &amp; improve cost optimization, resource performance, and resource utilization.</p> \n<p>CloudWatch Metric Streams are fully managed and very easy to set up. Streams can scale to handle any volume of metrics, with delivery to the destination within two or three minutes. You can choose to send all available metrics to each stream that you create, or you can opt-in to any of the available AWS (EC2, S3, and so forth) or custom namespaces.</p> \n<p>Once a stream has been set up, metrics start to flow within a minute or two. The flow can be stopped and restarted later if necessary, which can be handy for testing and debugging. When you set up a stream you choose between the binary <a href=\"https://opentelemetry.io/\">Open Telemetry</a> 0.7 format, and the human-readable JSON format.</p> \n<p>Each Metric Stream resides in a particular AWS region and delivers metrics to a single destination. If you want to deliver metrics to multiple partners, you will need to create a Metric Stream for each one. If you are creating a centralized data lake that spans multiple AWS accounts and/or regions, you will need to set up some IAM roles (see <a href=\"https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html\">Controlling Access with Amazon Kinesis Data Firehose</a> for more information).</p> \n<p><span style=\"text-decoration: underline;\"><strong>Creating a Metric Stream</strong></span><br /> Let’s take a look at two ways to use a Metric Stream. First, I will use the Quick S3 setup option to send data to a Kinesis Data Firehose and from there to S3. Second, I will use a Firehose that writes to an endpoint at AWS Partner New Relic.</p> \n<p>I open the CloudWatch Console, select the desired region, and click <strong>Streams</strong> in the left-side navigation. I review the page, and click <strong>Create stream</strong> to proceed:</p> \n<p><img class=\"aligncenter\" src=\"https://media.amazonwebservices.com/blog/2021/ms_splash_2.png\" alt=\"CloudWatch Metric Streams Home Page in Console\" width=\"901\" height=\"632\" /></p> \n<p>I choose the metrics to stream. I can select <strong>All metrics</strong> and then exclude those that I don’t need, or I can click <strong>Selected namespaces</strong> and include those that I need. I’ll go for <strong>All</strong>, but exclude Firehose:</p> \n<p><img class=\"aligncenter\" src=\"https://media.amazonwebservices.com/blog/2021/ms_streamed_1.png\" alt=\"Create a Metric Stream - Part 1, All or Selected\" width=\"899\" height=\"584\" /></p> \n<p>I select <strong>Quick S3 setup</strong>, and leave the other configuration settings in this section unchanged (I expanded it so that you could see all of the options that are available to you):</p> \n<p><img class=\"aligncenter\" src=\"https://media.amazonwebservices.com/blog/2021/ms_s3_easy_config_2.png\" alt=\"Create a Metric Stream - Options for S3 bucket and IAM roles\" width=\"900\" height=\"893\" /></p> \n<p>Then I enter a name (<strong>MyMetrics-US-East-1A</strong>) for my stream, confirm that I understand the resources that will be created, and click <strong>Create metric stream</strong>:</p> \n<p><img class=\"aligncenter\" src=\"https://media.amazonwebservices.com/blog/2021/ms_name_confirm_1.png\" alt=\"Set name for Metric Stream and confirm resources to be created\" width=\"900\" height=\"603\" /></p> \n<p>My stream is created and active within seconds:</p> \n<p><img class=\"aligncenter\" src=\"https://media.amazonwebservices.com/blog/2021/ms_my_streams_1.png\" alt=\"Metric Stream is Active\" width=\"900\" height=\"360\" /></p> \n<p>Objects begin to appear in the S3 bucket within a minute or two:</p> \n<p><img class=\"aligncenter\" src=\"https://media.amazonwebservices.com/blog/2021/ms_s3_metrics_1.png\" alt=\"Objects appear in S3 Bucket\" width=\"900\" height=\"452\" /></p> \n<p>I can analyze my metrics using any of the tools that I listed above, or I can simply look at the raw data:</p> \n<p><img class=\"aligncenter\" src=\"https://media.amazonwebservices.com/blog/2021/ms_metrics_raw_1.png\" alt=\"A single Metrics object, shown in NotePad++, JSON format\" width=\"900\" height=\"368\" /></p> \n<p>Each Metric Stream generates its own set of CloudWatch metrics:</p> \n<p><img class=\"aligncenter\" src=\"https://media.amazonwebservices.com/blog/2021/ms_metrics_for_metrics_1.png\" alt=\"Metrics for the metrics stream\" width=\"899\" height=\"284\" /></p> \n<p>I can stop a running stream:</p> \n<p><img class=\"aligncenter\" src=\"https://media.amazonwebservices.com/blog/2021/ms_metrics_stop_stream_1.png\" alt=\"How to stop a running stream\" width=\"600\" height=\"407\" /></p> \n<p>And then start it:</p> \n<p><img class=\"aligncenter\" src=\"https://media.amazonwebservices.com/blog/2021/ms_metrics_start_stream_1.png\" alt=\"How to start a stopped stream\" width=\"600\" height=\"409\" /></p> \n<p>I can also create a Metric Stream using a CloudFormation template. Here’s an excerpt:</p> \n<div class=\"hide-language\"> \n <pre class=\"unlimited-height-code\"><code class=\"lang-yaml\">AWSTemplateFormatVersion: 2010-09-09\nResources:\n  MetricStream:\n    Type: 'AWS::CloudWatch::MetricStream'\n    Properties:\n      OutputFormat: json\n      RoleArn: !GetAtt\n        - MetricStreamToFirehoseRole\n        - Arn\n      FirehoseArn: !GetAtt\n        - FirehoseToS3Bucket\n        - Arn\n</code></pre> \n</div> \n<p>Now let’s take a look at the Partner-style use case! The team at New Relic set me up with a CloudFormation template that created the necessary IAM roles and the Metric Stream. I simply entered my API key and an S3 bucket name and the template did all of the heavy lifting. Here’s what I saw:</p> \n<p><img class=\"aligncenter\" src=\"https://media.amazonwebservices.com/blog/2021/ms_new_relic_1.png\" alt=\"Metrics displayed in the New Relic UI\" width=\"900\" height=\"633\" /></p> \n<p><span style=\"text-decoration: underline;\"><strong>Things to Know</strong></span><br /> And that’s about it! Here are a couple of things to keep in mind:</p> \n<p><strong>Regions</strong> – Metric Streams are now available in all commercial AWS Regions, excluding the AWS China (Beijing) Region and the AWS China (Ningxia) Region. As noted earlier, you will need to create a Metric Stream in each desired account and region (this is a great use case for <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/what-is-cfnstacksets.html\">CloudFormation Stacksets</a>).</p> \n<p><strong>Pricing</strong> – You pay $0.003 for every 1000 metric updates, and for any charges associated with the Kinesis Data Firehose. To learn more, check out the <a href=\"https://aws.amazon.com/cloudwatch/pricing/\">pricing page</a>.</p> \n<p><strong>Metrics</strong> – CloudWatch Metric Streams is compatible with all CloudWatch metrics, but does not send metrics that have a timestamp that is more than two hours old. This includes S3 daily storage metrics and some of the billing metrics.</p> \n<p><span style=\"text-decoration: underline;\"><strong>Partner Services</strong></span><br /> We designed this feature with the goal of making it easier &amp; more efficient for AWS Partners including Datadog, Dynatrace, New Relic, Splunk, and Sumo Logic to get access to metrics so that the partners can build even better tools. We’ve been working with these partners to help them get started with CloudWatch Metric Streams. Here are some of the blog posts that they wrote in order to share their experiences. <em>(I am updating this article with links as they are published.)</em></p> \n<ul> \n <li><strong>Datadog</strong> – <a href=\"https://www.datadoghq.com/blog/amazon-cloudwatch-metric-streams-datadog/\">Collect Amazon CloudWatch metrics faster with Datadog using CloudWatch Metric Streams</a></li> \n <li><strong>Dynatrace </strong>–<a href=\"https://www.dynatrace.com/news/blog/amazon-cloudwatch-metric-streams-launch-partnership/\"> Analyze all AWS data in minutes with Amazon CloudWatch Metric Streams available in Dynatrace</a></li> \n <li><strong>New Relic</strong> – <a href=\"https://blog.newrelic.com/product-news/aws-cloudwatch-metric-streams/\">Move Faster with New Relic One and Amazon CloudWatch Metric Streams</a></li> \n <li><strong>Splunk&nbsp;</strong>– <a href=\"https://www.splunk.com/en_us/blog/devops/real-time-observability-splunk-cloudwatch-metric-streams.html\">Low Latency Observability Into AWS Services With Splunk</a></li> \n <li><strong>Sumo Logic</strong> – <a href=\"https://www.sumologic.com/blog/aws-partner-cloudwatch-metrics-collection/\">Sumo Logic joins AWS to accelerate Amazon CloudWatch Metrics collection</a></li> \n</ul> \n<p><span style=\"text-decoration: underline;\"><strong>Now Available</strong></span><br /> CloudWatch Metric Streams is available now and you can use it to stream metrics to a Kinesis Data Firehose of your own or an AWS Partners. For more information, check out the <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Metric-Streams.html\">documentation</a> and send feedback to the <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=138\">AWS forum</a> for Amazon CloudWatch.</p> \n<p>— <a href=\"https://twitter.com/jeffbarr\">Jeff</a>;</p>","author":"Jeff Barr","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"d1bc0eab061fe5de3624e86a3daff0f14cedb073f06bdf42ab658c8bc57d8e4f","category":"Tech"}