{"title":"มาลองใช้ BDD ใน Flutter กัน","link":"https://www.somkiat.cc/bdd-in-flutter/","date":1624204525000,"content":"<p><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/06/flutter-bdd-150x150.png\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/06/flutter-bdd.png\" /></figure>\n\n\n\n<p>ในการพัฒนา Flutter App นั้น เรื่องของการทำงานร่วมกัน<br />ของคนในส่วนต่าง ๆ อย่างราบรื่น ทั้ง tech และ non-tech<br />หนึ่งในแนวทางคือ BDD (Behaviour Driven Development)<br />ด้วยการสร้างหรือกำหนดภาษาในการทำงานร่วมกัน<br />ทั้งส่วนของทีม business, product, development และ QA/Tester<br />รูปแบบที่เรามักจะเห็นบ่อย ๆ คือ <strong>Given-When-Then</strong></p>\n\n\n\n<span></span>\n\n\n\n<p><strong>ดังนั้นจึงไปดูว่ามี library อะไรให้ใช้ใน Flutter บ้าง ?</strong></p>\n\n\n\n<p>ก็ไปเจอ library ชื่อว่า <strong><a href=\"https://pub.dev/packages/ogurets\" target=\"_blank\">Ogurets</a></strong><br />ซึ่งสนับสนุน Null-safty แล้วอีกด้วย ตั้งแต่ version 4.0.0<br />ทำให้สามารถเขียน test ในรูปแบบของ <a href=\"http://cukes.info/\" target=\"_blank\">Gherkin</a> ได้เลย</p>\n\n\n\n<p><strong>โดยที่ library จะเตรียม annotation รูปแบบเดียวกับภาษา Java ไว้ดังนี้</strong></p>\n\n\n\n<ul><li>@Given</li><li>@When</li><li>@Then</li><li>@And</li><li>@But</li><li>@Before  และ @After สำหรับ Hook ใน test หรือ Test Life Cycle นั่นเอง</li></ul>\n\n\n\n<p><strong>ในการพัฒนายังคงแยกเป็น 2 ไฟล์ เช่นเดิมคือ</strong></p>\n\n\n\n<ul><li>Feature file</li><li>Step definition (Stepdef)</li></ul>\n\n\n\n<p><strong>สิ่งที่สำคัญคือ การ run test ที่เขียนขึ้นมานั่นเอง</strong></p>\n\n\n\n[gist id=\"c48dc8e13364a0acc44df185687967ca\" file=\"bdd_test.dart\"]\n\n\n\n<p>เพียงเท่านี้ก็เขียนชุดการทดสอบแบบง่าย ๆ ได้แล้ว</p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"3f9fc23f6dd0b6ff2b2a19033c10832100c0ca88717efcc678e190b6741526fc","category":"Thai"}