{"title":"Trying out Qt","link":"https://blog.whs.in.th/node/3510","date":1611510905000,"content":"<p>ปกติเวลาลองของใหม่ๆ จะลงในเฟสอยู่เรื่อยๆ แต่จะตั้ง friend only ไว้เพราะว่าเดี๋ยวนี้วงการนี้ดราม่าเยอะ ถ้าจะกด public หรือลง blog ต้องมานั่ง fact check พอสมควรก่อนถึงจะออกได้</p>\n<p>ปีนี้เนื่องจาก Facebook ปรับ UI ใหม่ให้น่ารำคาญขึ้น ก็คิดว่าน่าจะถึงเวลาเลิกแล้วกลับมาเขียนในบล็อค ก็เลยคิดว่าจะลองดูใหม่คือเอา content แนวเดิม formatting แย่ๆ แบบเดิมแต่เขียนลงบล็อคดูบ้าง</p>\n<p>สำหรับคนที่อาจจะไม่เคยได้อ่าน content พวกนั้น, ปกติจะ:</p>\n<ul>\n<li>เป็น first impression มากๆ คือไม่ได้ลึกและบางทีที่เชียร์ผ่านไปอีกสองวันก็ไม่เชียร์แล้ว แต่ไม่ได้กลับมาอัพเดตนะ</li>\n<li>rapid fire จัดๆ เน้น bullet point คิดอะไรออก brain dump ลงไป</li>\n<li>เขียนแบบคิดว่าคนอ่านเข้าใจใน topic นั้นแล้ว</li>\n<li>ไม่ได้ proofread</li>\n</ul>\n<hr />\n<p>ช่วงนี้โคลนแอพ Alt1 มารันใน Linux อยู่ (Alt1 เป็นโปรแกรมช่วยเล่นเกม RuneScape โดยมันจะ stream หน้าจอให้ web page แล้ว web page ทำ OCR) ก็พบว่าถึงโค้ดมันจะค่อนข้างแย่ แต่ไอเดียรอบๆ มันฉลาดดีแล้วทำให้ port ง่ายมาก เพราะ OCR ทั้งหมดไปรันใน JavaScript หมด</p>\n<p>Goal คิดว่าอยากได้ Linux + Mac ก็เลยเลือก Qt ก่อนหน้านี้เคยใช้ Gtk กับ wxWidget มาแล้ว คิดว่า Gtk ไม่น่าจะรันในแมคได้ดี ส่วน wxWidget คิดว่า API จะไม่พอใช้</p>\n<p>ปัญหาแรกที่เจอคือคนเขียน cefpython ไม่ได้อัพเดตต่อ คือไม่มีตังให้ก็ไม่ทำ ซึ่งก็ถูกของเค้าล่ะ ก็เลยต้องเปลี่ยน engine ไปใช้ QtWebEngine ซึ่งมันไม่ใช่ CEF แต่มันเป็น Embedded Chromium เหมือนกัน</p>\n<p>พอเอา QtWebEngine มารันได้ ถัดมาที่ต้องทำคือจำลอง Alt1 API ซึ่งบน Alt1 มันจะมี <code>window.alt1</code> ที่มีเมธอดต่างๆ เช่น <code>getRegion</code> เพื่อที่จะ transfer capture มายัง JavaScript ปัญหาก็คือ CEF3 ไม่มีท่าที่สามารถ provide native object ให้ web ได้แล้ว รวมถึง QtWebEngine ด้วย เหตุผลเพราะว่า Blink มันรันเป็น multiprocess แล้วทำให้ไม่สามารถแชร์ของข้าม process ไปได้ ก็จะมีแต่ Async API ให้เท่านั้น</p>\n<p>ยังสงสัยอยู่ว่า Alt1 จะทำยังไง หรือจะไม่อัพเกรด CEF?</p>\n<p>ก็นึกอยู่คืนหนึ่งว่าทำยังไงดี QtWebEngine ก็ไม่มีแนะนำ จนกระทั่งไปอ่าน docs ของ CEF แล้วมันเขียนว่าให้ทำ synchronous XHR ซึ่งทีแรกก็ลังเลเพราะมันจะ deprecate แล้ว แต่ก็ไม่มีทางเลือกเลยต้องทำ</p>\n<p>พอ Get รูปได้รอบแรกดีใจมาก แต่ปัญหาคือพอไปลองกับ app จริงๆ แล้วมัน poll เอารูปค่อนข้างถี่มากๆ แล้ว encoder algorithm มันเขียนด้วย Python ซึ่งช้ามาก (ฝั่ง JS expect รูปเป็นแบบ color channel BGRA ซึ่งต้องสลับเอง) เลยลองไปเขียน Cython ดู พบว่าเขียนง่ายมากๆ และออกเป็น C จริงๆ มีให้ดูด้วย แถมเร็วมากๆ</p>\n<p>(ตอนหลังมาพบว่ามัน <code>split()</code> แล้ว <code>merge()</code> เพื่อเรียง channel ใหม่ได้ เร็วกว่า cython ที่เขียนอีก&#8230;)</p>\n<p>พอรันได้แล้วก็เลยลองหาวิธีต่อกับเกมจริงๆ บ้าง ตอน capture เกมพบว่า Qt สามารถเอา <code>WId</code> ให้มันแล้วมันจะ capture หน้าต่างได้ ซึ่งบน Linux ต้องใช้ Xlib หา X Window ID ออกมาแล้วส่งให้ ที่ Qt ทำคือมันจะแคปจอทั้งหมด แล้ว crop ให้เหลือแต่ด้านในของ Window นั้น ซึ่งก็ง่ายดีแต่แปลว่าห้ามมีอะไรบังหน้าต่าง</p>\n<p>ไปต่อ Xlib ตรงๆ นี่ปวดหัวมาก ทำ segfault ไปหลายรอบ ยังขี้เกียจบ่นอยู่เพราะเพิ่งมารู้ว่าควรจะต่อกับ XCB แทน เดี๋ยวจะไปเขียนใหม่</p>\n<hr />\n<p>ทีนี้ที่รู้สึกเจ๋งมากคือลอง port ไปรันใน Mac ดูบ้าง ส่วนที่ต้องทำก็คือ</p>\n<ul>\n<li>หาวิธี list game window บน Mac</li>\n<li>บน Mac WId คือ Window pointer ของ Quartz ซึ่งไม่มี representation ใน Python แปลว่าใช้ท่า capture เดิมไม่ได้เลย</li>\n</ul>\n<p>ก็ลองเขียนต่อกับ Quartz ดูแล้วพบว่า API ของ Mac ใช้งานง่ายกว่าเยอะ docs คุณภาพดีกว่ามาก (ของ Python นี่ไม่มี API docs ต้องนั่งแกะซอร์สเทียบกับ protocol definition) งมอยู่ประมาณ 4 ชั่วโมงก็ใช้ได้ทั้ง 2 feature แถม capture window ที่โดนบังได้ด้วยเพราะ Mac มี API ที่ระบุหน้าต่างแล้วมันเอามาให้ได้เลย</p>\n<p>หลังจากใช้งานพื้นฐานได้ ก็ hook กับ Accessibility API อีกหลายชั่วโมงก็สามารถจับ game resize, game activity (ถ้าไม่กดเมาส์นานๆ เกมจะ auto logout) และ hotkey ได้ เป็นอันสมบูรณ์ก่อน Linux</p>\n<p>แต่ว่า port Mac จริงๆ ก็ยังมีปัญหาอยู่บ้าง นั่นคือ</p>\n<ol>\n<li>Capture API ใน Mac คืนกรอบหน้าต่างมาด้วย ถึงจะบอกว่าไม่เอามันจะไม่ให้เงามาแต่ยังให้กรอบอยู่ดี ส่งผลให้ API ที่ใช้ตำแหน่งต่างๆ เลื่อนหมด</li>\n<li>Mac ใช้ HiDPI (Retina display) เป็นหลักและมันทำให้พิกัดต่างๆ ปวดหัวมากว่าอันนี้เป็น screen size หรือ actual size และตัวเกมเองไม่ได้ support Retina ด้วย</li>\n</ol>\n<hr />\n<p>ทีรู้สึกว่า Qt มันเจ๋งมากๆ คือด้านบนที่เล่ามามีแค่ port ส่วนที่ต่อกับเกมซึ่ง Qt ไม่มี API ที่ไปเชื่อมต่อกับหน้าต่างแอพอื่นๆ สักเท่าไร แต่ในส่วน browser แล้วใช้โค้ดเดียวกันรันได้ทุก platform เหมือนกันเป๊ะ คือ Qt abstract platform ให้ได้ดีมากๆ บวกกับ Python ด้วย</p>\n<p>เดี๋ยวถึงตอนจะทำ embed window, custom decoration ค่อยมาดูว่าจะรอดมั้ย</p>\n<p>Go look at my code >> https://github.com/whs/runekit</p>\n<hr />\n<p>สุดท้ายซ่าอยากลอง เลยลอง Port ไปรันใน Windows ดูบ้าง</p>\n<ul>\n<li>WId บน Windows ใช้ HWND ของ Windows ได้เลย</li>\n<li>ฟังค์ชั่น capture ของ Qt รันบน HWND แล้วได้ window capture !! สุดยอดมาก</li>\n<li>API Windows เท่าที่ดูยังงงๆ ว่าอะไรเรียกว่าอะไร แต่ถ้าเจอแล้วก็เรียกใช้ได้ง่ายกว่า Xlib บน Linux อยู่ดี&#8230;</li>\n</ul>\n<figure id=\"attachment_3512\" aria-describedby=\"caption-attachment-3512\" style=\"width: 251px\" class=\"wp-caption aligncenter\"><img loading=\"lazy\" src=\"https://blog.whs.in.th/wp-content/uploads/2021/01/screenshot.jpg\" alt=\"\" width=\"251\" height=\"505\" class=\"size-full wp-image-3512\" srcset=\"https://blog.whs.in.th/wp-content/uploads/2021/01/screenshot.jpg 251w, https://blog.whs.in.th/wp-content/uploads/2021/01/screenshot-149x300.jpg 149w\" sizes=\"(max-width: 251px) 85vw, 251px\" /><figcaption id=\"caption-attachment-3512\" class=\"wp-caption-text\">Real Alt1 vs clone</figcaption></figure>\n<hr />\n<p>เขียน project นี้แล้วก็เริ่มรู้สึกเหมือนตอนเด็กกว่านี้ว่าต่อไปนี้เราทำ Qt UI ดีกว่า เขียนทีเดียวรันได้ทุกที่ แถม native ไม่ต้องใช้แล้ว React Native หรือ Flutter</p>\n<p>แต่ปัญหาใหญ่ของ Qt คือมันเป็นบริษัทเขียนมันถึงจะออกมาได้ดีขนาดนี้ และบริษัทเองก็ให้ใช้งานภายใต้ LGPL ฟรี ปัญหาคือพอเป็น mobile app แล้ว โดยเฉพาะ iOS จะค่อนข้างยากที่จะทำให้ user สามารถ replace LGPL library เองได้ ถ้าจะซื้อรุ่นเสียเงินก็ราคาไม่ได้ถูกเลย โดยเฉพาะเมื่อเทียบกับ React Native หรือ Flutter ที่มันใช้ฟรี</p>\n<p>แต่ทั้งสอง project เอง ก็ยังรู้สึกว่าเป็น corporate back อยู่ประมาณหนึ่งไม่ได้มี community มาทำแทนกันได้หมด ถึงจะมีคนใช้มากแต่ถ้า sponsor หลักไม่ทำก็อาจจะ innovate ไม่ทันเทคโนโลยีอื่นได้ ก็เป็นปัญหา classic ของ open source ที่ corporate ใช้ว่า take อย่างเดียวแต่ไม่ give</p>","author":"whs","siteTitle":"Quietly Verbose","siteHash":"5f972a6fe70a917eb1b1aa165b3cb2be8a9465af33ab38bf05f34c55c0e40587","entryHash":"dd7dbdb1c24e23a710786bce4fc311351a68d8c7649582cd66b88825ecb07c38","category":"Thai"}