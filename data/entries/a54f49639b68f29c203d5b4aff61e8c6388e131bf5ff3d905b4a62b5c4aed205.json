{"title":"HashiCorp Boundary 0.1.5: Target-Aware Workers and More","link":"https://www.hashicorp.com/blog/boundary-0-1-5","date":1613149200000,"content":"<p><a href=\"https://www.boundaryproject.io/downloads\">Boundary 0.1.5</a> has been released with several new features that make Boundary more capable in multi-datacenter and multi-region environments, drive more insights into Boundary’s resources by conveying what actions a user can perform on a resource, and allow a user to list resources recursively in scope. Additionally, we’ve added a new <code>migrate</code> command that provides an easier upgrade path with fail-safes in the event of migration issues. We’ll cover all these features in more detail below!</p>\n<h2><a class=\"__permalink-h\" href=\"#target-aware-workers\" aria-label=\"target aware workers permalink\">»</a><a class=\"__target-h\" id=\"target-aware-workers\" aria-hidden></a>Target-Aware Workers</h2>\n<p>The Boundary target-aware workers feature allows the ability to specify a boolean-expression filter against worker tags to control which workers are allowed to handle a given target’s session. This enables a worker to effectively be “tied” to a given target, forcing the session to occur through a specified worker for a specific target. This feature allows Boundary to be a key player in a multi-datacenter/multi-region cloud operating model by allowing a single set of controllers to live in one region, and then have workers in many regions where each set of workers can be tied to a specific network slice (VPC or other) where the targets they are proxying live.</p><img src=https://www.datocms-assets.com/2885/1612884569-target-aware-workers-1.png alt=HashiCorp Boundary Target Aware Workers><h2><a class=\"__permalink-h\" href=\"#navigating-resources-over-the-cli\" aria-label=\"navigating resources over the cli permalink\">»</a><a class=\"__target-h\" id=\"navigating-resources-over-the-cli\" aria-hidden></a>Navigating Resources over the CLI</h2>\n<p>One of Boundary's biggest user asks has been to make it more straightforward to view and list resources on the command line. With 0.1.5 we’ve landed two improvements:</p>\n<ol>\n<li><strong>List Authorizations</strong> - allowing users to see what actions they’re authorized to perform against the resources returned in the list command.</li>\n<li><strong>Recursive Listing</strong> - allowing users to recursively list resources across a scope. Whereas users previously had to execute a series of boundary <code>&#x3C;resource> list -scope-id $project-id</code> commands to survey their resources across all of their org’s projects, they now have a streamlined boundary <code>&#x3C;resource> list -scope-id $org-id -recursive</code> to list all resources across an org.</li>\n</ol>\n<p>In addition to being useful in their own right, these features are also foundational for future improvements in users’ abilities to filter and search for resources based on their parameters.</p>\n<h2><a class=\"__permalink-h\" href=\"#migrate-command\" aria-label=\"migrate command permalink\">»</a><a class=\"__target-h\" id=\"migrate-command\" aria-hidden></a>Migrate Command</h2>\n<p>While new features are added to Boundary, like the Target-Aware workers, the backing database schema must be updated to support these features.  The migrate command gives you a way to do that.  Simply stop all the running controllers, run <code>boundary database migrate</code> and all the changes will be applied to the database in a single transaction.</p>\n<p>Even though the migrate command is resilient to errors due to utilizing PostgreSQL transactions, it is still highly recommended that you follow good database practices and backup prior to migrating.  This is also valuable in case you decide you want to stick with an older version of Boundary since the migrate command is a one-way switch that does not allow reverting back to an older version.  In this release, and in future releases where new features require an update to the DB, boundary will not let you start a new controller but will direct you to use the <code>boundary database migrate</code> command.</p>\n<h2><a class=\"__permalink-h\" href=\"#next-steps\" aria-label=\"next steps permalink\">»</a><a class=\"__target-h\" id=\"next-steps\" aria-hidden></a>Next Steps</h2>\n<p>To learn more about Boundary, please visit the project website at <a href=\"https://boundaryproject.io/\">boundaryproject.io</a>, <a href=\"https://github.com/hashicorp/boundary\">github.com/hashicorp/boundary</a> for the source code, and <a href=\"https://learn.hashicorp.com/collections/boundary/getting-started\">HashiCorp Learn</a> to find our step-by-step tutorials to get started with Boundary.</p>","author":"Todd Knight","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"a54f49639b68f29c203d5b4aff61e8c6388e131bf5ff3d905b4a62b5c4aed205","category":"Tech"}