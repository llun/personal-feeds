{"title":"Announcing Consul 1.10 GA","link":"https://www.hashicorp.com/blog/announcing-consul-1-10","date":1624464000000,"content":"<p>We are pleased to announce that <a href=\"https://www.consul.io\">HashiCorp Consul 1.10</a> is now generally available to all users. This release is yet another step forward in our effort to help organizations run Consul efficiently at scale and seamlessly integrate service mesh into their application workflows. Consul 1.10 contains a number of exciting features that we will review in this blog.</p>\n<h2><a href=\"#transparent-proxy\">»</a><a></a>Transparent Proxy</h2>\n<p>As with any service mesh, Consul facilitates secure service-to-service communication through sidecar proxies, typically Envoy. Previously, our goal was to allow users to be very prescriptive in the flow of traffic between these services by setting dedicated upstreams and guidance to the proxies for connectivity. While many users value this capability, others prefer to allow the mesh to govern itself and allow Envoy to infer the destination based on the application information.</p>\n<p>This feature is known as <a href=\"https://www.consul.io/docs/connect/transparent-proxy\">Transparent Proxy</a> and it is available today in Consul 1.10. Now users can have the proxy intercept and redirect traffic from applications running in virtual machines or Kubernetes without additional modifications.</p>\n<h2><a href=\"#support-for-xds-v3-and-incremental-xds\">»</a><a></a>Support for xDS v3 and Incremental xDS</h2>\n<p>Consul 1.10 will default to using <a href=\"https://www.envoyproxy.io/docs/envoy/latest/api-docs/xds_protocol\">xDS</a> version 3 and Incremental xDS for all supported Envoy proxy versions bootstrapped by the Consul 1.10 CLI. This is driven by the fact that xDS v2 was deprecated in Envoy 1.15 and disabled in Envoy 1.17. Envoy proxies bootstrapped with older Consul CLI binaries will continue to use the xDS v2 state-of-the-world API.</p>\n<h2><a href=\"#streaming-enabled-by-default-for-service-health\">»</a><a></a>Streaming Enabled by Default for Service Health</h2>\n<p>Consul 1.9 introduced a major architectural enhancement in how update notifications for blocking queries are delivered within the cluster. The enhancement is called streaming and it significantly reduces CPU and network bandwidth usage for large-scale Consul deployments. One of our customers, <a href=\"https://www.hashicorp.com/case-studies/criteo\">Criteo</a>, actually blogged about their <a href=\"https://medium.com/criteo-engineering/consul-streaming-whats-behind-it-6f44f77a5175\">experience with streaming and how it helps them run Consul at a large scale</a>.</p>\n<p>In Consul 1.10, streaming is now available for the <a href=\"https://www.consul.io/api-docs/health#list-nodes-for-service\">service health HTTP endpoint</a> and is enabled by default. Our goal is to make streaming the only mechanism for delivering blocking query updates.</p>\n<h2><a href=\"#redesigned-ui-and-observability-enhancements\">»</a><a></a>Redesigned UI and Observability Enhancements</h2>\n<p>In Consul 1.10, the Consul UI has a fresh redesign complete with a new sidebar layout. The new UI makes it easier for users to navigate Consul if they would prefer to not use the CLI. Additionally, we have made it even easier to take advantage of Consul’s Service Visualization UI, introduced in Consul 1.9.</p>\n<p>Kubernetes users now have the ability to deploy Prometheus via the Consul Helm chart. This will automatically integrate Prometheus with Consul’s Service Visualization UI for displaying traffic metrics between services. This is currently intended to be used for demo / non-production environments. Additionally, Consul Agent and Gateway metrics can be enabled with Helm and loaded into a Grafana dashboard.</p>\n<p>Additionally, we have enabled users to expose Pod and Envoy metrics to Prometheus using Kubernetes annotations via a single endpoint. In the past, users needed to choose either Envoy or Pod metrics since the Prometheus annotations only allow users to scrape from a single Pod with a container on Kubernetes. You can read more about configuring metrics for Consul Kubernetes in our <a href=\"https://www.consul.io/docs/k8s/connect/observability/metrics\">Observability docs</a>.</p>\n<h2><a href=\"#deprecation-of-legacy-acl-system\">»</a><a></a>Deprecation of Legacy ACL System</h2>\n<p>In Consul 1.4, we upgraded to a new Access Controls (ACLs) system. This upgrade made improvements in Consul’s ACL system handles the API, Tokens, and Policies. With Consul 1.10, we are officially deprecating the legacy system and will be making plans to officially remove it from Consul. The legacy ACL system will still remain available for users in the near term, but we strongly recommend that users begin the process of migrating to our new ACL system. For more information about our ACL system and recommendations on migrating tokens, please review <a href=\"https://www.consul.io/docs/security/acl/acl-system\">our documentation</a>.</p>\n<h2><a href=\"#next-steps\">»</a><a></a>Next Steps</h2>\n<p>We are excited for users to try this release of Consul and further expand their service mesh implementations. This release includes enhancements for all types of Consul users leveraging the product for service discovery and service mesh, across both containerized and non-containerized environments. Our goal with Consul is to enable an enterprise-ready, consistent control plane to discover and securely connect any application. One last note for our enterprise customers, Consul 1.10 introduces some changes to how enterprise licensing is handled. If you are an enterprise customer and have questions about these changes, please refer to this <a href=\"https://learn.hashicorp.com/tutorials/nomad/hashicorp-enterprise-license?in=consul/enterprise\">learn guide</a>. For more information about Consul, please visit our <a href=\"https://www.consul.io/docs\">documentation</a> and to get started with the Consul 1.10, please download operating system binaries from our <a href=\"https://releases.hashicorp.com/consul/\">release page</a> or install the latest <a href=\"https://github.com/hashicorp/consul-helm/releases/tag/v0.32.0\">v0.32.0</a> Helm chart that supports Consul 1.10 for Kubernetes.</p>","author":"Blake Covarrubias","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"c62fd4ffca726232e5d7ddc754b84e6a8fbae861336900041d9a804325fa5fb3","category":"Tech"}