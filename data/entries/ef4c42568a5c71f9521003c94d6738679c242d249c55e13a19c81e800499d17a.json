{"title":"Announcing the Google Workspace Provider for HashiCorp Terraform Tech Preview","link":"https://www.hashicorp.com/blog/announcing-the-google-workspace-provider-for-hashicorp-terraform-tech-preview","date":1624460400000,"content":"<p>The <a href=\"https://registry.terraform.io/providers/hashicorp/googleworkspace\">Google Workspace provider</a> for Terraform allows you to manage domains, users, and groups in your <a href=\"https://workspace.google.com/\">Google Workspace</a>. This provider is a technical preview, which means it's a community supported project and will require incremental testing and polishing to mature into a HashiCorp officially supported project.</p>\n<p>This post will include use cases, requirements, configuration, and examples and show how to create your first user, your first group, and add a user to the group. Please <a href=\"https://github.com/hashicorp/terraform-provider-googleworkspace/issues/new/choose\">file issues</a> and detail your experience while using the provider. We welcome your feedback.</p>\n<h2><a href=\"#use-cases\">»</a><a></a>Use Cases</h2>\n<p>Here are some ways you can use the new Google Workspace provider to manage your Google Workspace account. Full examples with instructions are available in the <a href=\"https://github.com/hashicorp/terraform-provider-googleworkspace/tree/main/examples\">provider repository.</a></p>\n<ul>\n<li>Create users, with custom schemas, and add their attributes with one resource</li>\n<li>Manage groups, group settings, and group membership</li>\n<li>Update user information, reset passwords</li>\n<li>Detect drift to user and group configuration performed outside Terraform</li>\n</ul>\n<h2><a href=\"#requirements\">»</a><a></a>Requirements</h2>\n<p>In order to use the Google Workspace provider, you will need:</p>\n<ul>\n<li>Google Workspace subscription</li>\n<li>A designated Google Workspace User to impersonate</li>\n<li>Credentials to a Google Cloud service account with Domain-Wide Delegation enabled</li>\n<li>\n<a></a>\n<a href=\"#admin-googleapis-com\"><code>admin.googleapis.com</code></a> API must be enabled in Google Cloud</li>\n<li>\n<a></a>\n<a href=\"#groupssettings-googleapis-com\"><code>groupssettings.googleapis.com</code></a> must be enabled in Google Cloud (for changes to group’s settings)</li>\n</ul>\n<h2><a href=\"#configuring-the-provider\">»</a><a></a>Configuring the Provider</h2>\n<p>Terraform uses a Google Cloud service account to manage resources created by the provider. To create the service account and generate a service account key, see <a href=\"https://developers.google.com/admin-sdk/directory/v1/guides/delegation#create_the_service_account_and_credentials\">Google’s documentation</a>.</p>\n<p>Once the key has been generated, save the JSON file locally and set the <code>GOOGLEWORKSPACE_CREDENTIALS</code> environment variable to the path of the service account key. Terraform will use this for authentication.</p>\n<p>To access user data on a Google Workspace domain, the service account that you created needs to be granted access by a super administrator for the domain. To delegate domain-wide authority to a service account, reference the instructions in <a href=\"https://developers.google.com/admin-sdk/directory/v1/guides/delegation#delegate_domain-wide_authority_to_your_service_account\">Google’s documentation</a>.</p>\n<p>Furthermore, only users with access to the Admin APIs can access the Admin SDK Directory API, therefore your service account needs to impersonate one of those users to access the Admin SDK Directory API. You can do this by granting the GCP IAM role <code>roles/iam.serviceAccountUser</code> to your service account, with member <code>user:&lt;impersonated_user_email&gt;</code>. This user's email must be set in the environment variable <code>GOOGLEWORKSPACE_IMPERSONATED_USER_EMAIL</code> or in the <code>impersonated_user_email</code> attribute in the provider.</p>\n<p>Another important step is to set the <code>customer_id</code>, which is provided with your Google Workspace subscription and can be found in the admin console under Account Settings.</p><pre><code>provider \"googleworkspace\" {\n credentials             = \"/Users/mscott/my-project-c633d7053aab.json\"\n customer_id             = \"A01b123xz\"\n impersonated_user_email = \"impersonated@example.com\"\n}</code></pre><p><em>This screencast demos applying a user config and seeing the changes in the Workspace account.</em></p>\n<h2><a href=\"#creating-your-first-user\">»</a><a></a>Creating Your First User</h2>\n<p>Here is an example configuration to create a user with a custom <code>birthday</code> attribute. First we define the <code>birthday</code> schema which contains a <code>DATE</code> field named <code>\"birthday\"</code>. We can then reference that schema while defining our user, Dwight Schrute. In this example, we provide Dwight an encrypted password, an email alias, some biographical and organizational information, and then recall our custom schema (<code>birthday</code>) and fill in the correct information.</p><pre><code>resource \"googleworkspace_schema\" \"birthday\" {\n  schema_name = \"birthday\"\n\n  fields {\n    field_name = \"birthday\"\n    field_type = \"DATE\"\n  }\n}\n\nresource \"googleworkspace_user\" \"dwight\" {\n  primary_email = \"dwight.schrute@example.com\"\n  password      = \"34819d7beeabb9260a5c854bc85b3e44\"\n  hash_function = \"MD5\"\n\n  name {\n    family_name = \"Schrute\"\n    given_name  = \"Dwight\"\n  }\n\n  aliases = [\"assistant_to_regional_manager@example.com\"]\n\n  emails {\n    address = \"dwight.schrute.dunder.mifflin@example.com\"\n    type    = \"work\"\n  }\n\n  addresses {\n    country        = \"USA\"\n    country_code   = \"US\"\n    locality       = \"Scranton\"\n    po_box         = \"123\"\n    postal_code    = \"18508\"\n    region         = \"PA\"\n    street_address = \"123 Dunder Mifflin Pkwy\"\n    type           = \"work\"\n  }\n\n  organizations {\n    department = \"sales\"\n    location   = \"Scranton\"\n    name       = \"Dunder Mifflin\"\n    primary    = true\n    symbol     = \"DUMI\"\n    title      = \"member\"\n    type       = \"work\"\n  }\n\n  phones {\n    type  = \"home\"\n    value = \"555-123-7890\"\n  }\n\n  phones {\n    type    = \"work\"\n    primary = true\n    value   = \"555-123-0987\"\n  }\n\n  keywords {\n    type  = \"occupation\"\n    value = \"salesperson\"\n  }\n\n  custom_schemas {\n    schema_name = googleworkspace_schema.birthday.schema_name\n\n    schema_values = {\n      \"birthday\"         = jsonencode(\"1970-01-20\")\n    }\n  }\n\n  recovery_email = \"dwightkschrute@example.com\"\n}</code></pre><h2><a href=\"#creating-your-first-group\">»</a><a></a>Creating Your First Group</h2>\n<p>When creating a new group, a simple group email is the only required attribute, however, a name, description, and email aliases can also be provided.</p><pre><code>resource \"googleworkspace_group\" \"sales\" {\n  email       = \"sales@example.com\"\n  name        = \"Sales\"\n  description = \"Sales Group\"\n\n  aliases = [\"paper-sales@example.com\", \"sales-dept@example.com\"]\n}</code></pre><h2><a href=\"#add-a-user-to-your-group\">»</a><a></a>Add a User to Your Group</h2>\n<p>To add members to a Google Workspace group, it is simple to reference a group’s group_id and a user’s primary_email, and provide the appropriate role.</p><pre><code>resource \"googleworkspace_group_member\" \"manager\" {\n  group_id = googleworkspace_group.sales.id\n  email    = googleworkspace_user.dwight.primary_email\n\n  role = \"MEMBER\"\n}</code></pre><h2><a href=\"#let-s-hear-your-feedback\">»</a><a></a>Let’s Hear Your Feedback</h2>\n<p>We would love to hear your feedback on this project. You can post bugs and feature requests for the Google Workspace provider by opening an issue <a href=\"https://github.com/hashicorp/terraform-provider-googleworkspace\">here</a>. You can also engage with us and the community on<a href=\"https://discuss.hashicorp.com/c/terraform-providers\"> HashiCorp Discuss</a>.</p>\n<p>Last but certainly not least, we’d like to thank <a href=\"https://github.com/DeviaVir\">Chase Sillevis</a> for authoring the GSuite community provider, which inspired our work on this project.</p>","author":"Megan Bang","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"ef4c42568a5c71f9521003c94d6738679c242d249c55e13a19c81e800499d17a","category":"Tech"}