{"title":"การเขียน test ทำให้การพัฒนาช้าลง ?","link":"https://www.somkiat.cc/slow-with-test/","date":1617094413000,"content":"<p><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/03/slow-test-150x150.jpeg\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/03/slow-test-1024x538.jpeg\" /></figure>\n\n\n\n<p>เพิ่งอ่านบทความเรื่อง <strong><a href=\"https://levelup.gitconnected.com/we-didnt-write-tests-because-we-wanted-to-get-our-code-out-faster-2f9de49a52d7\" target=\"_blank\">We didn’t write tests because we wanted to get our code out faster</a></strong></p>\n\n\n\n<p>กับเจอคำถามว่าในกลุ่ม <a href=\"https://www.facebook.com/groups/888843288132583/permalink/1392241561126084\" target=\"_blank\">QA &amp; Testers Thailand</a> ว่า</p>\n\n\n\n<p><strong><em>เวลาเราเขียน automate api เช่นกรณีเบอร์โทร <br />ถ้าหน้าบ้านมันดักอยู่ว่าไม่ให้ใส่เกิน 10 ตัว <br />ใน api เราจำเป็นต้องเช็คไหมคะว่าห้ามเกิน</em></strong></p>\n\n\n\n<p>เป็นสิ่งที่น่าสนใจทั้งคู่ จึงสรุปไว้หน่อย</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>คำตอบในเรื่องที่สองคือ</strong></p>\n\n\n\n<p>น่าจะกลับมาคุยกันก่อนว่า แยก frontend และ backend ออกจากกันทำไม<br />เพราะว่าถ้ามีแค่ส่วนเดียว<br />ก็ทดสอบที่เดียวไป ง่ายสุด ๆ ใช่ไหม ?<br /><br />แต่ถ้าแยกกันเป็นสองส่วนแล้ว ไม่ว่าจะด้วยเหตุผลใด ๆ ก็ตาม<br />ก่อนที่ทั้งสองจะมาทำงานด้วยกัน<br /><strong><em>ก็จำเป็นต้องทำให้มั่นใจก่อนว่า</em></strong><br />แต่ละส่วนทำงานได้ตามที่ต้องการและตกลงกันไว้<br />ไม่ว่าจะ success หรือ failure ก็ตาม</p>\n\n\n\n<p><strong>ส่วนเรื่องข้ออ้างต่าง ๆ จะกลับไปที่บทความแรก</strong></p>\n\n\n\n<p>คือเราไม่เขียน test เพราะว่า ต้องการพัฒนาให้เร็วขึ้นมันจริงหรือเปล่า ?<br />เราเขียน test เพื่อทำให้มั่นใจว่าสิ่งที่เคย work มันจะยังคง work เสมอ<br />ไม่ว่าเราจะเพิ่มหรือลบ code ใด ๆ <br />ตราบเท่าที่ requirement ยังไม่เปลี่ยน<br /><br /><strong>แต่ถ้าเรามีความมั่นใจว่า สิ่งท่ีเราเพิ่มหรือลบไปนั้น </strong><br />ไม่ส่งผลกระทบแน่นอนก็ไม่มีความจำเป็นต้องเขียน test ใช่ไหม<br />มันก็สมเหตุสมผลนะแต่ความจริงคืออะไรละ ตรงนี้น่าคิด<br /></p>\n\n\n\n<p><strong>ยิ่งเวลาผ่านไปจำนวน feature เริ่มมากขึ้น</strong><br />ความซับซ้อนสูงขึ้น<br />ความเป็นไปได้ของ bug ก็มากขึ้นตามจำนวน code</p>\n\n\n\n<p><strong>วันดีคืนดี ไม่รู้อะไรเข้าฝันอยากจะมี refactor code </strong><br />ซึ่งเป็นสิ่งที่ดี<br />คำถามคือ refactor code แล้ว มันยังทำงานได้เช่นเดิมไหม ? <br />ตรงนี้ต้องตอบด้วยความมั่นใจ <br />และแสดงให้ดูได้ด้วยจะทำเช่นใด แล้วแต่เลย</p>\n\n\n\n<p><strong><em>Always test ครับ<br />แต่จะ test แบบไหน ก็ตามใจ<br />แต่ต้อง repeat ได้<br />ได้รับ feedback ที่รวดเร็ว<br />เท่านี้ก็พอแล้ว ไม่ขออะไรมาก</em></strong></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"5d4f7270acb5ac26f0198957b6204032e0f225bbcf92022e7380eb2030fe9b9a","category":"Thai"}