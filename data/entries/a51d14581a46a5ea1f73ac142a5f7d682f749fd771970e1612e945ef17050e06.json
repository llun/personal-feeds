{"title":"Announcing Support for Amazon ECS Anywhere in the Terraform AWS Provider","link":"https://www.hashicorp.com/blog/announcing-launch-day-support-for-amazon-ecs-anywhere-terraform-aws-provider","date":1622572200000,"content":"<p>In partnership with Amazon Web Services (AWS), we are pleased to announce launch-day support for Amazon ECS Anywhere in the Terraform AWS Provider. <a href=\"https://aws.amazon.com/blogs/containers/introducing-amazon-ecs-anywhere/\">ECS Anywhere </a>is a new offering from Amazon ECS that allows users to run containerized workflows in a variety of environments.</p>\n<h2><a href=\"#how-it-works\">»</a><a></a>How It Works</h2>\n<p>Previously, ECS would use compute capacity in an AWS region, Local Zone, Wavelength Zone, or Outpost. With this launch, ECS extends its capabilities to include other compute capacity, such as customer-owned virtual machines or bare-metal servers, in on-premises environments — without requiring customers to install or operate container orchestration software.</p>\n<p>ECS Anywhere simplifies on-premises container management so that there is no need to run, update, or maintain container orchestrators on-premises. With consistent tooling and governance, you can employ the same tools and APIs for all container-based applications regardless of operating environment. By using ECS Anywhere to manage your hybrid footprint, you can containerize and run applications in on-premises environments first and easily expand to the cloud whenever you're ready.</p>\n<p>Additional information about this service can be found in <a href=\"https://aws.amazon.com/blogs/aws/getting-started-with-amazon-ecs-anywhere-now-generally-available/\">Getting Started with ECS Anywhere</a> from AWS, and the <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/Welcome.html\">ECS Anywhere documentation</a>.</p>\n<h2><a href=\"#configuring-ecs-anywhere-in-the-terraform-aws-provider\">»</a><a></a>Configuring ECS Anywhere in the Terraform AWS Provider</h2>\n<p>To get started with ECS Anywhere in the Terraform AWS provider, you will need to add an additional property, <code>EXTERNAL</code>,  to a new or existing <code>aws_ecs_task_definition</code>.</p>\n<p>In order to try out this feature, you will need:</p>\n<ul>\n<li>Terraform v0.12 or greater installed</li>\n<li>The latest version of the Terraform AWS provider</li>\n</ul>\n<p>The Terraform configuration below demonstrates how the Terraform AWS provider can be used to configure ECS Anywhere.</p><pre><code>resource \"aws_ecs_task_definition\" \"service\" {\n  container_definitions    = jsonencode(\n    [\n      {\n        cpu          = 10\n        essential    = true\n        image        = \"nginx\"\n        memory       = 512\n        name         = \"nginx\"\n        portMappings = [\n          {\n            containerPort = 80\n            hostPort      = 80\n          },\n        ]\n      },\n    ]\n  )\n family                   = \"service\"\n requires_compatibilities = [\"EXTERNAL\",]\n}</code></pre><h2><a href=\"#further-information\">»</a><a></a>Further Information</h2>\n<p>For more information on how to use this feature in Terraform, consult the <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs\">provider documentation in the Terraform Registry</a>. To report bugs or request enhancements for this feature, open an issue on the <a href=\"https://github.com/hashicorp/terraform-provider-aws\">Terraform AWS Provider repository on GitHub</a>. We would love to hear your feedback.</p>","author":"Mary Cutrali","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"a51d14581a46a5ea1f73ac142a5f7d682f749fd771970e1612e945ef17050e06","category":"Tech"}