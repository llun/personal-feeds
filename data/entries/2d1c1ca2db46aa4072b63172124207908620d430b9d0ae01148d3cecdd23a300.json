{"title":"Survey Results:  How Do You Connect with Consul?","link":"https://www.hashicorp.com/blog/survey-results-how-do-you-connect-with-consul","date":1623945600000,"content":"<p>Last month, <a href=\"https://www.hashicorp.com/blog/user-survey-how-you-connect-consul\">we asked users what they do with HashiCorp Consul</a> for their personal deployments or at work. We collected a variety of responses demonstrating that Consul provides solutions for all types of use cases. In this post, we’ll explore some of the setups and insights our users shared.</p>\n<p>With that in mind, I want to give a huge thank you to everyone who participated in our survey — we hope these stories highlight solutions that can help new users get up to speed faster. So, without further ado, let’s explore the stories you shared! Starting of course with…</p>\n<h2><a href=\"#making-a-mesh\">»</a><a></a>Making a Mesh</h2>\n<p>Unsurprisingly for us, many users are taking advantage of Consul’s robust <a href=\"https://learn.hashicorp.com/tutorials/consul/service-mesh\">service mesh</a> capabilities. A number of survey respondents said they are using a Consul service mesh for internal projects or to support their entire infrastructure. Take a look at some of the quotes:</p>\n<blockquote>\n<p>“For our internal project we are using Consul for migration of microservices on Kubernetes. I especially like ... its mesh service, in which it connects all clusters in one go and is an easy task for us to search if anything is down.” - Udbhav</p>\n</blockquote>\n<blockquote>\n<p>“We used Consul as our service discovery mesh for our microservices and it helped us to manage incoming traffic to the product.” - Ashish Kumar Das</p>\n</blockquote>\n<blockquote>\n<p>“Unifying Kubernetes services and virtual machines services in the same catalog, mesh datacenters, service discovery. We also use the KV store as a [HashiCorp] Vault backend, <a href=\"https://docs.saltproject.io/en/latest/ref/pillar/all/salt.pillar.consul_pillar.html\">Saltstack pillars</a>, and specific tools! Can't wait for 1.10 GA, Consul is the heart of our infrastructure, never down in 5 years!!!” - Alexandre Le Mao</p>\n</blockquote>\n<blockquote>\n<p>“We are using Consul mainly as Vault storage. Secondary use cases are service discovery and connecting two clusters together using mesh gateways for testing Consul Connect capabilities as service mesh.” - Robert Vojcik</p>\n</blockquote>\n<blockquote>\n<p>“I use it for simple and secure application delivery.” - Anonymous</p>\n</blockquote>\n<p>This exciting mix of uses for Consul service mesh reinforces something that we’ve seen from lots of users: The foundation of a service mesh traditionally starts with solving the <a href=\"https://www.hashicorp.com/resources/introduction-consul\">service-discovery challenge</a>. Fortunately, Consul is a trusted service discovery tool capable of discovering applications running in any environment.</p>\n<h2><a href=\"#it-all-starts-with-service-discovery\">»</a><a></a>It All Starts with Service Discovery</h2>\n<p>Aside from Consul’s KV store, the majority of responses focused on Consul’s capabilities as a service discovery and health monitoring tool. The path to Consul’s automation capabilities (service mesh or network infrastructure automation) are made possible by utilizing Consul as a centralized source of truth for application information. Don’t take our word for it though, here’s what survey respondents had to say:</p>\n<blockquote>\n<p>“We run an e-learning platform on ERPNext on Kubernetes. Each custom app is a service and Consul manages the service discovery. We also use [the] Consul key value store for storing configuration.” - Anonymous</p>\n</blockquote>\n<blockquote>\n<p>“In production. Used for its DNS control between services, and for a quick status check for our services.” - Jonathan Yu</p>\n</blockquote>\n<blockquote>\n<p>“Service discovery/traffic shaper (no Connect, just making sure traffic only goes to healthy apps)” - Jessy St. Pierre</p>\n</blockquote>\n<blockquote>\n<p>“Service discovery across apps running directly on [Amazon] EC2, in [Amazon] ECS and on Kubernetes. Some configuration distribution (live updating configuration with KV waits). Storage backend for Vault. Connect on Kubernetes-deployed apps” - Anonymous</p>\n</blockquote>\n<blockquote>\n<p>“We are using Consul for its service discovery features and the KV. With both features, we have a fully featured CMDB always up to date. We manage to bind Ansible/AWX inventory to Consul as well, which allows us to deploy [a] targeted playbook on the correct set of servers.” - Anonymous</p>\n</blockquote>\n<h2><a href=\"#consul-for-everything\">»</a><a></a>Consul For Everything</h2>\n<p>We also asked users which technologies they were using alongside Consul — and we got some great responses. Here is a word cloud representing the technologies cited by our users:</p><img src=\"https://www.datocms-assets.com/2885/1623941935-consul-survey-word-cloud.png\" /><p>Two key things emerge from this list:</p>\n<ol>\n<li>Observability is important.</li>\n<li>Consul supports multiple orchestration/runtime tools.</li>\n</ol>\n<p>These are capabilities that we’ve prioritized in Consul, and it’s great to see users implementing these features into their environments.</p>\n<h2><a href=\"#consul-across-the-stack\">»</a><a></a>Consul Across the Stack</h2>\n<p>Another common thread across survey responses was Consul’s ability to integrate with other HashiCorp tools. In the word cloud above, HashiCorp Terraform, Nomad, and Vault are all featured prominently. Many users mentioned that they are integrating Consul with Vault and Nomad for various uses.</p>\n<p>Consul was originally the primary backend for Vault and it remains a popular option among the survey respondents. In addition, Consul’s Vault integrations extend much deeper. To learn more, check out our collection of HashiCorp <a href=\"https://learn.hashicorp.com/collections/consul/vault-secure\">Learn guides for integrating Vault and Consul</a>.</p>\n<p>From a Terraform and Nomad perspective, the use cases are straightforward, but still impactful. The <a href=\"https://registry.terraform.io/providers/hashicorp/consul/latest\">Consul Terraform provider</a> makes it easy to deploy a Consul service mesh alongside your infrastructure and <a href=\"consul.io/docs/nia\">Consul-Terraform-Sync (CTS)</a> helps automate Day 2 operations for networking infrastructure. To learn more about installing and getting started with CTS, take a look at <a href=\"https://learn.hashicorp.com/collections/consul/network-infrastructure-automation\">these Learn guides</a>.</p>\n<p>Leveraging Consul with Nomad is a great approach for users who are managing containers or a mixture of containers and non-containerized applications and want to use Consul’s discovery or mesh capabilities to accelerate their application delivery lifecycle. Check out this Learn guide to see how to <a href=\"https://learn.hashicorp.com/tutorials/nomad/consul-service-mesh\">secure Nomad jobs with Consul service mesh</a>.</p>\n<p>It was a joy to learn about the many ways users are connecting with Consul and we again want to thank everyone who participated in the survey. For more information about Consul, please visit the <a href=\"https://www.consul.io/\">documentation</a>.</p>","author":"Peter McCarron","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"2d1c1ca2db46aa4072b63172124207908620d430b9d0ae01148d3cecdd23a300","category":"Tech"}