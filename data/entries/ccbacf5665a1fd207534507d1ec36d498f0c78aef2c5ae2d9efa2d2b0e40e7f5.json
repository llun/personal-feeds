{"title":"SiFive’s brand-new P550 is one of the world’s fastest RISC-V CPUs","link":"https://arstechnica.com/?p=1775200","date":1624394342000,"content":"<div>\n<figure><img src=\"https://cdn.arstechnica.net/wp-content/uploads/2021/06/sifive-families-800x450.jpeg\" /><p><a href=\"https://cdn.arstechnica.net/wp-content/uploads/2021/06/sifive-families.jpeg\">Enlarge</a> <span>/</span> SiFive's \"Essential\" family is stripped down to the minimal configurations and performance necessary for standard microcontroller duty. \"Intelligence\" adds AI/ML acceleration, and the new \"Performance\" family offers just what it says on the tin. (credit: <a href=\"https://www.sifive.com/blog/the-heart-of-sifive-is-performance-intelligence-\">SiFive</a>)</p>  </figure><div><a name=\"page-1\"></a></div>\n<p>Today, RISC-V CPU design company SiFive launched a new processor family with two core designs: P270 (a Linux-capable CPU with full support for RISC-V's vector extension 1.0 release candidate) and P550 (the highest-performing RISC-V CPU to date).</p>\n<h2>A quick RISC-V overview</h2>\n<p>For those not immediately familiar with RISC-V, it is a relatively new CPU architecture which takes advantage of Reduced Instruction Set Computer (RISC) principles. RISC-V is an open standard specifically designed to be forward-looking and evade as much legacy <a href=\"https://en.wikipedia.org/wiki/Cruft\">cruft</a> as possible. One example of this design is RISC-V's dynamic width vector instruction set, which allows developers to execute vector instructions on data of arbitrary size with maximum efficiency.</p>\n<p>In traditional processor designs, a vector instruction has a fixed width tied to the hardware register size of the processor—for example, SSE and SSE2 allow use of a Pentium III's 128-bit registers, while making full use of an i7-4770's 256-bit registers requires a completely separate instruction set (AVX2) for the same mathematical operations. Moving up to an i7-1065G7's 512-bit registers requires yet another instruction set, AVX-512—again, for the same underlying mathematical operations.</p></div><p><a href=\"https://arstechnica.com/?p=1775200#p3\">Read 13 remaining paragraphs</a> | <a href=\"https://arstechnica.com/?p=1775200&amp;comments=1\">Comments</a></p>","author":"Jim Salter","siteTitle":"Ars Technica","siteHash":"5b0ddf6e8923e49262a7894cfd77962733e43fbcc565a103b48373820b310636","entryHash":"ccbacf5665a1fd207534507d1ec36d498f0c78aef2c5ae2d9efa2d2b0e40e7f5","category":"Tech"}