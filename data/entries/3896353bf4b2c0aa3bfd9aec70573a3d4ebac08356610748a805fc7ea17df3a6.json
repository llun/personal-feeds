{"title":"จดบันทึกการทำ Load testing ด้วย Locust บน Kubernetes cluster","link":"https://www.somkiat.cc/load-testing-with-locust-on-kubernetes/","date":1618075732000,"content":"<p><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/04/locust-k8s-150x150.jpeg\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/04/locust-k8s.jpeg\" /></figure>\n\n\n\n<p>ความต้องการของการทำงานสำหรับ Load testing ของระบบงาน ด้วย <a href=\"https://locust.io/\" target=\"_blank\"><strong>Locust</strong></a><br />ซึ่งอยู่บน Kubernetes cluster เป็นดังนี้<br />ทำการ setup Locust แบบ Master-slave หรือ Manager-worker <br />เพื่อช่วยสร้าง virtual user จำนวนมากตามที่ต้องการ<br />มีขั้นตอนการเตรียมดังนี้</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>สิ่งที่ต้องการคือ สร้าง Locust แบบ Master-slave </strong></p>\n\n\n\n<p>เพื่อช่วยสร้าง virtual user จำนวนมาก ๆ<br />จากนั้นส่งผลการทดสอบจาก target system<br />กลับมายัง master node เพื่อมาแสดงผลสวย ๆ ต่อไป<br />แสดงดังภาพ</p>\n\n\n\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/04/Locust-Master-slave-.png\" /></figure>\n\n\n\n<p><strong>ขั้นตอนที่ 1 ทำการสร้าง test case หรือ task สำหรับการทดสอบ</strong></p>\n\n\n\n<p>โดยเขียนด้วยภาษา Python<br />แสดงดังตัวอย่าง</p>\n\n\n\n[gist id=\"713b6bcaa63654446d95314f0e0a34a7\" file=\"sample.py\"]\n\n\n\n<p><strong>คำอธิบาย</strong><br />ทำการทดสอบ 2 endpoint คือ</p>\n\n\n\n<ul><li>/ สำหรับ index หรือ หน้าแรก</li><li>/users สำหรับดึงข้อมูล user ทั้งหมด</li></ul>\n\n\n\n<p><strong>ขั้นตอนที่ 2 สร้าง Dockerfile สำหรับสร้าง Image ของ Locust</strong></p>\n\n\n\n<p>ทำหน้าที่ run test case จากขั้นตอนที่ 1</p>\n\n\n\n[gist id=\"713b6bcaa63654446d95314f0e0a34a7\" file=\"Dockerfile\"]\n\n\n\n<p><strong>โดยมีไฟล์ run.sh สำหรับกำหนด mode ของแต่ละ node</strong><br />หรือในแต่ละ container ว่าทำงานแบบใด</p>\n\n\n\n<ul><li>standalone</li><li>master</li><li>worker</li></ul>\n\n\n\n[gist id=\"713b6bcaa63654446d95314f0e0a34a7\" file=\"run.sh\"]\n\n\n\n<p>ทำการสร้าง Docker image ให้เรียบร้อย<br />ซึ่งสามารถสร้างผ่าน Docker, Docker compose หรือ Swarm ได้เช่นเดียวกัน<br />แต่ในครั้งนี้จะทำการ deploy บน Kubernetes cluster</p>\n\n\n\n<p><strong>ขั้นตอนที่ 3 สร้าง Manefest file สำหรับการ deploy Locust บน Kubernetes</strong></p>\n\n\n\n<p>จะประกอบไปด้วยไฟล์ต่าง ๆ ดังนี้</p>\n\n\n\n<ul><li>Deployment ของ master จำนวน 1 pod</li><li>Deployment ของ worker จำนวน 6 pod</li><li>Service สำหรับการ expose UI ของ Locust admin</li></ul>\n\n\n\n<p><strong>Deployment ของ master จำนวน 1 pod</strong></p>\n\n\n\n[gist id=\"713b6bcaa63654446d95314f0e0a34a7\" file=\"master-deploy.yml\"]\n\n\n\n<p><strong>Deployment ของ worker จำนวน 6 pod</strong></p>\n\n\n\n[gist id=\"713b6bcaa63654446d95314f0e0a34a7\" file=\"worker-deploy.yml\"]\n\n\n\n<p><strong>Service สำหรับการ expose UI ของ Locust admin</strong></p>\n\n\n\n[gist id=\"713b6bcaa63654446d95314f0e0a34a7\" file=\"master-ui-service.yml\"]\n\n\n\n<p>จากนั้นทำการ deploy บน cluster เป็นอันเรียบร้อย<br />เข้าใช้งาน Locust ผ่าน Web user interface ที่ deploy</p>\n\n\n\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/04/screenshot_0.12.1-1024x636.png\" /></figure>\n\n\n\n<p><br />ตัวอย่าง code เต็ม ๆ อยู่ที่ <a href=\"https://github.com/up1/demo-locust-k8s\" target=\"_blank\">Github:Up1</a></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"3896353bf4b2c0aa3bfd9aec70573a3d4ebac08356610748a805fc7ea17df3a6","category":"Thai"}