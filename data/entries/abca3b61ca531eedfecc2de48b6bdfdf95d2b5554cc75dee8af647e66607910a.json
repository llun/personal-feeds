{"title":"How to beat Paper Mario really fast by… playing Ocarina of Time?","link":"https://arstechnica.com/?p=1747424","date":1614966746000,"content":"<div id=\"rss-wrap\">\n\n\n\n\n\n<div><a name=\"page-1\"></a></div>\n<div class=\"video\"><div class=\"wrapper\" style=\"display:block\" type=\"text/html\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/N-JJa9AofLI?start=0&amp;wmode=transparent\" frameborder=\"0\" allowfullscreen></div><p class=\"caption\" style=\"font-size:0.8em\">Probably the only <em>Paper Mario</em> speedrun you've ever seen that includes extensive <em>Ocarina of Time</em> gameplay. </p></div>\n<p>The idea of using video games as a way to achieve some form of Arbitrary Code Execution (ACE) on classic hardware has come a long way since seven years ago, when <a href=\"https://arstechnica.com/gaming/2014/01/how-an-emulator-fueled-robot-reprogrammed-super-mario-world-on-the-fly/\">TASbot publicly reprogrammed a Super NES on the fly via <i>Super Mario World</i></a>. There are now <a href=\"http://tasvideos.org/Movies-C3050Y.html\">dozens of examples</a> of similar glitches that use nothing but controller inputs to insert new programming instructions into classic games, including <a href=\"https://arstechnica.com/gaming/2017/05/hackers-jailbreak-permanent-mods-onto-super-mario-world-save-files/\">many that can be performed by humans</a> (and not just button-mashing robots).</p>\n<p>Even given all that history, though, we’re still a bit wowed by the speedrunning community that found a way to insert new code into <i>Paper Mario</i> for the N64, leading to <a href=\"https://www.youtube.com/watch?v=N-JJa9AofLI\">a new record-setting speedrun of the game</a>. Their new method requires some extremely careful character positioning, the exploitation of “junk” memory in the N64’s RAM expansion pack and, amazingly, playing a couple of games of <i>The Legend of Zelda: Ocarina of Time</i>.</p>\n<h2>Enter the effects matrix</h2>\n<p>The story of how this incredible method was discovered goes back two months, when a Paper Mario speedrunner who goes by Morpheus <a href=\"https://twitter.com/Morpheus080/status/1347634657156857856\">stumbled on a mysterious game crash</a> in the middle of a livestreamed run. Players eventually discovered that Morpheus had accidentally triggered a situation where the game was storing too much data in the “effects matrix,” a data structure the game uses to store details of visual effects like smoke from Mario’s hammer blows.</p></div><p><a href=\"https://arstechnica.com/?p=1747424#p3\">Read 10 remaining paragraphs</a> | <a href=\"https://arstechnica.com/?p=1747424&comments=1\">Comments</a></p>","author":"Kyle Orland","siteTitle":"Ars Technica","siteHash":"5b0ddf6e8923e49262a7894cfd77962733e43fbcc565a103b48373820b310636","entryHash":"abca3b61ca531eedfecc2de48b6bdfdf95d2b5554cc75dee8af647e66607910a","category":"Tech"}