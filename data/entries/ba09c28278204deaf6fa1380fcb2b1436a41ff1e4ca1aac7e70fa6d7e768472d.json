{"title":"Announcing General Availability of the HashiCorp Terraform Cloud Operator for Kubernetes","link":"https://www.hashicorp.com/blog/announcing-general-availability-hashicorp-terraform-cloud-operator-for-kubernetes","date":1614013200000,"content":"<p>We first <a href=\"https://www.hashicorp.com/blog/creating-workspaces-with-the-hashicorp-terraform-operator-for-kubernetes\">announced this project</a> in March 2020, and since then we’ve continued to expand the possibilities of what this operator can do.  While the operator is still tailored to the idea of managing Terraform Cloud Workspaces through Kubernetes CustomResourceDefinitions (CRDs), we have taken steps to increase support for several features available via the Terraform Cloud API. Let’s take a look at the new features added since the alpha.</p>\n<blockquote>\n<p>Visit the <a href=\"https://learn.hashicorp.com/tutorials/terraform/kubernetes-operator?utm_source=WEBSITE&#x26;utm_medium=WEB_BLOG&#x26;utm_offer=ARTICLE_PAGE\">Terraform Cloud Operator for Kubernetes</a> Learn tutorial for an interactive getting started experience.</p>\n</blockquote>\n<h2><a class=\"__permalink-h\" href=\"#vcs-backed-workspaces\" aria-label=\"vcs backed workspaces permalink\">»</a><a class=\"__target-h\" id=\"vcs-backed-workspaces\" aria-hidden></a>VCS Backed Workspaces</h2>\n<p><a href=\"https://www.terraform.io/docs/cloud/vcs/index.html\">Connecting your version control system to Terraform Cloud</a> is a powerful first step to enable your GitOps workflow with Terraform and Kubernetes. With the new VCS support in the Terraform Cloud Operator, you can specify your VCS configuration when synchronizing your Workspace via your custom resource configuration. The following demonstration walks you through the installation of the operator and configuration of a Workspace custom resource that connects a VCS repository to your Terraform Cloud Workspace to enable your GitOps pattern.</p><iframe width=\"560\" height=\"315\" src=https://www.youtube.com/watch?v=h89maGMrRXY frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><p>Here's the example Workspace Custom Resource that configures the integration between the <code>demo</code> Workspace and the <code>terraform-nullresource-example</code> repository.</p><pre><code>   # Your OAuth Token ID can be found at https://app.terraform.io/app/<your org>/settings/version-control\n\napiVersion: app.terraform.io/v1alpha1\nkind: Workspace\nmetadata:\n name: demo\nspec:\n organization: demo\n secretsMountPath: \"/tmp/secrets\"\n module:\n   source: \"github.com/koikonom/terraform-nullresource-example\"\n vcs:\n\n   token_id: \"ot-<your vcs oauth token ID>\"\n   repo_identifier: \"koikonom/terraform-nullresource-example\"\n   ingress_submodules: false  \n variables:\n   - key: CONFIRM_DESTROY\n     value: \"1\"\n     sensitive: false\n     environmentVariable: true\n outputs:\n   - key: pet\n     moduleOutputName: rofl</code></pre><h2><a class=\"__permalink-h\" href=\"#terraform-cloud-agents\" aria-label=\"terraform cloud agents permalink\">»</a><a class=\"__target-h\" id=\"terraform-cloud-agents\" aria-hidden></a>Terraform Cloud Agents</h2>\n<p><a href=\"https://www.terraform.io/docs/cloud/agents/index.html\">Terraform Cloud Agents</a> allow Terraform Cloud to communicate with isolated, private, or on-premises infrastructure. By deploying lightweight agents within a specific network segment, you can establish a simple connection between your environment and Terraform Cloud which allows for provisioning operations and management. This is useful for on-premises infrastructure types such as vSphere, Nutanix, OpenStack, enterprise networking providers, and anything you might have in a protected enclave. The latest release of the Terraform Cloud operator offers the ability to configure an agent pool with your Workspace custom resource.  First, <a href=\"https://www.terraform.io/docs/cloud/agents/index.html#create-a-new-agent-pool\">create</a> your agent pool in Terraform Cloud and <a href=\"https://www.terraform.io/docs/cloud/agents/index.html#managing-agents\">register</a> your agents. Then, you can specify the <code>agentPoolID</code> in your Workspace manifest to configure your workspace.</p><img src=https://www.datocms-assets.com/2885/1613750191-tf-agent-pool-details.png alt=Agent pool details><pre><code>apiVersion: app.terraform.io/v1alpha1\nkind: Workspace\nmetadata:\n name: demo\nspec:\n organization: demo\n secretsMountPath: \"/tmp/secrets\"\n module:\n   source: \"github.com/koikonom/terraform-nullresource-example\"   \n agentPoolID: apool-<your agent pool ID>\n variables:\n   - key: CONFIRM_DESTROY\n     value: \"1\"\n     sensitive: false\n     environmentVariable: true\n outputs:\n   - key: pet\n     moduleOutputName: rofl</code></pre><p>For more examples, visit our github repository: <a href=\"https://github.com/hashicorp/terraform-helm/tree/master/example\">https://github.com/hashicorp/terraform-helm/tree/master/example</a>.</p>\n<blockquote>\n<p>Learn how to configure and use agents with the <a href=\"https://learn.hashicorp.com/tutorials/terraform/cloud-agents?utm_source=WEBSITE&#x26;utm_medium=WEB_BLOG&#x26;utm_offer=ARTICLE_PAGE\">Manage Private Environments with Terraform Cloud Agents</a> tutorial.</p>\n</blockquote>\n<h2><a class=\"__permalink-h\" href=\"#secure-outputs\" aria-label=\"secure outputs permalink\">»</a><a class=\"__target-h\" id=\"secure-outputs\" aria-hidden></a>Secure Outputs</h2>\n<p>In the 0.1.6.-alpha version released in November 2020, we migrated from the use of ConfigMaps to the use of Secrets for output storage. This change was made to ensure alignment with Kubernetes’ expectations of how potentially sensitive information should be stored. Note that if you are migrating from an older version of the operator, previously created ConfigMaps will not be automatically deleted by the operator and will require manual deletion. When the Workspace CR is installed, you will see a secret created in the namespace with the pattern <code>&#x3C;workspace-name>-outputs</code>, which contains the outputs of your Terraform Cloud run.</p>\n<h2><a class=\"__permalink-h\" href=\"#terraform-enterprise\" aria-label=\"terraform enterprise permalink\">»</a><a class=\"__target-h\" id=\"terraform-enterprise\" aria-hidden></a>Terraform Enterprise</h2>\n<p>The Terraform Cloud Operator for Kubernetes also supports Terraform Enterprise. By setting an optional <code>TF_URL</code> environment variable on the operator's <code>Deployment</code>, you can specify a Terraform Enterprise endpoint to use with your installation. The operator defaults to <code>https://app.terraform.io</code> if <code>TF_URL</code> is unset. The operator will examine the <code>terraformrc.credentials</code> key for the hostname corresponding to <code>TF_URL</code>. This behavior is consistent with <a href=\"https://github.com/hashicorp/go-tfe\">hashicorp/go-tfe</a>. Please refer to the <a href=\"https://github.com/hashicorp/terraform-helm/blob/master/values.yaml#L45\">values.yaml</a> file for more information and options.</p>\n<h2><a class=\"__permalink-h\" href=\"#installation-via-helm\" aria-label=\"installation via helm permalink\">»</a><a class=\"__target-h\" id=\"installation-via-helm\" aria-hidden></a>Installation via Helm</h2>\n<p>With the general availability status of the Terraform Cloud Operator, the <code>--devel</code> switch is no longer necessary to install the operator using Helm. Assuming you have the relevant inputs already available in your cluster, you may now install the operator directly from our <a href=\"https://helm.releases.hashicorp.com/\">Helm chart repository</a> with the commands:</p><pre><code>$ helm repo add hashicorp https://helm.releases.hashicorp.com\n$ helm search repo hashicorp/terraform\n$ helm install --namespace ${RELEASE_NAMESPACE} hashicorp/terraform --generate-name</code></pre><p>More information about the inputs required and the Helm chart for the Terraform Cloud Operator is available on the <a href=\"https://github.com/hashicorp/terraform-helm\">hashicorp/terraform-helm</a> GitHub repository.</p>\n<h2><a class=\"__permalink-h\" href=\"#upgrade-to-operator-sdk-major-version-1-x\" aria-label=\"upgrade to operator sdk major version 1 x permalink\">»</a><a class=\"__target-h\" id=\"upgrade-to-operator-sdk-major-version-1-x\" aria-hidden></a>Upgrade to operator-sdk Major Version 1.x</h2>\n<p>While this change has minimal visible impact to the Terraform Cloud Operator user experience, it is important to highlight as a major step towards the general availability of the TFC Operator. In August 2020, the Operator SDK team <a href=\"https://www.openshift.com/blog/operator-sdk-reaches-v1.0\">announced</a> the official release of the 1.0 version of the Operator SDK. The 1.0 release brought several breaking changes and enhancements in order to establish stability and maturity of the SDK. They announced the eventual goal of merging with the Kubebuilder project and becoming a single operator development experience.</p>\n<p>Adopting the SDK version 1.0 involved a significant rewrite and reorganization of the Terraform Cloud Operator to align with the Kubebuilder project layout. The operator-sdk upgrade was the final step in bringing the Terraform Cloud Operator to general availability and is now complete, setting the TFC Operator on firmer footing for development in the future.</p>\n<p>We would love to hear your feedback on these updates! You can post bugs and feature requests for the Terraform Cloud Operator for Kubernetes by opening an issue at <a href=\"https://github.com/hashicorp/terraform-k8s\">hashicorp/terraform-k8s</a>. You can also engage with us and the community on <a href=\"https://discuss.hashicorp.com/\">HashiCorp Discuss</a> and in <a href=\"https://kubernetes.slack.com/messages/CJY6ATQH4\">#terraform-providers</a> on the Kubernetes Slack (<a href=\"http://slack.k8s.io/\">Sign up here</a>).</p>\n<p>To discover more about managing Kubernetes with Terraform, review the <a href=\"https://learn.hashicorp.com/collections/terraform/kubernetes\">guides</a> on HashiCorp Learn.</p>","author":"Phil Sautter","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"ba09c28278204deaf6fa1380fcb2b1436a41ff1e4ca1aac7e70fa6d7e768472d","category":"Tech"}