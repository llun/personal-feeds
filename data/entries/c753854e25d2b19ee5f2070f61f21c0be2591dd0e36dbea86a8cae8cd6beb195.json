{"title":"ลองเขียน Lua script ใน Redis เพื่อแก้ไขปัญหา","link":"https://www.somkiat.cc/use-lua-script-in-redis/","date":1625395660000,"content":"<p><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/07/redis-lua-150x150.jpeg\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/07/redis-lua.jpeg\" /></figure>\n\n\n\n<p>ปัญหาที่พบเจอ หรือ use case ที่ต้องทำในระบบงาน เป็นดังนี้<br />ต้องการข้อมูลของ Top 10 user ที่ทำการสั่งซื้อสินค้ามากที่สุด<br />โดยการทำงานปกติมีขั้นตอนดังนี้</p>\n\n\n\n<ul><li>ทำการเพิ่มข้อมูลการสั่งซื้อของผู้ใช้งาน</li><li>ทำการนับจำนวน order ของผู้ใช้งานแต่ละคนไปเรื่อย ๆ โดยใน counter</li><li>ทำการดึงข้อมูลผู้ใช้งานที่สั่งมากที่สุด 10 คน (Top 10 และ sorting)</li></ul>\n\n\n\n<span></span>\n\n\n\n<p><strong>จากขั้นตอนการทำงานดังกล่าว</strong><br />เมื่อไปดูระบบงานท่ีสร้างขึ้นมา<br />พบว่ามีการใช้งาน RDBMS ดังนี้</p>\n\n\n\n[gist id=\"8d1225c2e1d6036d1243804f5261dce6\" file=\"1.sql\"]\n\n\n\n<p><strong>ดูเหมือนว่าจะปกติ แต่พบว่ามีปัญหาเมื่อจำนวนคนใช้งานมากขึ้น</strong></p>\n\n\n\n<p>ต้องดึงข้อมูลมากขึ้นdatabase ถูกใช้งานมากขึ้น<br />ดังนั้นจึงลองหาวิธีอื่น ๆ มาแก้ไขหน่อย<br />หนึ่งในวิธีที่ชอบใช้คือ <strong><a href=\"https://redis.io/\" target=\"_blank\">Redis</a></strong> มาเก็บข้อมูล</p>\n\n\n\n<p><strong>แนวคิดในการใช้งานคือ</strong></p>\n\n\n\n<p>ทุกครั้งที่มีการเพิ่ม order เข้ามาของแต่ละ user<br />ต้องทำการเพิ่มจำนวนการสั่งซื้อของ user ด้วยเสมอ<br />นั่นคือ 2 operation เกิดขึ้นด้วยการเรียก Redis ครั้งเดียว<br />เพราะว่า ไม่ต้องการส่ง command มายัง redis 2 ครั้ง<br />จึงคิดว่า เขียน <strong><a href=\"https://redislabs.com/ebook/part-3-next-steps/chapter-11-scripting-redis-with-lua/\" target=\"_blank\">Lua script ไปใน Redis</a></strong> กันไปเลย<br />จะช่วยให้การทำงานง่ายขึ้นมา</p>\n\n\n\n<p><strong><em>โดยสามารถ Run หรือ เก็บ Lua script ใน Redis ได้เลย<br />แต่การเก็บไว้ใน Redis จะมี performance ดีกว่า</em></strong></p>\n\n\n\n<p><strong>ตัวอย่างการใช้งานเป็นดังนี้</strong></p>\n\n\n\n<p>Data structure ที่ใช้ใน use case นี้คือ <strong><a href=\"https://redis.io/commands#sorted_set\" target=\"_blank\">Sorted Set</a></strong><br />เพื่อเก็บข้อมูลที่ไม่ซ้ำกัน รวมทั้งทำการเรียงลำดับจากมากไปน้อยให้เลยโดยที่ command ที่ใช้คือ</p>\n\n\n\n<ul><li>ZADD สำหรับเพิ่มข้อมูล</li><li>ZRANGE สำหรับดึงข้อมูล</li><li>เมื่อเพิ่มข้อมูลก็ทำการ INCR เพื่อนับจำนวนไปเลย</li></ul>\n\n\n\n<p>เขียน Lua script ง่าย ๆ ได้ดังนี้</p>\n\n\n\n[gist id=\"8d1225c2e1d6036d1243804f5261dce6\" file=\"counter.lua\"]\n\n\n\n<p><strong>คำอธิบาย</strong></p>\n\n\n\n<ul><li>ทำการส่ง 2 มา 2 key ประกอบไปด้วย ข้อมูลของ order และ counter ของแต่ละ user</li><li>ถ้าเพิ่ม order ใหม่เข้ามา จะทำการเพิ่มข้อมูลด้วย ZADD และเพิ่มข้อมูลจำนวน order ด้วย INCR</li></ul>\n\n\n\n<p><strong>ลองใช้งานผ่าน docker นิดหน่อย</strong></p>\n\n\n\n[gist id=\"8d1225c2e1d6036d1243804f5261dce6\" file=\"1.txt\"]\n\n\n\n<p>เพียงเท่านี้ก็สามารถจัดการปัญหาด้วย Redis ได้แล้ว<br />ได้ลองเขียน Lua script เพิ่มด้วย สนุกดี</p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"c753854e25d2b19ee5f2070f61f21c0be2591dd0e36dbea86a8cae8cd6beb195","category":"Thai"}