{"title":"Happy 10th Birthday – AWS Identity and Access Management","link":"https://aws.amazon.com/blogs/aws/happy-10th-birthday-aws-identity-and-access-management/","date":1620059763000,"content":"<p><a href=\"https://aws.amazon.com/s3/\">Amazon S3</a> turned 15 <a href=\"https://aws.amazon.com/blogs/aws/amazon-s3s-15th-birthday-it-is-still-day-1-after-5475-days-100-trillion-objects/\">earlier this year</a>, and <a href=\"https://aws.amazon.com/blogs/aws/amazon-s3s-15th-birthday-it-is-still-day-1-after-5475-days-100-trillion-objects/\">Amazon EC2</a> will do the same in a couple of months. Today we are celebrating the tenth birthday of <a href=\"https://aws.amazon.com/iam/\">AWS Identity and Access Management (IAM)</a>.</p> \n<p><span><strong>The First Decade</strong></span><br /> Let’s take a walk through the last decade and revisit some of the most significant IAM launches:</p> \n<p><img src=\"https://media.amazonwebservices.com/blog/2021/iam_tree_2.png\" /><a href=\"https://aws.amazon.com/blogs/aws/iam-identity-access-management/\"><strong>May 2011</strong></a> – We launched IAM, with the ability to create users, groups of users, and to attach policy documents to either one, with support for fifteen AWS services. The AWS Policy Generator could be used to build policies from scratch, and there was also a modest collection of predefined policy templates. This launch set the standard for IAM, with fine-grained permissions for <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html\">actions</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_resource.html\">resources</a>, and the use of <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html\">conditions</a> to control when a policy is in effect. This model has scaled along with AWS, and remains central to IAM today.</p> \n<p><a href=\"https://aws.amazon.com/blogs/aws/aws-identity-and-access-management-now-with-identity-federation/\"><strong>August 2011</strong></a> – We introduced the ability for you to use existing identities by federating into your AWS Account, including support for short-term temporary AWS credentials.</p> \n<p><a href=\"https://aws.amazon.com/blogs/aws/iam-roles-for-ec2-instances-simplified-secure-access-to-aws-service-apis-from-ec2/\"><strong>June 2012</strong></a> – With the introduction of IAM Roles for EC2 instances, we made it easier for code running on an EC2 instance to make calls to AWS services.</p> \n<p><a href=\"https://aws.amazon.com/blogs/aws/new-managed-policies-for-aws-identity-access-management/\"><strong>February 2015</strong> </a>– We launched Managed Policies, and simultaneously turned the existing IAM policies into first-class objects that could be created, named, and used for multiple IAM users, groups, or roles.</p> \n<p><img src=\"https://media.amazonwebservices.com/blog/2021/iam_orgs_2.png\" /><a href=\"https://aws.amazon.com/blogs/aws/aws-organizations-policy-based-management-for-multiple-aws-accounts/\"><strong>February 2017</strong></a> – We launched <a href=\"https://aws.amazon.com/organizations/\">AWS Organizations</a>, and gave you the ability to to implement policy-based management that spanned multiple AWS accounts, grouped into a hierarchy of Organizational Units. This launch also marked the debut of Service Control Policies (SCPs) that gave you the power to place guard rails around the level of access allowed within the accounts of an Organization.</p> \n<p><a href=\"https://aws.amazon.com/blogs/security/introducing-an-easier-way-to-delegate-permissions-to-aws-services-service-linked-roles/\"><strong>April 2017</strong></a> – Building on the IAM Roles for EC2 Instances, we introduced service-linked roles. This gave you the power to delegate permissions to AWS services, and made it easier for you to work with AWS services that needed to call other AWS services on your behalf.</p> \n<p><a href=\"https://aws.amazon.com/blogs/security/introducing-aws-single-sign-on/\"><strong>December 2017</strong></a> – We introduced AWS Single Sign-On to make it easier for you to centrally manage access to AWS accounts and your business applications. SSO is built on top of IAM and takes advantage of <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html\">roles</a>, <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html\">temporary credentials</a>, and other foundational IAM features.</p> \n<p><a href=\"https://aws.amazon.com/blogs/aws/new-for-identity-federation-use-employee-attributes-for-access-control-in-aws/\"><strong>November 2018</strong></a> – We introduced <a href=\"https://aws.amazon.com/blogs/aws/new-for-identity-federation-use-employee-attributes-for-access-control-in-aws/\">Attribute-Based Access Control</a> (ABAC) as a complement to the original Role-Based Access Control to allow you to use various types of user, resource, and environment attributes to drive policy &amp; permission decisions. This launch allowed you to tag IAM users and roles, which allowed you to match identity attributes and resource attributes in your policies. After this launch, we followed up with support for the use of ABAC in conjunction with <a href=\"https://aws.amazon.com/blogs/aws/new-attributes-based-access-control-with-aws-single-sign-on/\">AWS SSO</a> and <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/attributes-for-access-control.html\">Cognito</a>.</p> \n<p><img src=\"https://media.amazonwebservices.com/blog/2021/iam_aa_1.png\" /><a href=\"https://aws.amazon.com/blogs/aws/identify-unintended-resource-access-with-aws-identity-and-access-management-iam-access-analyzer/\"><strong>December 2019</strong></a> – We introduced IAM Access Analyzer to analyze your policies and determine which resources can be accessed publicly or from other accounts.</p> \n<p><a href=\"https://aws.amazon.com/blogs/aws/iam-access-analyzer-update-policy-validation/\"><strong>March 2021</strong></a> – We added policy validation (over 100 policy checks) and actionable recommendations to IAM Access Analyzer in order to help you to construct IAM policies and SCPs that take advantage of time-tested AWS best practices.</p> \n<p><a href=\"https://aws.amazon.com/blogs/security/iam-access-analyzer-makes-it-easier-to-implement-least-privilege-permissions-by-generating-iam-policies-based-on-access-activity/\"><strong>April 2021</strong></a> – We made it possible for you to generate least-privilege IAM policy templates based on access activity.</p> \n<p><span><strong>Then and Now<br /> </strong></span>In the early days, a typical customer might use IAM to control access to a handful of S3 buckets, EC2 instances, and SQS queues, all in a single AWS account. These days, some of our customers use IAM to control access to billions of objects that span multiple AWS accounts!</p> \n<p>Because every call to an AWS API must call upon IAM to check permissions, the IAM team has focused on availability and scalability from the get-go. Back in 2011 the “can the caller do this?” function handled a couple of thousand requests per second. Today, as new services continue to appear and the AWS customer base continues to climb, this function now handles more than 400 million API calls per second worldwide.</p> \n<p>As you can see from my summary, IAM has come quite a long way from its simple yet powerful beginnings just a decade ago. While much of what was true a decade ago remains true today, I would like to call your attention to a few best practices that have evolved over time.</p> \n<p><strong>Multiple Accounts</strong> – Originally, customers generally used a single AWS account and multiple users. Today, in order to accommodate multiple business units and workloads, we recommend the use of <a href=\"https://aws.amazon.com/organizations/\">AWS Organizations</a> and multiple accounts. Even if your AWS usage is relatively simple and straightforward at first, your usage is likely to grow in scale and complexity, and it is always good to plan for this up front. To learn more, read <a href=\"https://aws.amazon.com/organizations/getting-started/best-practices/\">Establishing Your Best Practice AWS Environment</a>.</p> \n<p><strong>Users &amp; SSO</strong> – In a related vein, we recommend that you use AWS SSO to create and manage users centrally, and then grant them access to one or more AWS accounts. To learn more, read the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\">AWS Single Sign-On User Guide</a>.</p> \n<p><span><strong>Happy Birthday, IAM</strong></span><br /> In line with our well-known penchant for Customer Obsession, your feedback is always welcome! What new IAM features and capabilities would you like to see in the decade to come? Leave us a comment and I will make sure that the team sees it.</p> \n<p>And with that, happy 10th birthday, IAM!</p> \n<p>— <a href=\"https://twitter.com/jeffbarr\">Jeff</a>;</p> \n<p> </p>","author":"Jeff Barr","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"013e153bfa9dfb53264e49d16e9a2d1f356c53b46eece0113ce69ee9c8431446","category":"Tech"}