{"title":"AWS CloudShell – Command-Line Access to AWS Resources","link":"https://aws.amazon.com/blogs/aws/aws-cloudshell-command-line-access-to-aws-resources/","date":1608049527000,"content":"<p>No matter how much automation you have built, no matter how great you are at practicing <a href=\"https://en.wikipedia.org/wiki/Infrastructure_as_code\">Infrastructure as Code</a> (IAC), and no matter how successfully you have transitioned from <a href=\"http://cloudscaling.com/blog/cloud-computing/the-history-of-pets-vs-cattle/\" target=\"_blank\" rel=\"noopener noreferrer\">pets to cattle</a>, you sometimes need to interact with your AWS resources at the command line. You might need to check or adjust a configuration file, make a quick fix to a production environment, or even experiment with some new AWS services or features.</p> \n<p>Some of our customers feel most at home when working from within a web browser and have yet to set up or customize their own command-line interface (CLI). They tell us that they don’t want to deal with client applications, public keys, AWS credentials, tooling, and so forth. While none of these steps are difficult or overly time-consuming, they do add complexity and friction and we always like to help you to avoid both.</p> \n<p><span style=\"text-decoration: underline\"><strong>Introducing <span title=\"\">AWS CloudShell</span></strong></span><br /> Today we are launching <a href=\"https://aws.amazon.com/cloudshell/\" title=\"\">AWS CloudShell</a>, with the goal of making the process of getting to an AWS-enabled shell prompt simple and secure, with as little friction as possible. Every shell environment that you run with <span title=\"\">CloudShell</span> has the <a href=\"https://aws.amazon.com/cli/\" title=\"\">AWS Command Line Interface (CLI)</a> (v2) installed and configured so you can run <a href=\"https://docs.aws.amazon.com/cli/latest/reference/\"><code>aws</code> commands</a> fresh out of the box. The environments also include the Python and Node runtimes, with many more to come in the future.</p> \n<p>To get started, I simply click the <span title=\"\">CloudShell</span> icon in the <a href=\"https://console.aws.amazon.com\" title=\"\">AWS Management Console</a>:</p> \n<p><img class=\"aligncenter size-medium\" src=\"https://media.amazonwebservices.com/blog/2020/cs_icon_1.png\" width=\"489\" height=\"179\" /></p> \n<p>My shell sets itself up in a matter of seconds and I can issue my first <code>aws</code> command immediately:</p> \n<p><img class=\"aligncenter size-medium\" src=\"https://media.amazonwebservices.com/blog/2020/cs_open_3.png\" width=\"902\" height=\"587\" /></p> \n<p>The shell environment is based on <a href=\"https://aws.amazon.com/amazon-linux-2/\">Amazon Linux 2</a>. I can store up to 1 GB of files per region in my home directory and they’ll be available each time I open a shell in the region. This includes shell configuration files such as <code>.bashrc</code> and shell history files.</p> \n<p>I can access the shell via <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/iam-auth-access.html\">SSO</a> or as any IAM principal that can login to the <a href=\"https://console.aws.amazon.com\" title=\"\">AWS Management Console</a>, including federated roles. In order to access <span title=\"\">CloudShell</span>, the <strong>AWSCloudShellFullAccess</strong> policy must be in effect. The shell runs as a normal (non-privileged) user, but I can <code>sudo</code> and install packages if necessary.</p> \n<p>Here are a couple of features that you should know about:</p> \n<p><strong>Themes &amp; Font Sizes</strong> – You can switch between light and dark color themes, and choose any one of five font sizes:</p> \n<p><img class=\"aligncenter size-medium\" src=\"https://media.amazonwebservices.com/blog/2020/cs_config_3.png\" width=\"800\" height=\"718\" /></p> \n<p><strong>Tabs and Sessions</strong> – You can have multiple sessions open within the same region, and you can control the tabbing behavior, with options to split horizontally and vertically:</p> \n<p><img class=\"aligncenter size-medium\" src=\"https://media.amazonwebservices.com/blog/2020/cs_tabs_3.png\" width=\"428\" height=\"415\" /></p> \n<p>You can also download files from the shell environment to your desktop, and upload them from your desktop to the shell.</p> \n<p><span style=\"text-decoration: underline\"><strong>Things to Know</strong></span><br /> Here are a couple of important things to keep in mind when you are evaluating <span title=\"\">CloudShell</span>:</p> \n<p><strong>Timeouts &amp; Persistence</strong> – Each <span title=\"\">CloudShell</span> session will timeout after 20 minutes or so of inactivity, and can be reestablished by refreshing the window:</p> \n<p><img class=\"aligncenter size-medium\" src=\"https://media.amazonwebservices.com/blog/2020/cs_refresh_1.png\" width=\"500\" height=\"309\" /></p> \n<p><strong>Regions</strong> – <span title=\"\">CloudShell</span> is available today in the <span title=\"\">US East (N. Virginia)</span>, <span title=\"\">US East (Ohio)</span>, <span title=\"\">US West (Oregon)</span>, <span title=\"\">Europe (Ireland)</span>, and <span title=\"\">Asia Pacific (Tokyo)</span> Regions, with the remaining regions on the near-term roadmap.</p> \n<p><strong>Persistent Storage – </strong>Files stored within $HOME persist between invocations of <span title=\"\">CloudShell</span> with a limit of 1 GB per region; all other storage is ephemeral. This means that any software that is installed outside of $HOME will not persist, and that no matter what you change (or break), you can always begin anew with a fresh CloudShell environment.</p> \n<p><strong>Network Access</strong> – Sessions can make outbound connections to the Internet, but do not allow any type of inbound connections. Sessions cannot currently connect to resources inside of private VPC subnets, but that’s also on the near-term roadmap.</p> \n<p><strong>Runtimes</strong> – In addition to the Python and Node runtimes, <a href=\"https://www.gnu.org/software/bash/\">Bash</a>, <a href=\"https://en.wikipedia.org/wiki/PowerShell\">PowerShell</a>, <a href=\"https://stedolan.github.io/jq/\">jq</a>, <a href=\"https://github.com/cli/cli\">git</a>, the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/ecs/index.html\">ECS CLI</a>, the <a href=\"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-command-reference.html\">SAM CLI</a>, <a href=\"https://en.wikipedia.org/wiki/Npm_(software)\">npm</a>, and <a href=\"https://pypi.org/project/pip/\">pip</a> already installed and ready to use.</p> \n<p><strong>Pricing</strong> – You can use up to 10 concurrent shells in each region at no charge. You only pay for other AWS resources you use with CloudShell to create and run your applications.</p> \n<p><span style=\"text-decoration: underline\"><strong>Try it Out</strong></span><br /> <a href=\"https://aws.amazon.com/cloudshell/\" title=\"\">AWS CloudShell</a> is available now and you can start using it today. Launch one and give it a try, and let us know what you think!</p> \n<p>— <a href=\"https://twitter.com/jeffbarr\">Jeff</a>;</p>","author":"Jeff Barr","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"efb05837d8f2abf4f3d34eb427bcdaa4917adbcee855bf4d31264ae90b27292c","category":"Tech"}