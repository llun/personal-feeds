{"title":"When the Levee Breaks: Protecting Vault Against Advanced Adversaries and Internal Threats","link":"https://www.hashicorp.com/blog/when-levee-breaks-protecting-vault-against-advanced-adversaries-internal-threats","date":1610470800000,"content":"<p>In an ideal world HashiCorp Vault is neither the first nor last line of defense against an adversary. Most organizations have multiple layers of security, starting at the perimeter and continuing throughout their infrastructure to establish <a href=\"https://en.wikipedia.org/wiki/Defense_in_depth_(computing)\">defense in depth</a>. But we’ve built and architected Vault to stand against adversaries that have successfully infiltrated that perimeter.</p>\n<p>This characteristic of Vault has become incredibly important with the rise of insider threats and supply chain attacks. Recent campaigns like <a href=\"https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\">UNC2452</a> and <a href=\"https://securelist.com/operation-shadowhammer-a-high-profile-supply-chain-attack/90380/\">ShadowHammer</a> have led to some of the largest data breaches in history, resulting in advanced adversaries having prolonged and undetected access to extremely sensitive systems across the U.S. public and private sector.</p>\n<p>This is not the first time that Vault and Vault Enterprise have operated in environments subject to a data breach. At my <a href=\"https://www.hashicorp.com/resources/defense-against-the-dark-arts-building-security-through-adversarial-modeling\">HashiConf 2020 talk on Adversarial Modeling</a> I highlighted that we are aware of situations where Vault storage backends were exfiltrated and successfully resisted attack against cryptanalysis.</p>\n<p>Data encrypted by Vault has been able to stand up to independent attack because of the design of its cryptographic barrier and its encryption at rest — one that uses industry-vetted cryptography and provides options for users to secure their infrastructure pursuant to their threat model.</p>\n<h2><a class=\"__permalink-h\" href=\"#the-cryptographic-barrier-and-unsealing-protecting-data-at-rest\" aria-label=\"the cryptographic barrier and unsealing protecting data at rest permalink\">»</a><a class=\"__target-h\" id=\"the-cryptographic-barrier-and-unsealing-protecting-data-at-rest\" aria-hidden></a>The Cryptographic Barrier and Unsealing: Protecting Data At Rest</h2><img src=https://www.datocms-assets.com/2885/1610469486-vault-security-diagram.png alt=Vault security diagram><p>Vault and Vault Enterprise protect their data independent of their host storage system within a structure known as the <strong>Cryptographic Barrier</strong> (AKA the “<strong>crypto barrier</strong>”). This is done for two reasons: to allow Vault operators to not be “locked in” to a particular storage or compute infrastructure, and to ultimately ensure that an adversary compromising the storage infrastructure of Vault does not yield access to Vault’s secrets or its sensitive configuration data.</p>\n<p>Put another way: if you steal all of Vault’s data, an independent layer of cryptography that is neither controlled nor operated by the storage system Vault “parks” its data on protects this data even after successful breach and exfiltration of Vault’s storage backend.</p>\n<h2><a class=\"__permalink-h\" href=\"#no-keys-to-the-kingdom-unsealing-and-secure-key-management\" aria-label=\"no keys to the kingdom unsealing and secure key management permalink\">»</a><a class=\"__target-h\" id=\"no-keys-to-the-kingdom-unsealing-and-secure-key-management\" aria-hidden></a>No Keys to the Kingdom: Unsealing and Secure Key Management</h2>\n<p>In order to start a Vault server and access the data encrypted at rest, a process known as <strong>unsealing</strong> must occur. Unsealing can either take two forms:</p>\n<ul>\n<li>\n<p><strong>Manual Unsealing</strong>: Using <a href=\"https://en.wikipedia.org/wiki/Shamir%27s_Secret_Sharing\">Shamir’s Key Sharing Algorithm</a>, an operator assembles a quorum of key shards that are used to generate the key to decrypt data stored behind the cryptographic barrier.</p>\n</li>\n<li>\n<p><strong>Auto Unsealing</strong>: Utilizing a trusted external system, such as an HSM (Hardware Security Module) or a cloud KMS (Key Management System), to store material used to generate the key to decrypt data stored behind the cryptographic barrier.</p>\n</li>\n</ul><img src=https://www.datocms-assets.com/2885/1610469502-vault-key-diagram.png alt=Vault key diagram><p>Regardless of the unsealing mechanism, Vault is designed to specifically complicate efforts for an adversary to steal key material to circumvent cryptography.</p>\n<p>Neither approach directly stores the actual encryption key for the data, instead storing material used to generate the encryption keys to access data at rest. This ensures that even if a well-resourced adversary breaches an auto unseal system that they cannot directly steal the keys to decrypt the crypto barrier outside of the unseal process.</p>\n<p>Vault goes one step further in ensuring that Vault users and operators never interact with keys used to protect their secrets. The Vault server completely manages the process of retrieving keys from encrypted storage, instead gatekeeping access to those secrets purely in the access control list (ACL) permissions in Vault — as well as Sentinel policies for Vault Enterprise users — for the verified entity attempting to access said secrets.</p>\n<p>While this simplifies the process of using Vault and Vault Enterprise for users, it also minimizes the possibility of a privilege escalation or key exfiltration attack. An adversary who has breached a user’s infrastructure cannot steal a user’s key material and use that to attack encrypted Vault data at rest.</p>\n<p>Beyond secure management of key material, Vault’s infrastructure is designed to protect and encourage best practices for managing secure access to secrets. This includes:</p>\n<ul>\n<li>\n<p><strong>Multilevel Security (MLS), Role-Based Access Control (RBAC), and Attribute-Based Access Control (ABAC)</strong>: Vault’s ACL systems and Vault Enterprise features like Sentinel allow for operators to instrument ABAC, RBAC, and Multilevel Security. Both have no access to key material for protecting secrets at rest, and are default-deny for privileged access to secrets.</p>\n</li>\n<li>\n<p><strong>Audit Logging</strong>: Extensive audit logging exists within Vault to track all requests and responses. Vault supports a number of audit log formats and integrations, allowing for security teams to surface and correlate security events to better understand how potentially anomalous behavior could highlight potential inside threat activity.</p>\n</li>\n<li>\n<p><strong>Dynamic Credentials:</strong> Secrets engines like the cloud secret engines (AWS Secrets Engine, Azure Secrets Engine, GCP Secrets Engines) and the database secret engine allow for Vault to create short-lived, ephemeral credentials for users or applications. This ensures that even if these credentials are accidentally leaked, eavesdropped, or stolen that they cannot be used to gain pervasive access to the victim’s infrastructure.</p>\n</li>\n<li>\n<p><strong>Trust Independent of the Network:</strong> Vault does not rely on its network to establish trust or privacy, requiring independent TLS for communication with a client and AuthN/AuthZ of the client via a configured Auth Method and the corresponding client’s ACL privileges via their Vault entity.</p>\n</li>\n<li>\n<p><strong>Zero Trust Security.</strong> Vault is implemented with the assumption of untrusted networks, also known as the zero trust principle. Explicit requirements for client authentication/authorization and short-lived, ephemeral credentials work together to make lateral movement and persistent access significantly more challenging while providing a rich forensic audit trail for detection and response.</p>\n</li>\n</ul>\n<p>Vault and Vault Enterprise simplify key management for protecting data at rest to protect against advanced adversaries who have penetrated perimeter security. This ensures that an adversary who wants to steal Vault data cannot “go around” the encryption. They need to go headfirst into Vault’s crypto barrier and breach it through mathematic code breaking/cryptanalysis. This is no simple task.</p>\n<h2><a class=\"__permalink-h\" href=\"#resisting-mathematic-cryptanalysis\" aria-label=\"resisting mathematic cryptanalysis permalink\">»</a><a class=\"__target-h\" id=\"resisting-mathematic-cryptanalysis\" aria-hidden></a>Resisting Mathematic Cryptanalysis</h2>\n<p>The ciphers in Vault are chosen specifically because they have been shown to resist cryptanalysis against very well-resourced, skilled adversaries, including those armed with supercomputers and near-term quantum computers.</p>\n<p>Data encrypted within the barrier is protected with the <a href=\"https://golang.org/pkg/crypto/aes/\">Go implementation</a> of AES-256 GCM (Galois Counter Mode). AES-256 GCM was chosen because it was a performant cipher sufficient for protecting extremely sensitive information, <a href=\"https://csrc.nist.gov/projects/cryptographic-standards-and-guidelines/archived-crypto-projects/aes-development\">including data classified TOP SECRET</a> by the U.S. Government and many NATO nations.</p>\n<p>AES-256 GCM remains computationally intractable against attacks to guess its keys and a standard across the private sector and Western military/national intelligence environments for its resistance to cryptanalysis from supercomputers. It also remains secure against known quantum cryptanalysis attacks utilizing techniques powered by <a href=\"https://en.wikipedia.org/wiki/Grover%27s_algorithm\">Grover’s Algorithm</a>.</p>\n<p>Selecting ciphers that are secure against known quantum cryptanalysis has been an effort from the Vault team since the very beginning of Vault and Vault Enterprise. We’ve detailed some of these efforts in <a href=\"https://www.hashicorp.com/blog/quantum-security-and-cryptography-in-hashicorp-vault\">previous blog posts</a>.</p>\n<p>Vault Enterprise goes two steps further, allowing operators to further supplement Vault’s crypto barrier with additional crypto from an external crypto module via <a href=\"https://www.vaultproject.io/docs/enterprise/sealwrap\">Seal Wrap</a> or supplement Vault’s system random number generator with entropy from an external hardware True Random Number Generator via <a href=\"https://www.vaultproject.io/docs/enterprise/entropy-augmentation\">Entropy Augmentation</a>.</p>\n<p>These features allow Vault to further protect its core cryptography and are often used to satisfy compliance requirements for deploying Vault in certain high-security environments. But all versions of Vault utilize cryptography selected to stand up to adversaries wielding nation-state-level expertise and resources.</p>\n<p>Whether we’re protecting against classical cryptanalysis or quantum cryptanalysis the goal is the same: we design all versions of Vault to withstand codebreaking attacks even if an adversary has supercomputers and long-term access to a copy of Vault’s encrypted storage backend.</p>\n<h2><a class=\"__permalink-h\" href=\"#security-in-development\" aria-label=\"security in development permalink\">»</a><a class=\"__target-h\" id=\"security-in-development\" aria-hidden></a>Security in Development</h2>\n<p>Beyond implementing secure architecture, the Vault development team and HashiCorp’s security organization have developed a number of additional controls to protect against an adversary’s attempt to weaken or circumvent the protections built into Vault.</p>\n<p>These include the following:</p>\n<ul>\n<li>\n<p><strong>Safe Coding Practices:</strong> Vault takes care to isolate code that handles key material and cryptography as much as possible, and all code changes to Vault are subject to stringent code review and testing.</p>\n</li>\n<li>\n<p><strong>Internal Security:</strong> The Vault team and HashiCorp as a whole are subject to continuous internal security checks and analysis. This includes collaboration with our application security team, proactive penetration testing from our internal Red Team, auditing of the systems used for Vault’s development, and much more.</p>\n</li>\n<li>\n<p><strong>External Audit and Compliance:</strong> Vault and the HashiCorp engineering infrastructure as a whole are continuously subject to external evaluation. Vault is subject to regular external audits that cover code reviews as well as cryptanalytic analysis, and HashiCorp has achieved <a href=\"https://www.hashicorp.com/blog/hashicorp-achieves-soc-2-type-i-compliance\">SOC 2 Type 2 audit as well as ISO 27001 compliance</a>.</p>\n</li>\n</ul>\n<p>One of the most important aspects of secure development in Vault is the community. Vault’s cryptographic libraries and core security are all open source, ensuring that there is a community in the tens of thousands who regularly review Vault’s security foundations. To ensure that the community’s findings translate into continuously improving Vault’s security, HashiCorp has a responsible disclosure program that has been historically critical to Vault’s security in development.</p>\n<h2><a class=\"__permalink-h\" href=\"#the-last-line-of-defense\" aria-label=\"the last line of defense permalink\">»</a><a class=\"__target-h\" id=\"the-last-line-of-defense\" aria-hidden></a>The Last Line of Defense</h2>\n<p>Vault is designed to serve as an independent, last line of defense for secrets. Situations like the ongoing activity from APT29 highlight the grave importance of this role, and the importance of designing the cryptography and key management protecting Vault secrets to stand up to concerted attacks from well-resourced, skilled adversaries.</p>\n<p>Designing secure cryptosystems is a never-ending process. In the future, we may enable users to migrate to new ciphers proven secure against future forms of cryptanalysis. But today and tomorrow, our goal remains the same: the data in Vault is protected with encryption to maintain <a href=\"https://en.wikipedia.org/wiki/Forward_secrecy\">perfect forward secrecy </a>as much as technologically possible.</p>","author":"Andy Manoske","siteTitle":"HashiCorp Blog","siteHash":"219aa6310b3388f2335eba49871f4df9581f2c58eaeb5e498363b54e835b7001","entryHash":"836494bdc3abd7015393b4530cdb1a4f3189cf1fd3856d3975ca15f37b5486b4","category":"Tech"}