{"title":"AQUA (Advanced Query Accelerator) – A Speed Boost for Your Amazon Redshift Queries","link":"https://aws.amazon.com/blogs/aws/new-aqua-advanced-query-accelerator-for-amazon-redshift/","date":1618418912000,"content":"<p><a href=\"https://aws.amazon.com/redshift/\">Amazon Redshift</a> already provides up to <a href=\"https://aws.amazon.com/blogs/big-data/get-up-to-3x-better-price-performance-with-amazon-redshift-than-other-cloud-data-warehouses/\">3x better price-performance</a> at any scale than any other cloud data warehouse. We do this by designing our own hardware and by using Machine Learning (ML).</p> \n<p>For example, we launched the SSD-based RA3 nodes for <a href=\"https://aws.amazon.com/redshift/\">Amazon Redshift</a> at the end of 2019 (<a href=\"https://aws.amazon.com/blogs/aws/amazon-redshift-update-next-generation-compute-instances-and-managed-analytics-optimized-storage/\">Amazon Redshift Update – Next-Generation Compute Instances and Managed, Analytics-Optimized Storage</a>) and added additional node sizes last April (<a href=\"https://aws.amazon.com/blogs/aws/amazon-redshift-update-ra3-4xlarge-instances/\">Amazon Redshift update – ra3.4xlarge Nodes</a>), and last December (<a href=\"https://aws.amazon.com/about-aws/whats-new/2020/12/amazon-redshift-launches-ra3-xlplus-nodes-managed-storage/\">Amazon Redshift Launches RA3.xlplus Nodes With Managed Storage</a>). In addition to high-bandwidth networking, RA3 nodes incorporate a sophisticated data management model. As I said when we launched the RA3 nodes:</p> \n<blockquote>\n <p>There’s a cache of large-capacity, high-performance SSD-based storage on each instance, backed by S3, for scale, performance, and durability. The storage system uses multiple cues, including data block temperature, data blockage, and workload patterns, to manage the cache for high performance. Data is automatically placed into the appropriate tier, and you need not do anything special to benefit from the caching or the other optimizations.</p>\n</blockquote> \n<p>Our customers use RA3 nodes to maintain very large data sets and are seeing great results. From digital interactive entertainment to tracking impressions and performance for media buys, <a href=\"https://aws.amazon.com/redshift/\">Amazon Redshift</a> and RA3 nodes help our customers to store and query data at world scale, with up to 32 PB of data in a single data warehouse.</p> \n<p>On the downside, it turns out that advances in storage performance have outpaced those in CPU performance, even as data warehouses continue to grow. The combination of large amounts of data (often accessed by queries that mandate a full scan), and limits on network traffic, can result in a situation where network and CPU bandwidth become limiting factors.</p> \n<p>We can do something about that…</p> \n<p><span><strong>Introducing AQUA</strong></span><br /> <img src=\"https://media.amazonwebservices.com/blog/2021/rs_aqua_rainbow_2.png\" />Today we are making the <strong>ra3.4xl</strong> and <strong>ra3.16xl</strong> nodes even more powerful with the addition of AQUA (Advanced Query Accelerator). Building on the caches that I told you about earlier, and taking advantage of the <a href=\"https://aws.amazon.com/ec2/nitro/\">AWS Nitro System</a> and custom FPGA-based acceleration, AQUA pushes the computation needed to handle reduction and aggregation queries closer to the data. This reduces network traffic, offloads work from the CPUs in the RA3 nodes, and allows AQUA to improve the performance of those queries by up to 10x, at no extra cost and without any code changes. AQUA also makes use of a fast, high-bandwidth connection to <a href=\"https://aws.amazon.com/s3/\">Amazon Simple Storage Service (S3)</a>.</p> \n<p>You can watch <a href=\"https://www.youtube.com/watch?v=0LVyd-kqpdE\">this video</a> to learn a lot more about how AQUA uses the custom-designed hardware in the AQUA nodes to accelerate queries. The benefit comes about in several different ways. Each node performs the reduction and aggregation operations in parallel with the others. In addition to getting the n-fold speedup due to parallelism, the amount of data that must be sent to and processed on the compute nodes is generally far smaller (often just 5% of the original). Here’s a diagram that shows how all of the elements come together to accelerate queries:</p> \n<p><img src=\"https://media.amazonwebservices.com/blog/2021/rs_aqua_block_3.png\" /></p> \n<p>If you are already using <strong>ra3.4xl</strong> or <strong>ra3.16xl</strong> nodes to host your data warehouse, you can start using AQUA in minutes. You simply enable AQUA for your clusters, restart them, and benefit from vastly improved performance for your reduction and aggregation queries. If you are ready to move into the future with RA3 and AQUA, you can create a new RA3-based cluster from a snapshot of your existing one, or you can use <strong>Classic resize</strong> to do an in-place upgrade.</p> \n<p><span><strong>Using AQUA</strong></span><br /> I don’t happen to have a data warehouse! I used a snapshot provided by the Redshift team to create a pair of clusters. The first one (<strong>prod-cluster</strong>) does not have AQUA enabled, and the second one (<strong>test-cluster</strong>) does:</p> \n<p><img src=\"https://media.amazonwebservices.com/blog/2021/rs_aqua_clusters_2.png\" /></p> \n<p>To create the AQUA-enabled cluster, I simply choose <strong>Turn on</strong> on the <strong>Cluster configuration</strong> page:</p> \n<p><img src=\"https://media.amazonwebservices.com/blog/2021/rs_aqua_enable_3.png\" /></p> \n<p>My queries will use the <code>lineitem</code> table, which has over 18 billion rows:</p> \n<p><img src=\"https://media.amazonwebservices.com/blog/2021/rs_aqua_tables_2.png\" /></p> \n<p>I create a session on each cluster and disable the Redshift result cache:</p> \n<p><img src=\"https://media.amazonwebservices.com/blog/2021/rs_aqua_no_cache_no_carry_1.png\" /></p> \n<p>And then I run the same query on both clusters:</p> \n<div> \n <pre><code>select sum(l_orderkey), count(*) from lineitem where\nl_comment similar to 'slyly %' or\nl_comment similar to 'plant %' or\nl_comment similar to 'fina %' or\nl_comment similar to 'quick %' or\nl_comment similar to 'slyly %' or\nl_comment similar to 'quickly %' or\nl_comment similar to ' %about%' or\nl_comment similar to ' final%' or\nl_comment similar to ' %final%' or\nl_comment similar to ' breach%' or\nl_comment similar to ' egular%' or\nl_comment similar to ' %closely%' or\nl_comment similar to ' closely%' or\nl_comment similar to ' %idea%' or\nl_comment similar to ' idea%' ; </code></pre> \n</div> \n<p>If you take a look at the diagram above (and perhaps watch the <a href=\"https://www.youtube.com/watch?v=0LVyd-kqpdE\">video</a>), you can see why AQUA can handle queries of this type very efficiently. Instead of sequentially scanning all 18 billion or so rows on the compute nodes, AQUA distributes the collection of <code>similar to</code> expressions to multiple AQUA nodes where they are run in parallel.</p> \n<p>The query on the cluster that has AQUA enabled finishes in less than a minute:</p> \n<p><img src=\"https://media.amazonwebservices.com/blog/2021/rs_aqua_test_query_out_1.png\" /></p> \n<p>The query on the cluster that does not have AQUA enabled finishes in a little under 4 minutes:</p> \n<p><img src=\"https://media.amazonwebservices.com/blog/2021/rs_aqua_prod_query_out_1.png\" /></p> \n<p>As is always the case with databases, complex data, and equally complex queries, your mileage will vary. For example, you could imagine a query that did a complex JOIN of rows SELECTed from multiple tables, where each SELECT would benefit from AQUA, and the overall speedup could be even greater. As you can see from the simple query that I used for this post, AQUA can dramatically reduce query time and perhaps even enable some new types of somewhat real-time queries that were simply not possible or practical in the past.</p> \n<p><span><strong>Things to Know</strong></span><br /> Here are a couple of interesting facts about AQUA:</p> \n<p><strong>Cluster Version</strong> – Your clusters must be running Redshift version 1.0.24421 or later in order to be able to make use of AQUA. To learn more about how to enable and disable AQUA, read <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/managing-cluster-aqua.html\">Managing an AQUA Cluster</a>.</p> \n<p><strong>Relevant Queries</strong> – AQUA is designed to deliver up to 10X performance on queries that perform large scans, aggregates, and filtering with <code>LIKE</code> and <code>SIMILAR_TO</code> predicates. Over time we expect to add support for additional queries.</p> \n<p><strong>Security</strong> – All data cached by AQUA is encrypted using your keys. After performing a filtering or aggregation operation, AQUA compresses the results, encrypts them, and returns them to Redshift.</p> \n<p><strong>Regions</strong> – AQUA is available today in the <span>US East (N. Virginia)</span>, <span>US West (Oregon)</span>, <span>US East (Ohio)</span>, <span>Europe (Ireland)</span>, and <span>Asia Pacific (Tokyo)</span> Regions, and will be coming to <span>Europe (Frankfurt)</span>, <span>Asia Pacific (Sydney)</span>, and <span>Asia Pacific (Singapore)</span> in the first half of 2021.</p> \n<p><strong>Pricing</strong> – As I mentioned earlier, there’s no additional charge for AQUA.</p> \n<p><span><strong>Try AQUA Today</strong></span><br /> If you are using <strong>ra3.4xl</strong> or <strong>ra3.16xl</strong> nodes to power your Redshift cluster, you can enable AQUA, restart the cluster, and run some test queries within minutes. Take AQUA for a spin and let me know what you think!</p> \n<p>— <a href=\"https://twitter.com/jeffbarr\">Jeff</a>;</p> \n<p> </p>","author":"Jeff Barr","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"93be7cad3992ef96f1e0f2fdcd301a5943d06baafa563cf5bd19b5d572ec2550","category":"Tech"}