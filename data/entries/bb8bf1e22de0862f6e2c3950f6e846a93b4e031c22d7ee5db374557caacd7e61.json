{"title":"IOI 2020: นับเห็ดเปลี่ยนชนิด","link":"https://neizod.github.io/2020/10/25/ioi-2020-count-mushrooms.html","date":1603636283000,"content":"<p>โจทย์ข้อที่ยากทีสุดในการแข่งขัน IOI 2020 คงหนีไม่พ้นข้อที่ 2 ในวันที่ 2 ที่มีผู้เข้าแข่งขันเพียงคนเดียวที่ได้ 100 คะแนนเต็ม ตัวโจทย์เป็นแนว<a href=\"//www.geeksforgeeks.org/interactive-problems-in-competitive-programming/\">โต้ตอบ</a> โดยจะให้คะแนนตามจำนวนครั้งที่โต้ตอบ ยิ่งสามารถทำได้ในจำนวนครั้งที่น้อยลงเท่าไหร่ ก็จะยิ่งได้คะแนนที่มากขึ้นเท่านั้น</p>\n\n<p>โดยเนื้อหาโจทย์อย่างสรุปเล่าได้ว่า มีเห็ดอยู่สองชนิดที่มนุษย์ไม่สามารถแยกออกได้ด้วยตนเอง ส่วนเครื่องจักรที่มีก็สามารถนับจำนวน<em>การเปลี่ยนแปลงของชนิดเห็ด</em>ที่ใส่เข้าไปเป็นลำดับได้เท่านั้น เช่น เมื่อใส่เห็ด 5 ดอกที่มีชนิด $ABBAB$ เข้าไปตามลำดับจนเสร็จแล้วเดินเครื่อง เครื่องจักรจะตอบว่าเกิดการเปลี่ยนแปลงขึ้น 3 ครั้งนั่นเอง อย่างไรก็ตามการเดินเครื่องจักรแต่ละครั้งจะใช้พลังงานเท่ากับจำนวนเห็ดที่ใส่เข้าไป หากเรามีพลังงานอยู่ $100,000$ หน่วยพร้อมกับเห็ดอีก $20,000$ ดอก ซึ่งเราทราบว่าเห็ดดอกแรกสุดนั้นคือเห็ดตัวอย่างของชนิด $A$ และเราสามารถเรียงลำดับเห็ดใส่เข้าไปในเครื่องจักรอย่างไรก็ได้ จงเขียนโปรแกรมที่นับจำนวนเห็ดชนิด $A$ โดยพยายามลดจำนวนการเดินเครื่องให้เหลือน้อยที่สุดและยังใช้พลังงานไม่เกินที่กำหนด <a href=\"//ioi2020.sg/ioi-2020-tasks/\">ดูเว็บที่เก็บโจทย์ต้นฉบับ</a></p>\n\n<blockquote class=\"oversized figure\">\n  <p><img src=\"/images/algorithm/misc/mushrooms.png\" alt=\"\" /></p>\n\n  <p>ตัวอย่างการใส่เห็ดแบบต่างๆ และคำตอบจากเครื่องจักรที่บอกจำนวนครั้งที่เห็ดเปลี่ยนชนิด</p>\n</blockquote>\n\n<h2 id=\"คว้าคะแนนขั้นต่ำจากข้อสังเกตพื้นฐาน\">คว้าคะแนนขั้นต่ำจากข้อสังเกตพื้นฐาน</h2>\n\n<p>เกณฑ์การให้คะแนนขั้นต่ำสุดที่ 10 คะแนน ยินยอมให้มีการเดินเครื่องจักรได้มากถึง $20,000$ ครั้ง ดังนั้นในแต่ละครั้งเราจะใส่เห็ดเพียง 2 ดอก โดยหนึ่งในนั้นให้เป็นเห็ดดอกแรกที่เรารู้แน่นอนว่าคือชนิด $A$ แล้วจับคู่ทีละคู่กับเห็ดดอกอื่นๆ ที่เหลือ เมื่อนับจำนวนครั้งที่<strong>ไม่มี</strong>การเปลี่ยนแปลงแล้วบวกเพิ่มอีกหนึ่งก็จะได้จำนวนของเห็ดชนิด $A$ ทั้งหมดนั่นเอง</p>\n\n<p>ส่วนเกณฑ์ 25 คะแนนในบันไดขั้นถัดไปนั้น จะห้ามเดินเครื่องจักรเกิน $10,010$ ครั้ง ซึ่งสามารถทำได้โดยใช้แนวคิดคล้ายกับข้างต้นเลย เพียงแต่ว่าเราจะใส่เห็ดเพิ่มเข้าไปเป็นครั้งละ 3 ดอกแทน โดยต้องใส่เห็ดชนิด $A$ ไว้ตรงกลางระหว่างเห็ดอีกสองดอกที่เราไม่รู้เท่านั้น เมื่อเดินเครื่องจักรแล้วจะพบว่า</p>\n\n<ul>\n  <li>ตอบ 0: เห็ดทั้ง 3 ดอกเป็นชนิด $A$</li>\n  <li>ตอบ 1: มีเห็ดชนิด $A$ อยู่ 2 ดอก และเห็ดชนิด $B$ อีก 1 ดอก (ไม่สนใจว่า $B$ คือดอกไหน)</li>\n  <li>ตอบ 2: เฉพาะเห็ดตรงกลางเป็นชนิด $A$ ส่วนอีก 2 ดอกเป็นเห็ดชนิด $B$</li>\n</ul>\n\n<h2 id=\"วางโครงร่างเทคนิคชิงคะแนนที่มากขึ้น\">วางโครงร่างเทคนิคชิงคะแนนที่มากขึ้น</h2>\n\n<p>สำหรับเกณฑ์การให้คะแนนขั้นถัดไปจะเกิดขึ้นเมื่อสามารถเดินเครื่องจักรได้ไม่เกิน $904$ ครั้ง โดยจะคิดคะแนนเป็นสัดส่วนกับจำนวนครั้งที่เดินเครื่องจักร คือจะได้คะแนน $100\\cdot226\\div Q$ คะแนนเมื่อ $Q$ คือจำนวนครั้งที่เดินเครื่องนั่นเอง (คะแนนสูงสุดตัดที่ 100 คะแนน หรือก็คือได้คะแนนเต็มเมื่อเดินเครื่องไม่เกิน $226$ ครั้ง)</p>\n\n<p>เทคนิคสำคัญสำหรับการคว้าคะแนนในช่วงนี้จะอาศัยข้อสังเกตจากวิธีพื้นฐานที่ผ่านมา โดยใช้เห็ดที่เรารู้ชนิดอยู่แล้วเป็นจำนวนมากมาวางสับหว่างกับเห็ดที่เราต้องการนับ ซึ่งก็คือ สมมติว่าเรามีเห็ดที่รู้แน่ๆ ว่าเป็นชนิด $A$ อยู่ $m$ ดอก เราจะจัดเห็ดใส่ถาดเป็นลำดับเช่นนี้ก่อนส่งเข้าไปให้เครื่องจักรนับจำนวนครั้งของการเปลี่ยนแปลง</p>\n\n\\[\\underbrace{x_1 \\, A \\; x_2 \\, A \\; x_3 \\, A \\; \\dots \\; x_m \\, A}_{2m\\text{ mushrooms}}\\]\n\n<p>เมื่อ $x_i$ สำหรับ $1 \\le i \\le m$ แทนเห็ดดอกที่เรายังไม่ทราบชนิด เนื่องจากเราแค่ต้องการนับว่าจาก $x_1$ ถึง $x_m$ มีเห็ดชนิด $A$ ทั้งหมดกี่ดอก โดยจำเป็นไม่ต้องสนใจว่าแต่ละ $x_i$ จะเป็นเห็ดชนิดใด สังเกตว่านอกจากที่ $x_1$ แล้ว หาก $x_i$ ดอกอื่นๆ เป็นเห็ดชนิด $B$ เครื่องจักรจะนับการเปลี่ยนแปลง ณ เห็ดดอกนั้นเพิ่มได้ 2 ครั้ง ส่วนเฉพาะที่ $x_1$ จะนับเพิ่มเพียง 1 ครั้ง ดังนั้นหากให้คำตอบที่ได้จากเครื่องจักรคือ $R$ เราจะได้ว่า</p>\n\n\\[\\begin{align}\n\\text{COUNT}_B(m, R) &amp;= \\left\\lceil \\frac{R}2 \\right\\rceil \\\\\n\\text{COUNT}_A(m, R) &amp;= m - \\text{COUNT}_B(m, R)\n\\end{align}\\]\n\n<p>เทคนิคนี้ทำให้เราสามารถนับชนิดเห็ดจำนวนมากได้โดยไม่ต้องถามเครื่องจักรหลายครั้ง เช่น แม้ในกรณีที่ $n = 20,000$ แต่หากในจำนวนนั้นเรารู้เห็ดชนิดเดียวกันเป็นจำนวน $m=100$ อยู่ก่อนแล้ว เราสามารถใช้เครื่องจักรเพียงอีกแค่ $\\frac{n-m}m = 199$ ครั้งเท่านั้น ก็จะนับจำนวนเห็ดแยกตามชนิดได้จนหมดครบทุกดอก</p>\n\n<p>อย่างไรก็ตาม เรายังสามารถทำได้ดีกว่านั้นขึ้นไปอีก สังเกตว่าเห็ดดอกที่ $x_1$ นั้นถูกนับอย่างแปลกประหลาดไม่เหมือนเพื่อน ซึ่งก็คือหากคำตอบ $R$ เป็นเลขคู่ นั่นหมายความว่า $x_1$ ต้องเป็นเห็ดชนิด $A$ อย่างแน่นอน ดังนั้นหากในครั้งก่อนเราโชคดีเจอเห็ดชนิด $A$ ครั้งถัดไปเราก็จะสามารถจัดถาดด้วยเห็ดที่ไม่รู้ชนิดได้มากขึ้นเป็น $m+1$ ดอก และยิ่งเราเจอเห็ดชนิด $A$ มากขึ้นเรื่อยๆ เท่าไหร่ เราก็จะยิ่งใช้เครื่องจักรได้อย่างมีประสิทธิภาพมากขึ้นเท่านั้น</p>\n\n<p>แล้วเราจะโชคร้ายได้แค่ไหนกัน? หากเราไม่เจอเห็ดชนิด $A$ เลย ถึงจุดหนึ่งเห็ดชนิด $B$ จะมีจำนวนมากกว่าเห็ดชนิด $A$ เราก็จะสลับไปใช้เห็ดชนิด $B$ เป็นหลักในการสับหว่างถามเครื่องจักรแทนนั่นเอง พิจารณากรณีเริ่มต้นที่เรามีเห็ดชนิด $A$ กับ $B$ อยู่อย่างละประมาณ $m$ ดอกพอกัน หากใช้เทคนิคในแนวเดียวกับ<a href=\"//en.wikipedia.org/wiki/Amortized_analysis\">การวิเคราะห์แบบถัวเฉลี่ย (amortized analysis)</a> จะเห็นว่าเมื่อใช้เครื่องจักรไปเรื่อยๆ ขอบเขตล่างของเห็ดกองที่ใหญ่กว่าจะมีเห็ดเพิ่มขึ้นมาหนึ่งดอกต่อการใช้เครื่องจักรสองครั้ง นั่นหมายความว่าอย่างแย่ที่สุดแล้ว เราจะถามเครื่องจักรด้วยจำนวนครั้งที่น้อยลงเหลือประมาณ</p>\n\n\\[\\begin{align}\nn - 2m &amp;= \\overbrace{m + m + (m+1) + (m+1) + (m+2) + (m+2) + \\dots + (m+q-1)}^\\text{for simplicity, suppose we use the machine $2q$ times} \\\\\n  &amp;= 2 \\left( m + (m+1) + (m+2) + \\dots + (m+q-1) \\right) \\\\\n  &amp;= 2 \\left( qm + 1+2+\\dots+(q-1) \\right) \\\\\n  &amp;= 2 \\left( qm + \\frac{(q-1)q}2 \\right) \\\\\n  &amp;= 2qm + (q-1)q \\\\\n0 &amp;= q^2 + (2m-1)q - (2m-n) \\\\\n2q &amp;= 1 - 2m \\pm \\sqrt{4m^2 -12m + 4n + 1} \\\\\n\\end{align}\\]\n\n<p>ซึ่งก็คือ ที่ $n=20,000$ และ $m=100$ จะได้ว่าต้องถามเครื่องจักรอย่างมากที่สุด $2q \\approx 145.7$ ครั้งเท่านั้น</p>\n\n<p>คำถามตอนนี้จะเหลือเพียงแค่ว่า ก่อนที่จะใช้ขั้นตอนวิธีที่เล่ามาเพื่อนับเห็ดแยกชนิดในระยะที่สอง เราควรทำอย่างไรเพื่อหาเห็ดชนิดเดียวกันมาให้ได้ $m$ ดอกในระยะที่หนึ่ง หากเราใช้วิธีพื้นฐานที่สุด (10 คะแนน) ที่ค่อยๆ ถามเห็ดที่ยังไม่รู้ชนิดครั้งละดอก จะเห็นว่าเราต้องถามอย่างมากสุด $2m-1$ ครั้งถึงจะมั่นใจได้ว่าได้เห็ดชนิดใดชนิดหนึ่งอย่างน้อย $m$ ดอก เมื่อนำขั้นตอนย่อยในระยะที่หนึ่งกับระยะที่สองมารวมกันก็จะได้ขั้นตอนวิธีสำหรับนับเห็ดทั้งหมด อย่างไรก็ตามเราจะพบว่าขั้นตอนวิธีนี้ยังมีประสิทธิภาพไม่ดีพอ เพราะด้วยกรณีที่ผ่านมาเราอาจยังต้องถามมากถึง $199 + 146 = 345$ ครั้ง หรือคิดออกมาเป็นคะแนนได้ $100 \\cdot 226 \\div 345 \\approx 77$ คะแนน</p>\n\n<h2 id=\"เก็บงานให้เรียบร้อยมุ่งสู่คะแนนเต็ม\">เก็บงานให้เรียบร้อยมุ่งสู่คะแนนเต็ม</h2>\n\n<p>จากหัวข้อที่ผ่านมา จะเห็นว่าการหาเห็ดชนิดเดียวกันให้ได้ $m$ ดอกในระยะที่หนึ่งนั้นยังมีประสิทธิภาพไม่ดีนัก เราจะปรับปรุงส่วนนี้ด้วยการใช้เครื่องจักรเพียง 1 ครั้งแล้วพยายามบอกชนิดของเห็ดให้ได้ 2.5 ดอกโดยเฉลี่ย</p>\n\n<p>เนื่องจากเริ่มต้นมาเรารู้ชนิดเห็ดที่แน่ชัดอยู่เพียงแค่ดอกเดียว ดังนั้นการถามครั้งแรกๆ คงเลี่ยงไม่ได้ที่ต้องถามเห็ดครั้งละหนึ่งดอก (จัดถาดเห็ดอยู่ในรูป $x_1A$) เราจะใช้เทคนิค<strong>ถามหนึ่งรู้หนึ่ง</strong>ไม่เกิน 2 ครั้ง เพื่อรับประกันว่าจะมีเห็ดชนิดใดชนิดหนึ่งจำนวน 2 ดอก</p>\n\n<p>เมื่อมีเห็ดชนิดเดียวกัน 2 ดอกแล้ว (ต่อไปนี้เพื่อความสะดวกจะสมมติให้เห็ดชนิดที่มีมากกว่าเป็นชนิด $A$ ไปเลย) เราจะจัดถาดเห็ดถามในรูป $x_1A\\,x_2A$ ซึ่งก็คือถามครั้งเดียวระบุชนิดเห็ดได้ถึงสองดอก เพราะคำตอบในเลขฐานสองของการถามเช่นนี้จะสามารถบอกได้ทันทีว่าเห็ดดอกใดเป็นชนิดไหน ซึ่งก็คือ</p>\n\n<ol>\n  <li>บิตที่ 0 ของคำตอบเป็น 0 เมื่อและก็ต่อเมื่อ $x_1$ เป็นเห็ดชนิด $A$</li>\n  <li>บิตที่ 1 ของคำตอบเป็น 0 เมื่อและก็ต่อเมื่อ $x_2$ เป็นเห็ดชนิด $A$</li>\n</ol>\n\n<p>เราจะใช้เทคนิค<strong>ถามสองรู้สอง</strong>อีกเพียงไม่เกิน 2 ครั้ง ก็จะได้เห็ดชนิด $A$ มาอย่างน้อย 3 ดอก</p>\n\n<p>หลังจากนั้นเราจะจัดถาดด้วยเห็ดที่ไม่รู้ชนิดครั้งละสามดอกเช่นนี้ $x_1A\\,x_2A\\,x_3A$ จากเทคนิคที่เคยเห็นผ่านมาแล้ว เราคงบอกได้ไม่ยากว่า $x_1$ คือเห็ดชนิด $A$ หรือไม่ อย่างไรก็ตามสำหรับ $x_2$ และ $x_3$ นั้น เราพบว่า</p>\n\n<ol>\n  <li>หากคำตอบเป็น 0 หรือ 1 นั่นคือ $x_2$ และ $x_3$ เป็นเห็ดชนิด $A$ ทั้งคู่</li>\n  <li>หากคำตอบเป็น 4 หรือ 5 นั่นคือ $x_2$ และ $x_3$ เป็นเห็ดชนิด $B$ ทั้งคู่</li>\n  <li>หากคำตอบเป็น 2 หรือ 3 จะบอกได้แค่ว่า $x_2$ กับ $x_3$ เป็นเห็ดชนิดต่างกัน</li>\n</ol>\n\n<p>เทคนิคดังกล่าวคือการ<strong>ถามสามอาจรู้หนึ่งหรือสาม</strong> หากมันล้มเหลวโดยระบุชนิดเห็ดได้เพียงดอกเดียว อย่างน้อยเราจะรู้ว่าเห็ดอีกสองดอกต้องไม่เป็นชนิดเดียวกัน ถึงตอนนี้เราจะจัดการกับความกำกวมนี้โดยใช้เห็ดชนิด $B$ เข้ามาช่วย ซึ่งแบ่งได้เป็น 2 กรณี คือ</p>\n\n<p>กรณีแรกเมื่อเรามีเห็ดชนิด $B$ อยู่น้อยกว่า 2 ดอก เราจะใช้เทคนิคแบบเดียวกับ<strong>ถามสองรู้สอง</strong>เลย เพียงแต่เปลี่ยนไปจัดถาดเห็ดด้วย $x_3A\\,x_4A$ นอกจากนี้อย่าลืมว่าชนิดของเห็ด $x_3$ ที่หาได้ก็จะบ่งบอกย้อนไปถึงชนิดของเห็ด $x_2$ ด้วย เราจะเรียกเทคนิคนี้ว่า<strong>แก้กำกวมถามสองรู้สาม</strong></p>\n\n<p>ส่วนอีกกรณีเราจะจัดถาดเห็ด $B\\,x_2BA\\,x_3A\\,x_4A\\,x_5$ เพื่อถามเครื่องจักร เมื่อนำคำตอบที่ได้ไปลบหนึ่ง (เพราะมีการเปลี่ยนแปลงแน่ๆ จากคู่เห็ดที่เราตั้งใจใส่เข้าไปหนึ่งครั้ง) คำตอบใหม่จะมีค่าได้ตั้งแต่ 0 ถึง 7 พิจารณาคำตอบใหม่นี้ในเลขฐานสองจะพบว่า</p>\n\n<ol>\n  <li>บิตที่ 2 ของคำตอบใหม่เป็น 0 เมื่อและก็ต่อเมื่อ $x_3$ เป็นเห็ดชนิด $A$</li>\n  <li>บิตที่ 1 ของคำตอบใหม่เป็น 0 เมื่อและก็ต่อเมื่อ $x_4$ เป็นเห็ดชนิด $A$</li>\n  <li>บิตที่ 0 ของคำตอบใหม่เป็น 0 เมื่อและก็ต่อเมื่อ $x_5$ เป็นเห็ดชนิด $A$</li>\n</ol>\n\n<p>เรียกกระบวนการนี้ว่า<strong>แก้กำกวมถามสี่รู้สี่</strong> (และเช่นเคย ชนิดเห็ดของ $x_3$ จะบ่งบอกชนิดเห็ด $x_2$) ดังนั้นในภาพรวม เราจะใช้เทคนิค<strong>ถามสามอาจรู้หนึ่งหรือสาม</strong>ไปเรื่อยๆ แล้วสลับไปเลือกใช้เทคนิค<strong>แก้กำกวมถามสองรู้สาม</strong>หรือ<strong>แก้กำกวมถามสี่รู้สี่</strong> จนกระทั่งเราได้เห็ดชนิด $A$ มาอย่างน้อย $m$ ดอก</p>\n\n<p>แล้วเราจะต้องใช้เครื่องจักรในระยะที่หนึ่งด้วยเทคนิคเหล่าไปเป็นจำนวนเท่าไหร่? สมมติว่าเราสนใจ $m$ ขนาดใหญ่ๆ เราอาจตัดการ<strong>ถามหนึ่งรู้หนึ่ง</strong>และ<strong>ถามสองรู้สอง</strong>ที่จะเกิดขึ้นเพียงไม่กี่ครั้งออกจากการวิเคราะห์ไปเลย หลังจากนั้นเราจะ<strong>ถามสามอาจรู้หนึ่งหรือสาม</strong>เป็นส่วนใหญ่ ซึ่งอาจให้ประสิทธิภาพแย่ได้หากต้องแก้กำกวมเป็นจำนวนมาก แต่เนื่องจากการ<strong>แก้กำกวมถามสองรู้สาม</strong>เกิดขึ้นได้อย่างมากที่สุดเพียง 2 ครั้ง เราอาจตัดมันออกจากการวิเคราะห์ได้ด้วยเช่นกัน เหลือเพียงแค่การ<strong>แก้กำกวมถามสี่รู้สี่</strong> ดังนั้นด้วยคู่ของการ<strong>ถามสามอาจรู้หนึ่งหรือสาม</strong>และ<strong>แก้กำกวมถามสี่รู้สี่</strong>จะระบุชนิดเห็ดได้ 5 ดอกต่อการถาม 2 ครั้ง และเนื่องจากเราอาจต้องระบุชนิดเห็ดมากถึง $2m$ ดอก ดังนั้นเราจะต้องถามประมาณ $2m/2.5 = 0.8m$ ครั้งนั่นเอง</p>\n\n<p>ให้ $Q_n(m)$ เป็นจำนวนครั้งทั้งหมดที่ต้องถามเครื่องจักร ก็จะได้ว่า</p>\n\n\\[\\begin{align}\nQ_n(m) &amp;= 0.8m + 1 - 2m \\pm \\sqrt{4m^2 -12m + 4n + 1} \\\\\nQ'_n(m) &amp;= \\frac{4m-6}{\\sqrt{4m^2 - 12m + 4n + 1}} - \\frac65\n\\end{align}\\]\n\n<p>แก้อนุพันธ์ $Q’_n(m) = 0$ เพื่อหาค่า $m$ ที่เหมาะสมที่สุด จะได้</p>\n\n\\[m = \\frac34\\left( 2 \\pm \\sqrt{n-2} \\right)\\]\n\n<p>นั่นก็คือ ในกรณีที่ $n=20,000$ เราควรหาเห็ดชนิดเดียวกันในระยะที่หนึ่งไว้ประมาณ $m \\approx 107.6$ ดอก แล้วหลังจากนั้นจึงแค่นับชนิดเห็ดที่สนใจพร้อมค่อยๆ ขยายปริมาณเห็ดที่รู้ชนิดในระยะที่สอง ซึ่งทั้งหมดนี้จะทำให้เครื่องจักรถูกเรียกใช้รวมไม่เกิน $Q_n(108) \\approx 225.5$ ครั้ง</p>\n\n<h2 id=\"โค้ด\">โค้ด</h2>\n\n<div class=\"language-c++ highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">#include \"mushrooms.h\"\n#include &lt;bits/stdc++.h&gt;\n</span><span class=\"k\">using</span> <span class=\"k\">namespace</span> <span class=\"n\">std</span><span class=\"p\">;</span>\n\n<span class=\"kt\">bool</span> <span class=\"n\">swapped</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n<span class=\"kt\">bool</span> <span class=\"n\">conflict</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">just_count_A</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"n\">just_count_B</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span> <span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"mi\">0</span> <span class=\"p\">};</span>\n<span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span> <span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"p\">};</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">calc_pivots_size</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"mf\">1.5</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">4</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span> <span class=\"nf\">make_swap</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">swapped</span> <span class=\"o\">=</span> <span class=\"n\">not</span> <span class=\"n\">swapped</span><span class=\"p\">;</span>\n    <span class=\"n\">swap</span><span class=\"p\">(</span><span class=\"n\">just_count_A</span><span class=\"p\">,</span> <span class=\"n\">just_count_B</span><span class=\"p\">);</span>\n    <span class=\"n\">swap</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">bool</span> <span class=\"nf\">decide_swap</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"n\">B</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n        <span class=\"n\">make_swap</span><span class=\"p\">();</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"nb\">true</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">handle_parity</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">parity</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"p\">(</span><span class=\"n\">parity</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"o\">?</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"p\">).</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">handle_pair</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">raw_info</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">flag2b</span> <span class=\"o\">=</span> <span class=\"n\">raw_info</span> <span class=\"o\">&gt;&gt;</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">flag2b</span> <span class=\"o\">&amp;</span> <span class=\"mb\">0b01</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">conflict</span> <span class=\"o\">=</span> <span class=\"nb\">true</span><span class=\"p\">;</span>\n        <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"p\">(</span><span class=\"n\">flag2b</span> <span class=\"o\">&amp;</span> <span class=\"mb\">0b10</span> <span class=\"o\">?</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"p\">).</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n    <span class=\"p\">(</span><span class=\"n\">flag2b</span> <span class=\"o\">&amp;</span> <span class=\"mb\">0b10</span> <span class=\"o\">?</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"p\">).</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">handle_conflict_slow</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">flag2b</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"p\">(</span><span class=\"n\">flag2b</span> <span class=\"o\">&amp;</span> <span class=\"mb\">0b01</span> <span class=\"o\">?</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"p\">).</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n    <span class=\"p\">(</span><span class=\"n\">flag2b</span> <span class=\"o\">&amp;</span> <span class=\"mb\">0b01</span> <span class=\"o\">?</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"p\">).</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n    <span class=\"p\">(</span><span class=\"n\">flag2b</span> <span class=\"o\">&amp;</span> <span class=\"mb\">0b10</span> <span class=\"o\">?</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"p\">).</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n    <span class=\"n\">conflict</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"mi\">3</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">handle_conflict_fast</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">raw_info</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">flag3b</span> <span class=\"o\">=</span> <span class=\"n\">raw_info</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">(</span><span class=\"n\">flag3b</span> <span class=\"o\">&amp;</span> <span class=\"mb\">0b100</span> <span class=\"o\">?</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"p\">).</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n    <span class=\"p\">(</span><span class=\"n\">flag3b</span> <span class=\"o\">&amp;</span> <span class=\"mb\">0b100</span> <span class=\"o\">?</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"p\">).</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n    <span class=\"p\">(</span><span class=\"n\">flag3b</span> <span class=\"o\">&amp;</span> <span class=\"mb\">0b010</span> <span class=\"o\">?</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"p\">).</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n    <span class=\"p\">(</span><span class=\"n\">flag3b</span> <span class=\"o\">&amp;</span> <span class=\"mb\">0b001</span> <span class=\"o\">?</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"p\">).</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">);</span>\n    <span class=\"n\">conflict</span> <span class=\"o\">=</span> <span class=\"nb\">false</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span> <span class=\"mi\">4</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span> <span class=\"nf\">get_pivots</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">info</span><span class=\"p\">;</span>\n    <span class=\"kt\">int</span> <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">calc_pivots_size</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">);</span>\n    <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">decide_swap</span><span class=\"p\">()</span> <span class=\"n\">and</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">A</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"n\">size</span> <span class=\"n\">and</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">4</span> <span class=\"o\">&lt;</span> <span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">not</span> <span class=\"n\">conflict</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">switch</span> <span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n                <span class=\"k\">case</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"n\">handle_parity</span><span class=\"p\">(</span><span class=\"n\">use_machine</span><span class=\"p\">({</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"p\">}));</span>\n                    <span class=\"k\">break</span><span class=\"p\">;</span>\n                <span class=\"k\">case</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n                    <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">use_machine</span><span class=\"p\">({</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"p\">});</span>\n                    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"n\">handle_parity</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"o\">%</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n                    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"n\">handle_parity</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n                    <span class=\"k\">break</span><span class=\"p\">;</span>\n                <span class=\"nl\">default:</span>\n                    <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">use_machine</span><span class=\"p\">({</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"p\">});</span>\n                    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"n\">handle_parity</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"o\">%</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n                    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"n\">handle_pair</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">use_machine</span><span class=\"p\">({</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"p\">});</span>\n            <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"n\">handle_conflict_slow</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n            <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">use_machine</span><span class=\"p\">({</span> <span class=\"n\">B</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">3</span> <span class=\"p\">});</span>\n            <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"n\">handle_conflict_fast</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span> <span class=\"n\">make_sample</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">size</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span> <span class=\"n\">sample</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"p\">};</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">j</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">j</span><span class=\"o\">&lt;</span><span class=\"n\">size</span><span class=\"p\">;</span> <span class=\"n\">j</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">sample</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"p\">(),</span> <span class=\"p\">{</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"p\">});</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">sample</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span> <span class=\"nf\">count_the_rest</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">decide_swap</span><span class=\"p\">()</span> <span class=\"n\">and</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kt\">int</span> <span class=\"n\">test_size</span> <span class=\"o\">=</span> <span class=\"n\">min</span><span class=\"p\">((</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">A</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">(),</span> <span class=\"n\">n</span><span class=\"o\">-</span><span class=\"n\">i</span><span class=\"p\">);</span>\n        <span class=\"kt\">int</span> <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">use_machine</span><span class=\"p\">(</span><span class=\"n\">make_sample</span><span class=\"p\">(</span><span class=\"n\">test_size</span><span class=\"p\">));</span>\n        <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"n\">handle_parity</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"o\">%</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n        <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"n\">test_size</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n        <span class=\"n\">just_count_A</span> <span class=\"o\">+=</span> <span class=\"p\">(</span><span class=\"n\">test_size</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">info</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n        <span class=\"n\">just_count_B</span> <span class=\"o\">+=</span> <span class=\"n\">info</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">count_mushrooms</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">get_pivots</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">);</span>\n    <span class=\"n\">count_the_rest</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">);</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">swapped</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">make_swap</span><span class=\"p\">();</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">A</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">just_count_A</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>","author":"","siteTitle":"neizod's speculation","siteHash":"939338c5557b1743f2c128736c6006e145dcabc81da9970f1c0dc8ae2feb0830","entryHash":"bb8bf1e22de0862f6e2c3950f6e846a93b4e031c22d7ee5db374557caacd7e61","category":"Thai"}