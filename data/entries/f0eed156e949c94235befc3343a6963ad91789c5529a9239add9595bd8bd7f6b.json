{"title":"MotionMark 1.2","link":"https://webkit.org/blog/11685/motionmark-1-2/","date":1623100891000,"content":"<figure><img src=\"https://webkit.org/wp-content/uploads/MotionMark1-2.png\" /></figure>\n<p>Today we are announcing an <a href=\"https://browserbench.org/MotionMark1.2/\">update</a> to the MotionMark benchmark. This is a relatively small update, aimed at increasing test reliability and reproducibility. The largest change is the removal of the Focus subtest, which was causing significant variance in test results, and wasn’t measuring what it was intending to measure.</p>\n<h3>Benchmark Harness</h3>\n<p>Most of the changes in MotionMark 1.2 aim to reduce variance between multiple runs of the benchmark. We increased the warm-up time between each test by 1900ms and required at least 30 frames to be rendered in between tests to reduce interference between adjacent tests. Different tests stress different parts of the graphics pipeline, and their processing can overlap if they aren’t more strongly segmented.</p>\n<p>We also implemented a few different strategies to decrease the benchmark’s sensitivity to individual frame times. The first is to make sure that the benchmark never makes any ramping decisions based on the time of a single frame, but instead requires at least 9 frames before adjusting complexity. In addition, the benchmark now discards outlier frame times.</p>\n<h3>Focus Subtest</h3>\n<p>Modern browsers use a <a href=\"https://webkit.org/blog/8262/visualizing-layers-in-web-inspector/\">compositing architecture</a>, where part of the graphics work is responsible for drawing individual elements into layers, and other graphics work is responsible for compositing layers together into a final image. The interface between these two parts behaves differently in different browsers, and may indeed be entirely asynchronous, possibly providing almost no backpressure if the compositor is running more slowly than element painting.</p>\n<p>In browser engines which run the compositor asynchronously (like WebKit), the Focus subtest measured how fast descriptions of work can be delivered to the compositor, rather than how fast the compositor can actually execute that work, which is what the subtest was trying to measure. In addition, the backpressure in the Focus subtest is indirect, passes through the scheduler, and is therefore noisy. It was causing a huge variance in subtest score on machines which have relatively high element painting performance compared to their compositor performance.</p>\n<h3>Conclusion</h3>\n<p>MotionMark 1.2 produces significantly less score variance than previous versions of MotionMark on a wide variety of machines of varying relative performance. Because of the removal of the Focus subtest, MotionMark 1.2 is also more reflective of real-world graphics performance across browsers.</p>\n<h3>ChangeLog</h3>\n<p>Here is a list of all the changes that have gone into MotionMark 1.2:</p>\n<ul>\n<li><a href=\"https://trac.webkit.org/changeset/278436/webkit\">[MotionMark] Controller.filterOutOutliers() sorts the frameLengths array incorrectly</a></li>\n<li><a href=\"https://trac.webkit.org/changeset/277406/webkit\">[MotionMark] Temporarily remove the focus test</a></li>\n<li><a href=\"https://trac.webkit.org/changeset/274179/webkit\">MotionMark scores are super sensitive to a single long frame</a></li>\n<li><a href=\"https://trac.webkit.org/changeset/272044/webkit\">MotionMark focus test can cause extreme variance in whichever test runs directly after it</a></li>\n<li><a href=\"https://trac.webkit.org/changeset/270959/webkit\">[MotionMark] Increase the warm-up time for each sub-test from 100ms to 1000ms</a></li>\n<li><a href=\"https://trac.webkit.org/changeset/260681/webkit\">MotionMark: add link to bug in about page</a></li>\n<li><a href=\"https://trac.webkit.org/changeset/260656/webkit\">MotionMark: ensure that timestamps are valid during warm up phase of tests</a></li>\n</ul>","author":"","siteTitle":"Blog – WebKit","siteHash":"7f8dbea0b8f53db2e11a2faa08c6dca9954c01638d09a2ce585b77a60d10f7a1","entryHash":"f0eed156e949c94235befc3343a6963ad91789c5529a9239add9595bd8bd7f6b","category":"Tech"}