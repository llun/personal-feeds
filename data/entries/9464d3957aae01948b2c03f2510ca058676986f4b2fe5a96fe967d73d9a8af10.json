{"title":"สวัสดี Selenium Grid 4","link":"https://www.somkiat.cc/changes-from-selenium-grid-4/","date":1615549685000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2021/03/selenium-4-banner-2000x1136-1-150x150.png\" class=\"attachment-post-thumbnail size-post-thumbnail wp-post-image\" alt=\"\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/03/selenium-4-banner-2000x1136-1-150x150.png 150w, https://www.somkiat.cc/wp-content/uploads/2021/03/selenium-4-banner-2000x1136-1-75x75.png 75w\" sizes=\"(max-width: 150px) 100vw, 150px\" /></p><!-- wp:image {\"id\":21618,\"width\":548,\"height\":311,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large is-resized\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/03/selenium-4-banner-2000x1136-1-1024x582.png\" alt=\"\" class=\"wp-image-21618\" width=\"548\" height=\"311\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p><strong>Selenium Grid 4</strong> ใช้ W3C WebDriver protocol <br>จากเดิมที่ยังใช้งาน JSONWire protocol ไป<br>และยังได้เพิ่มเรื่องของการสนับสนุน DevTools protocol อีกด้วย<br>แต่ยังอยู่ในช่วงของ experiment feature เท่านั้น</p>\n<!-- /wp:paragraph -->\n\n\n<span id=\"more-21617\"></span>\n\n\n<!-- wp:paragraph {\"customFontSize\":25} -->\n<p style=\"font-size:25px\"><strong>เรื่องที่น่ายินดีมาก ๆ คือ การปรับปรุงเอกสารให้อ่านง่าย เข้าใจได้ง่ายขึ้น</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>แน่นอนว่า ชัดเจนและทำตามได้ดีกว่าเดิมเยอะ<br>ลองไปอ่านกัน <strong><a rel=\"noreferrer noopener\" href=\"https://www.selenium.dev/documentation/en/grid/grid_4/\" target=\"_blank\">Selenium Grid 4 Documentation</a></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph {\"customFontSize\":25} -->\n<p style=\"font-size:25px\"><strong>ใน version นี้แบ่ง component ออกจากกันชัดเจน</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>ซึ่งประกอบไปด้วยดังนี้ (แต่ก็เพิ่มความซับซ้อนขึ้น)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Router</li><li>Session queue</li><li>Session map</li><li>Distributor</li><li>Event bus</li><li>Nodes</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>แสดงดังรูป</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":21620,\"width\":522,\"height\":313,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large is-resized\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/03/grid_4-1024x615.png\" alt=\"\" class=\"wp-image-21620\" width=\"522\" height=\"313\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph {\"customFontSize\":25} -->\n<p style=\"font-size:25px\"><strong>ในเรื่องของการติดตั้งทำได้ 4 แบบคือ</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>แบบที่ 1</strong> คือ แยก Hub และ Node ตาม role ปกติ</li><li><strong>แบบที่ 2</strong> คือ standaone ซึ่งทำงานได้ทุก role ใน instance เดียว</li><li><strong>แบบที่ 3</strong> คือ distributed mode ซึ่งจะต้องสร้างแต่ละส่วนงานขึ้นมาตามลำดับ ก่อนที่จะทำการเพิ่ม node ดังนี้ Event bus, Session map, Session queue, distributor และ router นี่มันแนวคิด Microservices ชัด ๆ </li><li><strong>แบบที่ 4</strong> คือ การใช้งานผ่าน Docker</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph {\"fontSize\":\"medium\"} -->\n<p class=\"has-medium-font-size\"><strong>เปลี่ยนจาก Jetty มาเป็น Netty</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>ส่งผลให้การทำงานรวดเร็วขึ้นแต่ก็ยังต้องการใช้ Memory 1 GB ต่อ 1 process เช่นเดิม<br>นั่นหมายความว่า ยังคงกิน resource เยอะเช่นเดิม</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph {\"fontSize\":\"medium\"} -->\n<p class=\"has-medium-font-size\"><strong>เมื่อมี request ต่าง ๆ เข้ามา ยังคงเก็บเข้า queue ใน memory เช่นเดิม</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>ดังนั้นถ้ามีปัญหาก็หายหมดทันที<br>ซึ่งเป็นอีกหนึ่งส่วนงานที่ยังทำให้ไม่เสถียรอย่างมาก<br>ถ้ามีการใช้งานพวก database หรือ messaging server เข้ามาช่วยจะทำให้เสถียรขึ้น<br>แต่ก็เพิ่มความซับซ้อนเช่นเดียวกัน</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong><em>เมื่อทำการเปลี่ยนแปลง configuration แล้ว จำเป็นต้อง restart เช่นเดิม</em></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph {\"fontSize\":\"medium\"} -->\n<p class=\"has-medium-font-size\"><strong>ถ้าต้องจัดการจำนวน instance เยอะ ๆ</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>แนะนำให้ไปใช้ <strong><a rel=\"noreferrer noopener\" href=\"https://github.com/aerokube/selenoid\" target=\"_blank\">Selenoid (Selenium + Docker)</a></strong> เลยดีกว่า</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph {\"fontSize\":\"medium\"} -->\n<p class=\"has-medium-font-size\"><strong>ไปดูอีก project ที่น่าสนใจคือ <a href=\"https://aerokube.com/moon/\" target=\"_blank\" rel=\"noreferrer noopener\">Moon</a></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>มันคือ Selenium in Kubernetes<br>น่าจะเป็นอีกทางเลือกที่น่าสนใจ</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":21623,\"width\":485,\"height\":219,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large is-resized\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/03/Screen-Shot-2564-03-12-at-13.28.34-1024x463.png\" alt=\"\" class=\"wp-image-21623\" width=\"485\" height=\"219\"/><figcaption><a href=\"https://aerokube.com/\" target=\"_blank\" rel=\"noreferrer noopener\">https://aerokube.com/https://aerokube.com/</a></figcaption></figure>\n<!-- /wp:image -->","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"9464d3957aae01948b2c03f2510ca058676986f4b2fe5a96fe967d73d9a8af10","category":"Thai"}