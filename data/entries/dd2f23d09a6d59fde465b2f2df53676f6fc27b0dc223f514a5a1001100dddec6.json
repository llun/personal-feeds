{"title":"[Flutter] บันทึกแนวทางการจัดการเรื่อง SEO (Search Engine Optimization)","link":"https://www.somkiat.cc/flutter-for-web-seo-workaround/","date":1621496635000,"content":"<p><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/05/SEO-150x150.jpeg\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/05/SEO.jpeg\" /></figure>\n\n\n\n<p>จาก Flutter 2 ที่ออกมา โดยรองรับการพัฒนา web application ด้วย<br />จึงมีปัญหาหนึ่งเรื่องที่ใน community ของกันเยอะ<br />นั่นก็คือเรื่องของ <strong><a href=\"https://github.com/flutter/flutter/issues/46789\" target=\"_blank\">SEO Friendly</a></strong> <br />หรือใน <a href=\"https://github.com/flutter/uxr/issues/52\" target=\"_blank\"><strong>Flutter User Experience Research (UXR)</strong></a> ก็มีเช่นกัน<br />รวมทั้ง feature อื่น ๆ เช่น Hot Reload (ไม่ต้องมากดได้ไหม) เป็นต้น</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>ดังนั้นวิธีการยังไม่มีเลย</strong></p>\n\n\n\n<p>เนื่องจากจะทำการแปลงจาก Flutter/Dart มาเป็น HTML/CSS/JS ให้<br />ทำให้เราทำอะไรมากไม่ค่อยได้</p>\n\n\n\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/05/web-arch-1024x472.png\" /></figure>\n\n\n\n<p><strong>แต่จากที่ลองทำใน project เบื้องต้น สรุปสิ่งที่พอทำได้ดังนี้</strong></p>\n\n\n\n<p>ซึ่งผลที่ออกมาก็ถือว่าน่าพอใจ และตรงกับที่ต้องการ<br />นั่นคือเรื่องของ SEO และการ share content <br />ใน Social media ต่าง ๆ ได้ง่ายและเหมาะสมขึ้น<br /><strong>ขั้นตอนมีดังนี้</strong></p>\n\n\n\n<p><strong>ขั้นตอนที่ 1 ใน web app ก็มีการใช้งาน routing ปกติ</strong></p>\n\n\n\n<p>โดยจะแบ่งตามหน้ารายการ รวมทั้ง detail เช่น</p>\n\n\n\n<ul><li>Main page ใช้ /</li><li>Promotion page ใช้ #/promotion</li><li>ใน promotion detail page ใช้ #/promotion/1</li></ul>\n\n\n\n<p>โดยทุกหน้าสามารถเข้าถึงด้วย URL ข้างต้นได้ทั้งหมด</p>\n\n\n\n<p><strong>ขั้นตอนที่ 2 เปลี่ยนการ reference หรืออ้างถึง URL ใน page ต่าง ๆ</strong></p>\n\n\n\n<p>โดยทำการกำหนด slug หรือ URL ที่ friendly ขึ้นมาของแต่ละหน้า<br />โดยเฉพาะในหน้า promotion detail <br />ซึ่งกำหนดใหม่ให้เป็น <strong>/promotion/slug</strong><br />รวมทั้งมีการ custom header ต่าง ๆ ของ page ตามที่ต้องการ<br />และนำข้อมูลจาก #/promotion/1 มาใช้<br />ขั้นตอนนี้เหมือนการทำ template นั่นเอง</p>\n\n\n\n<p><strong>ขั้นตอนที่ 3 ใช้ <a href=\"https://developers.google.com/web/tools/puppeteer/articles/ssr\" target=\"_blank\">Puppeteer</a> มาเพื่อสร้างหรือ generate หน้าที่ต้องการไว้</strong></p>\n\n\n\n<p>และบันทึกไว้บน server ที่สร้างไว้ <br />และสร้าง server route เข้าถึง<br />ทำให้ทางฝั่งคนเรียกหรือผู้ใช้งานเข้าถึงได้ง่าย<br />รวมทั้งก็เอาไปใส่ sitemap และการ share ได้ง่ายขึ้น</p>\n\n\n\n<p>แต่ปัญหาที่ตามมาคือ เมื่อทุกครั้ง content เพิ่มหรือเปลี่ยนแปลง<br />ก็ต้องมี run puppeteer ใหม่ทุกครั้ง ซึ่งกิน resource น่าดู<br />จึงทำการแยกส่วนงานนี้ออกไปอีกเครื่อง<br />รวมทั้งเรื่องการ monitoring task การทำงานนี้ตลอดเวลาด้วย<br />และทำให้ระบบงานทำการเริ่มซับซ้อนขึ้น</p>\n\n\n\n<p><strong>แต่ผลที่ออกมาก็เป็นที่น่าพอใจ ได้ไปต่อในตอนนี้</strong></p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"dd2f23d09a6d59fde465b2f2df53676f6fc27b0dc223f514a5a1001100dddec6","category":"Thai"}