{"title":"GitOps คืออะไร","link":"https://www.somkiat.cc/gitops-flow/","date":1625734281000,"content":"<p><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/07/gitops-150x150.png\" /></p>\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/07/gitops-1024x640.png\" /></figure>\n\n\n\n<p>หลังจากที่ใช้งานมาสักพักใหญ่ ๆ <br />ก็เลยมาอ่านที่มาที่ไปหน่อยว่า <strong><a href=\"https://www.weave.works/technologies/gitops/\" target=\"_blank\">GitOps</a></strong> เป็นมาอย่างไร<br />จะนำมาจาก <strong><a href=\"https://www.gitops.tech/\" target=\"_blank\">GitOps Tech</a></strong><br />โดย GitOps เริ่มมาตั้งแต่ปี 2017 จากบริษัท Weaveworks<br />ซึ่งมีการพูดคุยที่เยอะมาก ๆ <br />รวมทั้งทำให้เกิดความสับสน<br />จึงทำการสรุปไว้ในบทความข้างต้น <br />เพื่อให้เข้าใจตรงกัน</p>\n\n\n\n<span></span>\n\n\n\n<p><strong>GitOps คืออะไร</strong></p>\n\n\n\n<p>เป็นรูปแบบหนึ่งของการสร้างระบบ Continuous Delivery (CD)<br />สำหรับ cloud native application<br />มีเป้าหมายหลักคือ developer-centric experience<br />นั่นคือใช้เครื่องมือที่ทีมพัฒนาถนัดหรือใช้งานอยู่แล้ว<br />ทั้ง Git และ CD tool ต่าง ๆ<br /><br /><strong>แนวคิดหลักคือ การเก็บสิ่งต่าง ๆ ที่จำเป็นต่อการสร้าง</strong></p>\n\n\n\n<ul><li>Infrastructure</li><li>Environment</li><li>Automation process</li></ul>\n\n\n\n<p>ไว้ใน Git repository<br />ดังนั้นถ้าต้องการ deploy ระบบงานใน version ใหม่<br />ก็เพียงทำการ update ข้อมูลใน Git repository เท่านั้น<br />จะ trigger ให้การทำงานแบบอัตโนมัติขึ้นมาตาม pipeline ที่กำหนดไว้</p>\n\n\n\n<p><strong>ทำไมต้องใช้งาน GitOps</strong></p>\n\n\n\n<ul><li>ง่ายต่อการ deploy ทำให้ deploy ได้เร็วและบ่อยขึ้น</li><li>เมื่อเกิดปัญหา สามารถ recovery กลับมาได้ง่ายและเร็วขึ้น (git revert)</li><li>ง่ายต่อการจัดการเรื่องของ credentail ต่าง ๆ เพราะว่า GitOps จะทำงานใน environment นั้น ๆ เลย ส่วนทีมพัฒนาไม่สามารถเข้าถึง environment ต่าง ๆ ได้</li><li>ทุก ๆ การเปลี่ยนแปลงจะอยู่ใน Git repository ทำให้เราเก็บ history ของการ deploy ไว้ได้ทั้งหมด ตอบโจทย์เรื่องของการ audit อย่างมาก และรู้ทั้งหมดว่าเกิดอะไรขึ้นบ้าง</li><li>สิ่งต่าง ๆ จะอยู๋ใน Git repository ทำให้สามารถ share ความรู้เกี่ยวกับการทำงานได้เลย ไม่ต้องกระโดดไปมาหลาย ๆ ที่ หลาย ๆ ระบบ</li></ul>\n\n\n\n<p><strong>GitOps ทำงานอย่างไร</strong></p>\n\n\n\n<p>เริ่มจากการทำงานจะทำงานผ่าน Git repository<br />แบ่งออกเป็น 2 repository คือ</p>\n\n\n\n<ul><li><strong>application</strong> คือ source code ต่าง ๆ ของระบบงาน และ manifest file ต่าง ๆ ในการ deploy ระบบ</li><li><strong>environment configuration</strong> คือ configuration สำหรับการสร้าง infrastructure ของ environment ที่ใช้ deploy ระบบงาน เช่น messaging broker และ monitoring tool เป็นต้น รวมไปถึงเรื่องการจัดการ version อีกด้วย</li></ul>\n\n\n\n<p><strong>การทำงานมีทั้งแบบ Push และ Pull deployment</strong></p>\n\n\n\n<p><strong>Push deployment</strong></p>\n\n\n\n<p>คือรูปแบบการทำงานปกติของ CI/CD tool ต่าง ๆ เช่น</p>\n\n\n\n<ul><li>Jenkins</li><li>CircleCI</li><li>TravisCI</li><li>Cloud build ใน GKE</li></ul>\n\n\n\n<p>การทำงานง่าย ๆ คือ <br />เมื่อ Git repository มีการเปลี่ยนแปลงก็จะ trigger ให้ pipeline ทำงาน <br />ไปจนถึง trigger ให้ทำการ deploy<br />มีขั้นตอนการทำงานดังรูป</p>\n\n\n\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/07/push-1024x307.png\" /></figure>\n\n\n\n<p><strong>ตัวอย่างการทำงานของ <a href=\"https://cloud.google.com/kubernetes-engine/docs/tutorials/gitops-cloud-build\" target=\"_blank\">Google cloud build</a></strong></p>\n\n\n\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/07/Screen-Shot-2564-07-08-at-15.46.46-1024x497.png\" /></figure>\n\n\n\n<p><strong>Pull deployment</strong></p>\n\n\n\n<p>มีความต่างตรงการ deploy<br />แทนที่จะทำการ trigger เพื่อ deploy เมื่อมีการเปลี่ยนแปลง<br />จะใช้แนวคิดของ <strong>operator</strong> เข้ามาช่วยในการทำงาน<br /><br /><strong>ซึ่ง Operator จะคอยเฝ้าดูว่า</strong><br />state หรือ version ของ environment repository <br />กับ state ของระบบที่ทำงาน deploy นั้น<br />เหมือนหรือต่างกันหรือไม่<br />ถ้าต่างกันก็จะทำการ deploy ให้ทันที<br /><br />รวมทั้ง operator จะอยู่ใน enviroment เดียวกันกับการที่จะ deploy นั่นเอง<br />เพื่อลดปัญหาเรื่องของ permission แบบไม่ปกติ<br />จาก push deployment (God-mode !!)<br />อีกทั้งตัดปัญหาเรื่องการจัดการ credential ไปได้<br />แสดงดังรูป</p>\n\n\n\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/07/pull-1024x300.png\" /></figure>\n\n\n\n<p><strong>และช่วยให้ง่ายต่อการ deploy ระบบงานในหลาย ๆ Enviroment อีกด้วย</strong></p>\n\n\n\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/07/multiple-1024x270.png\" /></figure>\n\n\n\n<p><strong>จากแนวคิดต่าง ๆ เหล่านี้ ทำให้เกิด implementation ต่าง ๆ ตามมา</strong></p>\n\n\n\n<p>เช่น GitOps operator ใน Kubernetes cluster เช่น</p>\n\n\n\n<ul><li><a href=\"https://argoproj.github.io/argo-cd/\" target=\"_blank\">ArgoCD</a></li><li><a href=\"https://fluxcd.io/\" target=\"_blank\">FluxCD</a></li><li><a href=\"https://www.jenkins.io/projects/jenkins-operator/\" target=\"_blank\">Jenkins operator</a></li></ul>\n\n\n\n<p><strong>ตัวอย่าง GitOps บน Kubernetes cluster ซึ่งเป็น Pull deployment</strong></p>\n\n\n\n<figure><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/07/demo-gitops-1024x671.png\" /></figure>\n\n\n\n<p><strong>DevOps คือการเปลี่ยน culture ขององค์กร เพื่อช่วยให้คนทำงานร่วมกันได้ดีขึ้น</strong></p>\n\n\n\n<p>ส่วน GitOps คือเทคนิคในการสร้างระบบ Continuous Delivery<br />โดยทั้งคู่จะมีแนวคิดเหมือนกันคือ</p>\n\n\n\n<ul><li>Automation process</li><li>Self-service infrastructure</li></ul>\n\n\n\n<p>ดังนั้นการสร้าง GitOps workflow จะง่ายขึ้นเมื่อนำ DevOps มาปรับใช้งานแล้ว</p>\n","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"922d5efb3bbfa10603259be2017fc24c16dabb3fa2f7f60eb71e6acbc75b0dbf","category":"Thai"}