{"title":"Amplify Flutter is Now Generally Available: Build Beautiful Cross-Platform Apps","link":"https://aws.amazon.com/blogs/aws/amplify-flutter-is-now-generally-available-build-beautiful-cross-platform-apps/","date":1613426647000,"content":"<p><a href=\"https://aws-amplify.github.io/\" title=\"AWS Amplify\">AWS Amplify</a> is a set of tools and services for building secure, scalable mobile and web applications. Currently, Amplify supports iOS, Android, and JavaScript (web and React Native) and is the quickest and easiest way to build applications powered by Amazon Web Services (AWS).</p> \n<p>Flutter is Google’s UI toolkit for building natively compiled mobile, web, and desktop applications from a single code base and is one of the fastest-growing mobile frameworks.</p> \n<p><a href=\"https://docs.amplify.aws/start/q/integration/flutter\" title=\"\">Amplify Flutter</a> brings together <span title=\"\">AWS Amplify</span> and Flutter, and we designed it for customers who have invested in the Flutter ecosystem and now want to take advantage of the power of AWS.</p> \n<p>In August 2020, we launched the developer preview of <span title=\"\">Amplify Flutter</span> and asked for feedback. We were delighted with the response. After months of refining the service, today we are happy to announce the general availability of <span title=\"\">Amplify Flutter</span>.</p> \n<p><strong><span style=\"text-decoration: underline;\">New <span title=\"\">Amplify Flutter</span> Features in GA</span><br /> </strong>The GA release makes it easier to build powerful Flutter apps with the addition of three new capabilities:</p> \n<p>First, we recently added a <a href=\"https://docs.amplify.aws/lib/graphqlapi/getting-started/q/platform/flutter\">GraphQL API</a> backed by <a href=\"https://aws.amazon.com/appsync/\" title=\"\">AWS AppSync</a> as well as REST APIs and handlers using <a href=\"http://aws.amazon.com/apigateway\" title=\"\">Amazon API Gateway</a> and <a href=\"https://aws.amazon.com/lambda/\" title=\"\">AWS Lambda</a>.</p> \n<p>Second, Amplify DataStore provides a programming model for leveraging shared and distributed data without writing additional code for offline and online scenarios, which makes working with distributed, cross-user data just as simple as working with local-only data.</p> \n<p>Finally, we have Hosted UI which is a great way to implement authentication, and works with <a href=\"https://aws.amazon.com/cognito/\" title=\"\">Amazon Cognito</a> and other social identity providers such as Facebook, Google and Amazon. Hosted UI is a customizable OAuth 2.0 flow that allows you to launch a login screen without embedding the SDK for Cognito or a social provider in your application.</p> \n<p><span style=\"text-decoration: underline;\"><strong>Digging Deeper Into Amplify DataStore<br /> </strong></span>I have been building an app over the past two weeks using <span title=\"\">Amplify Flutter</span>, and my favorite feature is Amplify DataStore, primarily because it has saved me so much time.</p> \n<p>Working with the REST and GraphQL APIs is great in Amplify. However, when I create a mobile app, I’m often thinking about what happens when the mobile device has intermittent connectivity and can’t connect to the API endpoints. Storing data locally and syncing back to the cloud can become quite complicated. Amplify DataStore solves that problem by providing a persistent on-device data store that handles the offline or online scenario.</p> \n<p>When I started developing my app, I used DataStore as a stand-alone local database. However, its power became apparent to me when I connected it to a cloud backend. DataStore uses my AWS AppSync API to sync data when network connectivity is available. If the app is offline, it stores it locally, ready for when a connection becomes available.</p> \n<p>Amplify DataStore automatically versions data and implements conflict detection and resolution in the cloud using AppSync. The toolchain also generates object definitions for Dart based on the GraphQL schema that I provide.</p> \n<p><span style=\"text-decoration: underline;\"><strong>Writing to Amplify DataStore</strong></span><br /> Writing to the DataStore is straightforward. The <a href=\"https://docs.amplify.aws/lib/datastore/getting-started/q/platform/flutter#writing-to-the-database\">documentation site</a> shows an example that you can try yourself that uses a schema from a blog site.</p> \n<pre><code class=\"lang-dart\">Post newPost = Post(\n    title: 'New Post being saved', rating: 15, status: PostStatus.DRAFT);\nawait Amplify.DataStore.save(newPost);\n</code></pre> \n<p><span style=\"text-decoration: underline;\"><strong>Reading from Amplify DataStore</strong></span><br /> To read from the DataStore, you can query for all records of a given model type.</p> \n<pre><code class=\"lang-dart\">try {\n&nbsp; &nbsp;List&lt;Post&gt; posts = await Amplify.DataStore.query(Post.classType);\n&nbsp;} catch (e) {\n&nbsp; &nbsp;print(&quot;Query failed: &quot; + e);\n&nbsp;}</code></pre> \n<p><strong><span style=\"text-decoration: underline;\">Synchronization with Amplify DataStore</span><br /> </strong>If you enable data synchronization, there can be different versions of an object across clients, and multiple clients may have updated their copies of an object. DataStore will converge different object versions by applying conflict detection and resolution strategies. The default resolution is called Auto Merge, but other strategies include optimistic concurrency control and custom Lambda functions.</p> \n<p><span style=\"text-decoration: underline;\"><strong>Additional <span title=\"\">Amplify Flutter</span> Features<br /> </strong></span><span title=\"\">Amplify Flutter</span> allows you to work with AWS in three additional ways:</p> \n<ul> \n <li style=\"padding-bottom: 0.5em;\"><strong>Authentication</strong>. <span title=\"\">Amplify Flutter</span> provides an interface for authenticating a user and enables use cases like Sign-Up, Sign-In, and Multi-Factor Authentication. Behind the scenes, it provides the necessary authorization to the other Amplify categories. It comes with built-in support for Cognito user pools and identity pools.</li> \n <li style=\"padding-bottom: 0.5em;\"><strong>Storage.</strong> <span title=\"\">Amplify Flutter</span> provides an interface for managing user content for your app in public, protected, or private storage buckets. It enables use cases like upload, download, and deleting objects and provides built-in support for <a href=\"https://aws.amazon.com/s3/\" title=\"\">Amazon Simple Storage Service (S3)</a> by default.</li> \n <li style=\"padding-bottom: 0.5em;\"><strong>Analytics</strong>. <span title=\"\">Amplify Flutter</span> enables you to collect tracking data for authenticated or unauthenticated users in <a href=\"https://aws.amazon.com/pinpoint/\" title=\"\">Amazon Pinpoint</a>. You can easily record events and extend the default functionality for custom metrics or attributes as needed.</li> \n</ul> \n<p><span style=\"text-decoration: underline;\"><strong>Available Now<br /> </strong></span><span title=\"\">Amplify Flutter</span> is now available in GA in all regions that support <a href=\"https://aws-amplify.github.io/\" title=\"AWS Amplify\">AWS Amplify</a>. There is no additional cost for using <span title=\"\">Amplify Flutter</span>; you only pay for the backend services your applications use above the free tier; check out the <a href=\"https://aws.amazon.com/amplify/pricing/.\">pricing page</a>&nbsp;for more details.</p> \n<p><strong>Visit the <a href=\"https://docs.amplify.aws/start/q/integration/flutter\">Amplify Flutter documentation</a> to get started and learn more. Happy coding.</strong></p> \n<a href=\"https://twitter.com/thebeebs\" title=\"Martin on Twitter\">— Martin</a>","author":"Martin Beeby","siteTitle":"AWS News Blog","siteHash":"6093e072e4117ec22616e844cb857d03ca62c57a411a8affc77cb5e8b6b15bf6","entryHash":"7ead85d5ede1a203f1ae8a4be9b98269ddb64699b1358070bd195a6014c0689d","category":"Tech"}