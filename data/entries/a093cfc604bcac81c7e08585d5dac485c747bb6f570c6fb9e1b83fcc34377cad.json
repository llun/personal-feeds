{"title":"ชนิดของ Technical Debt ที่น่าสนใจ","link":"https://www.somkiat.cc/types-of-technical-debt/","date":1618126613000,"content":"<p><img width=\"150\" height=\"150\" src=\"https://www.somkiat.cc/wp-content/uploads/2021/04/debt-cycle-150x150.png\" class=\"attachment-post-thumbnail size-post-thumbnail wp-post-image\" alt=\"\" srcset=\"https://www.somkiat.cc/wp-content/uploads/2021/04/debt-cycle-150x150.png 150w, https://www.somkiat.cc/wp-content/uploads/2021/04/debt-cycle-75x75.png 75w\" sizes=\"(max-width: 150px) 100vw, 150px\" /></p><!-- wp:paragraph -->\n<p>Technical Debt หรือ หนี้เชิงเทคนิคนั้นมีที่มาหลายอย่างทั้ง</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>การปล่อยระบบออกสู่ตลาดเร็วเกินไป ส่งผลให้คุณภาพลดลง</li><li>ค่าใช้จ่ายที่มีอยู่อย่างจำกัด</li><li>เรื่องของการออกแบบและตัดสินใจ ซึ่งล้วนมี tradeoff เสมอ</li><li>เราไม่ได้อะไรมาแบบฟรี ๆ ต้องมีสิ่งแลกเปลี่ยนเสมอ</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>ส่งผลให้ยากต่อการดูแลรักษาต่อไป</p>\n<!-- /wp:paragraph -->\n\n\n<span id=\"more-21831\"></span>\n\n\n<!-- wp:paragraph {\"customFontSize\":25} -->\n<p style=\"font-size:25px\"><strong>จากบทความเรื่อง <a href=\"https://betterprogramming.pub/technical-debt-and-tradeoffs-in-engineering-4a8696d8a95e\" target=\"_blank\" rel=\"noreferrer noopener\">Technical Debt and Tradeoffs in Engineering</a></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>แบ่งชนิดของ Technical Debt ออกเป็นดังนี้</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Knowledge Debt</li><li>Technology Debt</li><li>Code Debt</li><li>Architecture Debt</li><li>Testing Debt</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph {\"fontSize\":\"medium\"} -->\n<p class=\"has-medium-font-size\"><strong>ได้อธิบายอย่างน่าสนใจว่า</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Software development process นั้นเป็นกระบวนการที่ไม่มีที่สิ้นสุด<br>จะวนทำซ้ำไปเรื่อย ๆ <br>ดังนั้นเรื่องของการรับฟัง feedback ทั้งจากผู้ใช้งาน ทั้งจากคนสร้าง<br>เพื่อนำมาปรับปรุงจึงเป็นสิ่งที่สำคัญมาก ๆ</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>ยกตัวอย่างเช่น </strong><br>สิ่งที่เราสร้างขึ้นมา <br>มันทำให้เราช้าลงหรือเร็วขึ้น<br>สิ่งที่เราคิดว่า จะเข้ามาแก้ไขปัญหา มันกลับสร้างปัญหาหรือไม่<br>ความรู้ที่เรามี มันเพียงพอต่อสิ่งที่เราทำหรือไม่<br>การทดสอบหรือ validate ระบบงานมันช้า หรือ ทำซ้ำไม่ได้หรือไม่<br>หรือเรื่อง technology ที่เราเลือกใช้งาน มันทำให้เราช้าหรือไม่<br></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong><em>ดังนั้น เราต้องยอมรับก่อนว่า เรามีปัญหา<br>จากนั้นมาดูว่าปัญหาคืออะไร และ จะปรับแก้อย่างไร<br>ลงมือแก้ไข วัดผล และวนซ้ำไป</em></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":21833,\"width\":496,\"height\":428,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large is-resized\"><img src=\"https://www.somkiat.cc/wp-content/uploads/2021/04/debt-cycle.png\" alt=\"\" class=\"wp-image-21833\" width=\"496\" height=\"428\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph {\"customFontSize\":25} -->\n<p style=\"font-size:25px\"><strong>เป็นเรื่องปกติของการพัฒนา software ที่จะต้องมี technical debt</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>แต่เราได้กลับมาดูแลหรือจ่ายหนี้เหล่านั้นคืนอยู่อย่างเป็นประจำหรือไม่<br>หรือทำการสร้างหนี้ไปเรื่อยจนถึงวันหนึ่งมันกลับมาทำร้ายเราเอง <br>โดยที่ไม่มีแม้โอกาสจะแก้ตัว<br>เพราะว่าปัญหามันใหญ่โตเกินที่จะควบคุมไปแล้ว</p>\n<!-- /wp:paragraph -->","author":"somkiat","siteTitle":"cc :: somkiat","siteHash":"3a23a5a4389e1e40c6fbb16520a8cc20df5b3591c25145ce72aaa18b19e48201","entryHash":"a093cfc604bcac81c7e08585d5dac485c747bb6f570c6fb9e1b83fcc34377cad","category":"Thai"}